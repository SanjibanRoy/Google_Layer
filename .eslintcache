[{"E:\\sanjiv\\CODE\\nerdrr\\src\\index.js":"1","E:\\sanjiv\\CODE\\nerdrr\\src\\App.js":"2","E:\\sanjiv\\CODE\\nerdrr\\src\\reportWebVitals.js":"3","E:\\sanjiv\\CODE\\nerdrr\\src\\app\\store.js":"4","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\Map.js":"5","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\InfoBox.js":"6","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\SideBarWrapper.js":"7","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\LayerInfo.js":"8","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\StatsBox.js":"9","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\Infowrapper.js":"10","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\FocusBox.js":"11","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\SwipePanel.js":"12","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\Searchbox.js":"13","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\NavigationBox.js":"14","E:\\sanjiv\\CODE\\nerdrr\\src\\features\\layers\\layerslice.js":"15","E:\\sanjiv\\CODE\\nerdrr\\src\\features\\layers\\layervisualiseslice.js":"16","E:\\sanjiv\\CODE\\nerdrr\\src\\features\\layers\\overlaylayerslice.js":"17","E:\\sanjiv\\CODE\\nerdrr\\src\\features\\layers\\appslice.js":"18","E:\\sanjiv\\CODE\\nerdrr\\src\\features\\layers\\infoboxslice.js":"19","E:\\sanjiv\\CODE\\nerdrr\\src\\features\\layers\\swipemapslice.js":"20","E:\\sanjiv\\CODE\\nerdrr\\src\\features\\layers\\layerinfoslice.js":"21","E:\\sanjiv\\CODE\\nerdrr\\src\\features\\layers\\baselayerslice.js":"22","E:\\sanjiv\\CODE\\nerdrr\\src\\features\\maps\\mapZoomSlice.js":"23","E:\\sanjiv\\CODE\\nerdrr\\src\\features\\maps\\mapStateSlice.js":"24","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\Legend.js":"25","E:\\sanjiv\\CODE\\nerdrr\\src\\config.js":"26","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\SwpieMapControl.js":"27","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\AddAnalyticsLayer.js":"28","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\AddTimeseries.js":"29","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\Info.js":"30","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\SidePanel.js":"31","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\LayerTree.js":"32","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\BaseSwitcher.js":"33","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\AlertPanel.js":"34","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\AnalyticsPanel.js":"35","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\AppsPanel.js":"36","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\ToolsPanel.js":"37","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\collapsebutton.js":"38","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\Statdatatable.js":"39","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\Stats.js":"40","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\Layer.js":"41","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\AnalyticsAnalysis.js":"42","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\AnalyticsVisualise.js":"43","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\ProximityTool.js":"44","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\TimeSlider.js":"45","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\Legen.js":"46","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\VectorTile.js":"47"},{"size":788,"mtime":1624852855596,"results":"48","hashOfConfig":"49"},{"size":1838,"mtime":1624878745690,"results":"50","hashOfConfig":"49"},{"size":375,"mtime":1624852855596,"results":"51","hashOfConfig":"49"},{"size":1164,"mtime":1624852855464,"results":"52","hashOfConfig":"49"},{"size":7083,"mtime":1624948794570,"results":"53","hashOfConfig":"49"},{"size":1303,"mtime":1624943971714,"results":"54","hashOfConfig":"49"},{"size":3877,"mtime":1624852855587,"results":"55","hashOfConfig":"49"},{"size":1988,"mtime":1624852855560,"results":"56","hashOfConfig":"49"},{"size":1340,"mtime":1624858053371,"results":"57","hashOfConfig":"49"},{"size":3773,"mtime":1624852855559,"results":"58","hashOfConfig":"49"},{"size":1343,"mtime":1624852855556,"results":"59","hashOfConfig":"49"},{"size":2067,"mtime":1624852855589,"results":"60","hashOfConfig":"49"},{"size":3699,"mtime":1624852855587,"results":"61","hashOfConfig":"49"},{"size":7620,"mtime":1624878793853,"results":"62","hashOfConfig":"49"},{"size":940,"mtime":1624852855594,"results":"63","hashOfConfig":"49"},{"size":697,"mtime":1624852855594,"results":"64","hashOfConfig":"49"},{"size":879,"mtime":1624852855594,"results":"65","hashOfConfig":"49"},{"size":565,"mtime":1624852855592,"results":"66","hashOfConfig":"49"},{"size":585,"mtime":1624852855593,"results":"67","hashOfConfig":"49"},{"size":611,"mtime":1624852855595,"results":"68","hashOfConfig":"49"},{"size":584,"mtime":1624852855593,"results":"69","hashOfConfig":"49"},{"size":595,"mtime":1624852855593,"results":"70","hashOfConfig":"49"},{"size":804,"mtime":1624878793863,"results":"71","hashOfConfig":"49"},{"size":756,"mtime":1624852855595,"results":"72","hashOfConfig":"49"},{"size":1875,"mtime":1624938213486,"results":"73","hashOfConfig":"49"},{"size":22357,"mtime":1624938213490,"results":"74","hashOfConfig":"49"},{"size":2741,"mtime":1624852855589,"results":"75","hashOfConfig":"49"},{"size":3128,"mtime":1624938213482,"results":"76","hashOfConfig":"49"},{"size":944,"mtime":1624852855466,"results":"77","hashOfConfig":"49"},{"size":6478,"mtime":1624942651369,"results":"78","hashOfConfig":"49"},{"size":2317,"mtime":1624852855588,"results":"79","hashOfConfig":"49"},{"size":852,"mtime":1624852855561,"results":"80","hashOfConfig":"49"},{"size":1695,"mtime":1624852855555,"results":"81","hashOfConfig":"49"},{"size":2358,"mtime":1624852855551,"results":"82","hashOfConfig":"49"},{"size":2005,"mtime":1624852855553,"results":"83","hashOfConfig":"49"},{"size":1930,"mtime":1624938213483,"results":"84","hashOfConfig":"49"},{"size":3632,"mtime":1624948696142,"results":"85","hashOfConfig":"49"},{"size":3801,"mtime":1624941579327,"results":"86","hashOfConfig":"49"},{"size":8750,"mtime":1624944238202,"results":"87","hashOfConfig":"49"},{"size":9031,"mtime":1624854466312,"results":"88","hashOfConfig":"49"},{"size":2693,"mtime":1624852855559,"results":"89","hashOfConfig":"49"},{"size":6874,"mtime":1624852855552,"results":"90","hashOfConfig":"49"},{"size":8788,"mtime":1624852855553,"results":"91","hashOfConfig":"49"},{"size":5722,"mtime":1624948508192,"results":"92","hashOfConfig":"49"},{"size":996,"mtime":1624852855590,"results":"93","hashOfConfig":"49"},{"size":669,"mtime":1624938213485,"results":"94","hashOfConfig":"49"},{"size":1699,"mtime":1624938213489,"results":"95","hashOfConfig":"49"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},"18u0az",{"filePath":"99","messages":"100","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"101","usedDeprecatedRules":"98"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"110","messages":"111","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"98"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"115","usedDeprecatedRules":"98"},{"filePath":"116","messages":"117","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"120","usedDeprecatedRules":"98"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"98"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"98"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"98"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"132","usedDeprecatedRules":"98"},{"filePath":"133","messages":"134","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"139","messages":"140","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"141","usedDeprecatedRules":"98"},{"filePath":"142","messages":"143","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"144","messages":"145","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"146","messages":"147","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"148","messages":"149","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"150","usedDeprecatedRules":"98"},{"filePath":"151","messages":"152","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"153","messages":"154","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"155","messages":"156","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"157","usedDeprecatedRules":"98"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"160","usedDeprecatedRules":"98"},{"filePath":"161","messages":"162","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"163","usedDeprecatedRules":"98"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"166","usedDeprecatedRules":"98"},{"filePath":"167","messages":"168","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"169","usedDeprecatedRules":"98"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"98"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"177","messages":"178","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"183","messages":"184","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"185","usedDeprecatedRules":"98"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"188","messages":"189","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"190","messages":"191","errorCount":0,"warningCount":36,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"192","messages":"193","errorCount":0,"warningCount":23,"fixableErrorCount":0,"fixableWarningCount":0,"source":"194","usedDeprecatedRules":"98"},{"filePath":"195","messages":"196","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"98"},{"filePath":"197","messages":"198","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":"199","usedDeprecatedRules":"98"},{"filePath":"200","messages":"201","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"98"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"205","messages":"206","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"207","usedDeprecatedRules":"98"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"210","usedDeprecatedRules":"98"},{"filePath":"211","messages":"212","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"213","usedDeprecatedRules":"98"},"E:\\sanjiv\\CODE\\nerdrr\\src\\index.js",[],["214","215"],"E:\\sanjiv\\CODE\\nerdrr\\src\\App.js",["216","217","218","219"],"import { useState } from \"react\";\r\nimport Map from \"./components/Map\";\r\nimport InfoBox from \"./components/InfoBox\";\r\nimport Legend from \"./components/Legend\";\r\nimport SideBarWrapper from \"./components/SideBarWrapper\";\r\nimport { panelVisibilty } from \"./config\";\r\nimport LayerInfo from \"./components/LayerInfo\";\r\nimport StatsBox from \"./components/StatsBox\";\r\nimport FocusBox from \"./components/FocusBox\";\r\nimport Infowrapper from \"./components/Infowrapper\";\r\nimport SwipePanel from \"./components/SwipePanel\";\r\nimport Searchbox from \"./components/Searchbox\";\r\nimport NavigationBox from \"./components/NavigationBox\";\r\nconst App = () => {\r\n  const [visibility, setVisibility] = useState(panelVisibilty);\r\n  const [panel, setPanel] = useState(false);\r\n  //toggle visibility\r\n  const changeVisibility = (id) => {\r\n    setVisibility(\r\n      visibility.map((task) =>\r\n        (task.id === id) & task.show\r\n          ? { ...task, show: true, panel: false }\r\n          : task.id === id\r\n          ? { ...task, show: true, panel: true }\r\n          : { ...task, show: false }\r\n      )\r\n    );\r\n\r\n    visibility.map((task) => (task.id === id) & task.show && setPanel(!panel));\r\n    //changeVisibility: false\r\n    // console.log(visibility);\r\n    //content\r\n  };\r\n  return (\r\n    <div className=\"container\">\r\n      <SideBarWrapper\r\n        visibility={visibility}\r\n        changeVisibility={changeVisibility}\r\n        showPanel={panel}\r\n      />\r\n     {/* {<Searchbox/>} */}\r\n     {false && <NavigationBox/>}\r\n      <Map visibility={visibility} />\r\n      {visibility.filter((e) => e.id === \"Tools\")[0].show && (\r\n        <SwipePanel />\r\n      )}\r\n      {/* <FocusBox /> */}\r\n      <Infowrapper visibility={visibility} />\r\n      {/* <InfoBox />\r\n      <StatsBox/>*/}\r\n      <LayerInfo />\r\n      <Legend />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n","E:\\sanjiv\\CODE\\nerdrr\\src\\reportWebVitals.js",[],"E:\\sanjiv\\CODE\\nerdrr\\src\\app\\store.js",[],"E:\\sanjiv\\CODE\\nerdrr\\src\\components\\Map.js",["220","221","222","223","224","225","226","227","228","229","230","231"],"E:\\sanjiv\\CODE\\nerdrr\\src\\components\\InfoBox.js",["232"],"E:\\sanjiv\\CODE\\nerdrr\\src\\components\\SideBarWrapper.js",["233","234"],"//import necessary lib\r\nimport React from \"react\";\r\nimport SidePanel from \"./SidePanel\";\r\nimport LayerTree from \"./LayerTree\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport BaseSwitcher from \"./BaseSwitcher\";\r\nimport AlertPanel from \"./AlertPanel\";\r\nimport AppsPanel from \"./AppsPanel\";\r\nimport SwipePanel from \"./SwipePanel\";\r\nimport AnalyticsPanel from \"./AnalyticsPanel\";\r\nimport ToolsPanel from \"./ToolsPanel\"\r\n// import CreatableSelect from 'react-select/creatable';\r\n//end of import\r\n\r\nconst SideBarWrapper = ({\r\n  //   analyticsLayers,\r\n  changeVisibility,\r\n  visibility,\r\n  showPanel,\r\n}) => {\r\n  //Tab view start\r\n  const [value, setValue] = React.useState(0);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  //tab view ends\r\n\r\n  //accordion start\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: \"100%\",\r\n    },\r\n    heading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n      fontWeight: theme.typography.fontWeightRegular,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  //hind show sideBarwarapper start\r\n  var data_filter = visibility.filter((element) => element.show);\r\n  var type = data_filter[0].id;\r\n  // hide show sideBarWrapper ends\r\n\r\n  // ******************************** fatch date data from database End here*******************************\r\n\r\n  //return view\r\n  return (\r\n    <div className=\"SideBarWrapper\">\r\n      {/* load of side panel start */}\r\n      <SidePanel changeVisibility={changeVisibility} visibility={visibility} />\r\n      {/* load of side panel start */}\r\n\r\n      {/* *************Layer Tab start*************** */}\r\n      {showPanel && (\r\n        <React.Fragment>\r\n          <div className={type === \"Layer\" ? \"LayerContainer\" : \"hidden\"}>\r\n            {/* List of map layers */}\r\n            <Paper square>\r\n              <Tabs\r\n                value={value}\r\n                indicatorColor=\"primary\"\r\n                textColor=\"primary\"\r\n                onChange={handleChange}\r\n                aria-label=\"disabled tabs example\"\r\n              >\r\n                <Tab label=\"Base Layers\" />\r\n                <Tab label=\"Overlays\" />\r\n              </Tabs>\r\n            </Paper>\r\n            <div className={value === 0 ? \" \" : \"hidden\"}>\r\n              <BaseSwitcher />\r\n            </div>\r\n            <div className={value === 1 ? \" \" : \"hidden\"}>\r\n              <LayerTree category=\"Administrative\" />\r\n              <LayerTree category=\"Land Use/Land Cover\" />\r\n              <LayerTree category=\"Census\" />\r\n              <LayerTree category=\"Flood\" />\r\n              <LayerTree category=\"Forestry\" />\r\n              <LayerTree category=\"CropDAMS\" />\r\n              <LayerTree category=\"Earthquake/Landslides\" />\r\n              <LayerTree category=\"Lightning\" />\r\n              <LayerTree category=\"Alerts and Early Warning\" />\r\n            </div>\r\n          </div>\r\n          {/* *************Layer Tab end*************** */}\r\n\r\n          {/* *************Vegetation Tab start*************** */}\r\n          <div className={type === \"Apps\" ? \"LayerContainer\" : \"hidden\"}>\r\n            <AppsPanel />\r\n          </div>\r\n          <div className={type === \"Alert\" ? \"LayerContainer\" : \"hidden\"}>\r\n            <AlertPanel />\r\n          </div>\r\n          {/* <div className={type === \"Tools\" ? \"LayerContainer\" : \"hidden\"}>\r\n            <SwipePanel />\r\n          </div> */}\r\n          <div className={type === \"Stats\" ? \"LayerContainer\" : \"hidden\"}>\r\n            <AnalyticsPanel />\r\n          </div>\r\n          <div className={type === \"Search\" ? \"LayerContainer\" : \"hidden\"}>\r\n            <ToolsPanel />\r\n          </div>\r\n        </React.Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideBarWrapper;\r\n","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\LayerInfo.js",["235","236"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { selectLayerInfo,setLayerInfoDetails } from \"../features/layers/layerinfoslice\";\r\nimport { useEffect } from \"react\";\r\n\r\nfunction rand() {\r\n  return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n  const top = 30;\r\n  const left = 50;\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: 800,\r\n    backgroundColor: theme.palette.background.paper,\r\n  //  border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    borderRadius :0\r\n  },\r\n}));\r\n\r\nconst LayerInfo = () => {\r\n  const state = useSelector(selectLayerInfo);\r\n  console.log(state)\r\n  const classes = useStyles();\r\n  // getModalStyle is not a pure function, we roll the style only on the first render\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n  const [open, setOpen] = React.useState(false);\r\n   const dispatch = useDispatch()\r\n  const handleOpen = () => {\r\n\r\n    setOpen(state.show);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    // console.log(\"Here\");\r\n    dispatch(\r\n      setLayerInfoDetails({ show: false })\r\n    );\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleOpen();\r\n  }, [state]);\r\n  const body = (\r\n    <div style={modalStyle} className={classes.paper}>\r\n      <h2 id=\"simple-modal-title\">{state.dataset}</h2>\r\n      <p id=\"simple-modal-description\">{state.info}</p>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        {body}\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LayerInfo;\r\n","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\StatsBox.js",[],"E:\\sanjiv\\CODE\\nerdrr\\src\\components\\Infowrapper.js",["237","238","239","240","241","242"],"import React from \"react\";\r\nimport LayerInfo from \"./LayerInfo\";\r\nimport StatsBox from \"./StatsBox\";\r\nimport FocusBox from \"./FocusBox\";\r\nimport styled from \"styled-components\";\r\nimport InfoBox from \"./InfoBox\";\r\nimport Cbutton from \"./collapsebutton\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setInfoDetails } from \"../features/layers/infoboxslice\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { selectLayerDataSet } from \"../features/layers/overlaylayerslice\";\r\nimport { selectMapstate } from \"../features/maps/mapStateSlice\";\r\n\r\nconst Infowrapper = () => {\r\n  const [featureInfo, setFeatureInfo] = useState({\r\n    data: [],\r\n    isFetching: false,\r\n  });\r\n  const dispatch = useDispatch();\r\n  const state = useSelector(selectMapstate);\r\n  let info = state.overlays.filter((layers) => layers.class !== \"Lightning\")[0];\r\n\r\n  const overlayLayers = useSelector(selectLayerDataSet);\r\n  const activelayers = overlayLayers.filter((e) => e.show).map((e) => e.text);\r\n  if (\r\n    activelayers.includes(\"State Boundary\") &\r\n    activelayers.includes(\"District Boundary\")\r\n  ) {\r\n     info = state.overlays.filter((layers) => layers.class !== \"Lightning\")[1];\r\n\r\n  }else{\r\n     info = state.overlays.filter((layers) => layers.class !== \"Lightning\")[0];\r\n\r\n  }\r\n  const getInfo = async () => {\r\n    try {\r\n      setFeatureInfo({ data: [], isFetching: true });\r\n\r\n      // console.log(formData);\r\n      fetch(\r\n        info.link +\r\n          \"?SERVICE=WMS&VERSION=1.1.1&REQUEST=GetFeatureInfo&QUERY_LAYERS=\" +\r\n          info.layer +\r\n          \"&LAYERS=\" +\r\n          info.layer +\r\n          \"&INFO_FORMAT=application/json&FEATURE_COUNT=50&X=\" +\r\n          state.point.x +\r\n          \"&Y=\" +\r\n          state.point.y +\r\n          \"&WIDTH=\" +\r\n          state.shape.x +\r\n          \"&HEIGHT=\" +\r\n          state.shape.y +\r\n          \"&BBOX=\" +\r\n          state.bounds,\r\n        {\r\n          method: \"GET\",\r\n        }\r\n      )\r\n        .then((response) => response.json())\r\n        .then((result) => {\r\n          // console.log(result);\r\n          if (\r\n            activelayers.includes(\"State Boundary\") &\r\n            activelayers.includes(\"District Boundary\")\r\n          ) {\r\n            result.features[0].properties.dtname !== undefined &&\r\n              dispatch(\r\n                setInfoDetails({\r\n                  statename: result.features[0].properties.stname,\r\n                  distname: result.features[0].properties.dtname,\r\n                })\r\n              );\r\n          } else {\r\n            result.features.length > 0 &&\r\n              dispatch(\r\n                // result.features[0].properties.dtname !== undefined &&\r\n                setInfoDetails({\r\n                  statename: result.features[0].properties.stname,\r\n                  // distname: result.features[0].properties.dtname,\r\n                })\r\n              );\r\n          }\r\n          // );\r\n          // result.features[0].properties.dtname !== undefined;\r\n\r\n           setFeatureInfo({ data: result.features, isFetching: false });\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error:\", error);\r\n          setFeatureInfo({ ...featureInfo, isFetching: false });\r\n        });\r\n      setFeatureInfo({ ...featureInfo, isFetching: true });\r\n    } catch (exception) {\r\n      console.log(exception);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // console.log(state);\r\n    // console.log(info);\r\n    // AddAnalytics()\r\n    getInfo();\r\n  }, [state, info]);\r\n  return (\r\n    <Wrapper>\r\n      {<Cbutton />}\r\n    </Wrapper>\r\n  );\r\n};\r\nexport default Infowrapper;\r\nconst Wrapper = styled.div`\r\n  color: white;\r\n  top: 0px;\r\n  right: 0px;\r\n  position: absolute;\r\n  z-index: 100000;\r\n`;\r\n","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\FocusBox.js",["243"],"import React from \"react\";\r\nimport Stats from \"./Stats\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectInfo } from \"../features/layers/infoboxslice\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\n\r\nconst FocusBox = () => {\r\n  const state = useSelector(selectInfo);\r\n // console.log(state);\r\n  return (\r\n    <InfoBoxx>\r\n      <React.Fragment>\r\n        {state.districtname !== undefined ? (\r\n          <p>\r\n            <InfoIcon />\r\n            Area of Focus: {state.districtname} (District)\r\n          </p>\r\n        ) : (\r\n          <p>\r\n            <InfoIcon />\r\n            Area of Focus: {state.statename} (State)\r\n          </p>\r\n        )}\r\n      </React.Fragment>\r\n    </InfoBoxx>\r\n  );\r\n};\r\nexport default FocusBox;\r\n\r\nconst InfoBoxx = styled.div`\r\n  right: 0px;\r\n  background: rgba(0, 0, 0, 0.74);\r\n  z-index: 10000;\r\n  max-height: 80%;\r\n  max-width: 20rem;\r\n  overflow-y: none;\r\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25),\r\n    inset 0px 4px 4px rgba(0, 0, 0, 0.25);\r\n  margin-left: 10px;\r\n  margin-right: auto;\r\n  /* width: 20rem; */\r\n  p {\r\n    background: white;\r\n    align-items: center;\r\n    width: 20rem;\r\n    padding: 8px 10px;\r\n    border-bottom: 1px solid #ccc;\r\n    color: black;\r\n  }\r\n  .MuiSvgIcon-root {\r\n    font-size: 16px;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\SwipePanel.js",["244","245","246","247"],"import React from \"react\";\r\nimport {useEffect} from \"react\"\r\nimport { useSelector,useDispatch } from \"react-redux\";\r\nimport { selectLayerDataSet } from \"../features/layers/overlaylayerslice\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport {selectSwipeDataSet,setSwipeLayers} from \"../features/layers/swipemapslice\"\r\nimport styled from \"styled-components\";\r\nconst SwipePanel = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const overlayLayers = useSelector(selectLayerDataSet);\r\n  const swipestate = useSelector(selectSwipeDataSet);\r\n\r\n  const changeRight = (right) => {\r\n    dispatch(setSwipeLayers({\r\n      ...swipestate,\r\n      rightmap:right\r\n    }));\r\n    console.log(right);\r\n  };\r\n  const changeLeft = (left) => {\r\n    dispatch(setSwipeLayers({\r\n      ...swipestate,\r\n      leftmap:left\r\n    }));\r\n    console.log(left);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(setSwipeLayers({\r\n      rightmap:\"\",\r\n      leftmap:\"\"\r\n    }));\r\n  }, [])\r\n  return (\r\n    <Swipe >\r\n\r\n      <select id=\"left\"\r\n        onChange={(event) => {\r\n          changeLeft(event.target.value);\r\n        }}\r\n      >\r\n        {overlayLayers.map(\r\n          (data, index) =>\r\n            data.show && <option value={data.id}> {data.text}</option>\r\n        )}\r\n      </select>\r\n\r\n      <select id=\"right\"\r\n        onChange={(event) => {\r\n          changeRight(event.target.value);\r\n        }}\r\n      >\r\n        {overlayLayers.map(\r\n          (data, index) =>\r\n            data.show && <option value={data.id}> {data.text}</option>\r\n        )}\r\n      </select>\r\n    </Swipe>\r\n  );\r\n};\r\n\r\nexport default SwipePanel;\r\n\r\nconst Swipe = styled.div`\r\n  z-index: 100000000;\r\n  width: 25%;\r\n  display:flex;\r\n  top:0;\r\n  position: absolute;\r\n  background-color: #fff;\r\n  z-index: 10000;\r\n  align-items: center;\r\n  left:30%;\r\n  padding-right: 10%;\r\n#left{\r\n  /* position:absolute; */\r\n  /* left:30%;\r\n  top:0; */\r\n}\r\n\r\n#right{\r\n  /* position:absolute;\r\n  left:60%;\r\n  top:0; */\r\n  margin-left: 50%;\r\n\r\n}\r\n\r\n`","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\Searchbox.js",["248"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setMapBounds } from \"../features/maps/mapZoomSlice\";\r\nimport { useEffect, useState } from \"react\";\r\nvar axios = require(\"axios\");\r\n\r\nconst Searchbox = () => {\r\n  const dispatch = useDispatch();\r\n  const [suggestions, setsuggestions] = useState([]);\r\n  const [value, setvalue] = useState();\r\n  const [showsuggestions, setshowsuggestions] = useState(false)\r\n  const handleClick = (event) => {\r\n    setvalue(event);\r\n    setshowsuggestions(false)\r\n  };\r\n  const suggestLocation = (event) => {\r\n    setshowsuggestions(true)\r\n    setvalue(event);\r\n    var config = {\r\n      method: \"get\",\r\n      url:\r\n        \"https://autocomplete.geocoder.ls.hereapi.com/6.2/suggest.json?apiKey=ArsBpOEL5bGUOCLre5UdBeFKCNgahMq1AfywBFhfgY4&query=\" +\r\n        event,\r\n      // url: 'https://nominatim.openstreetmap.org/search/'+event+'?format=json&addressdetails=1&limit=1&polygon_svg=1',\r\n      headers: {},\r\n    };\r\n\r\n    axios(config)\r\n      .then(function (response) {\r\n        console.log(response);\r\n        response.data.suggestions !== undefined\r\n          ? setsuggestions(response.data.suggestions)\r\n          : setsuggestions([]);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n\r\n  const searchLocation = (event) => {\r\n \r\n    if (event.key === \"Enter\") {\r\n      var config = {\r\n        method: \"get\",\r\n\r\n        url:\r\n          \"https://geocode.search.hereapi.com/v1/geocode?apiKey=ArsBpOEL5bGUOCLre5UdBeFKCNgahMq1AfywBFhfgY4&q=\" +\r\n          event.target.value,\r\n        //   \"?format=json&addressdetails=1&limit=1&polygon_svg=1\",\r\n        headers: {},\r\n      };\r\n\r\n      axios(config)\r\n        .then(function (response) {\r\n          console.log(response);\r\n            let box =response.data.items[0].mapView\r\n          dispatch(\r\n            setMapBounds({\r\n              // lat:\"22\",\r\n              // lon:\"22\",\r\n              bbox: [ box.south,  box.north,box.west,box.east]\r\n            })\r\n          );\r\n        })\r\n        .catch(function (error) {\r\n          console.log(error);\r\n        });\r\n        setshowsuggestions(false)\r\n\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Search>\r\n      <input\r\n        id=\"Location\"\r\n        className=\"input\"\r\n        placeholder=\"Search Location...\"\r\n        value={value}\r\n        onChange={(event) => {\r\n          suggestLocation(event.target.value);\r\n        }}\r\n        onKeyDown={(event) => {\r\n          searchLocation(event);\r\n        }}\r\n        // onBlur ={()=>setshowsuggestions(false)}\r\n      />\r\n      {showsuggestions&& suggestions.map((e) => (\r\n        <li className =\"Locations\"\r\n          onClick={(event) => {\r\n            handleClick(event.target.innerHTML);\r\n            // searchLocation(event.target.innerHTML);\r\n          }}\r\n        >\r\n          {e.label}\r\n        </li>\r\n      ))}\r\n    </Search>\r\n  );\r\n};\r\n\r\nexport default Searchbox;\r\n\r\nconst Search = styled.div`\r\n  .input {\r\n    border: 1px solid #555;\r\n    border-radius: 4px;\r\n    box-shadow: none;\r\n    font-size: 12px;\r\n    font-weight: 400;\r\n    /* width: 5000px; */\r\n    display: block;\r\n    width: 70%;\r\n    height: 34px;\r\n    padding: 6px 12px;\r\n    font-size: 14px;\r\n    line-height: 1.42857143;\r\n    color: #555;\r\n    background-color: #fff;\r\n    margin-top: 10px;\r\n    margin-left: 40px;\r\n    margin-right: 10px;\r\n  }\r\n  .Locations{\r\n    list-style: none;\r\n\r\n    background-color: #fff;\r\n    width: 70%;\r\n    height: 2.5rem;\r\n    padding: 6px 12px;\r\n    margin-left: 40px;\r\n    margin-right: 10px;\r\n    font-size: 14px;\r\n  }\r\n  .Locations:hover{\r\n    background-color: grey;\r\n    border-left: 2px solid orange;\r\n\r\n  }\r\n`;\r\n","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\NavigationBox.js",["249","250","251"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setMapBounds } from \"../features/maps/mapZoomSlice\";\r\nimport { useEffect, useState } from \"react\";\r\nimport Button from \"@material-ui/core/Button\";\r\nimport polyline from \"@mapbox/polyline\";\r\nvar axios = require(\"axios\");\r\n\r\nconst NavigationBox = () => {\r\n  const dispatch = useDispatch();\r\n  const [suggestions, setsuggestions] = useState([]);\r\n  const [suggestions1, setsuggestions1] = useState([]);\r\n\r\n  const [sourcevalue, setSourceValue] = useState();\r\n  const [destvalue, setDestValue] = useState();\r\n  const [showsuggestions, setshowsuggestions] = useState(false);\r\n  const [showsuggestions1, setshowsuggestions1] = useState(false);\r\n  const [source, setSource] = useState([]);\r\n  const [destination, setDestination] = useState([]);\r\n\r\n  const handleClick = (event) => {\r\n    setSourceValue(event);\r\n    searchLocation(event);\r\n    setshowsuggestions(false);\r\n  };\r\n  const handleClick1 = (event) => {\r\n    setDestValue(event);\r\n    searchLocation1(event);\r\n    setshowsuggestions1(false);\r\n  };\r\n  const suggestLocation = (event) => {\r\n    setshowsuggestions(true);\r\n    // setvalue(event);\r\n    var config = {\r\n      method: \"get\",\r\n      url:\r\n        \"https://autocomplete.geocoder.ls.hereapi.com/6.2/suggest.json?apiKey=ArsBpOEL5bGUOCLre5UdBeFKCNgahMq1AfywBFhfgY4&query=\" +\r\n        event,\r\n      // url: 'https://nominatim.openstreetmap.org/search/'+event+'?format=json&addressdetails=1&limit=1&polygon_svg=1',\r\n      headers: {},\r\n    };\r\n\r\n    axios(config)\r\n      .then(function (response) {\r\n        response.data.suggestions !== undefined\r\n          ? setsuggestions(response.data.suggestions)\r\n          : setsuggestions([]);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n  const suggestLocation1 = (event) => {\r\n    setshowsuggestions1(true);\r\n    // setvalue(event);\r\n    var config = {\r\n      method: \"get\",\r\n      url:\r\n        \"https://autocomplete.geocoder.ls.hereapi.com/6.2/suggest.json?apiKey=ArsBpOEL5bGUOCLre5UdBeFKCNgahMq1AfywBFhfgY4&query=\" +\r\n        event,\r\n      // url: 'https://nominatim.openstreetmap.org/search/'+event+'?format=json&addressdetails=1&limit=1&polygon_svg=1',\r\n      headers: {},\r\n    };\r\n\r\n    axios(config)\r\n      .then(function (response) {\r\n        console.log(response);\r\n        response.data.suggestions !== undefined\r\n          ? setsuggestions1(response.data.suggestions)\r\n          : setsuggestions1([]);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n  };\r\n  const searchLocation1 = (event) => {\r\n    var config = {\r\n      method: \"get\",\r\n\r\n      url:\r\n        \"https://geocode.search.hereapi.com/v1/geocode?apiKey=ArsBpOEL5bGUOCLre5UdBeFKCNgahMq1AfywBFhfgY4&q=\" +\r\n        event,\r\n      //   \"?format=json&addressdetails=1&limit=1&polygon_svg=1\",\r\n      headers: {},\r\n    };\r\n\r\n    axios(config)\r\n      .then(function (response) {\r\n        console.log(response);\r\n        setSource([\r\n          response.data.items[0].position.lat,\r\n          response.data.items[0].position.lng,\r\n        ]);\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n    // setshowsuggestions(false);\r\n  };\r\n  const searchLocation = (event) => {\r\n    var config = {\r\n      method: \"get\",\r\n\r\n      url:\r\n        \"https://geocode.search.hereapi.com/v1/geocode?apiKey=ArsBpOEL5bGUOCLre5UdBeFKCNgahMq1AfywBFhfgY4&q=\" +\r\n        event,\r\n      //   \"?format=json&addressdetails=1&limit=1&polygon_svg=1\",\r\n      headers: {},\r\n    };\r\n\r\n    axios(config)\r\n      .then(function (response) {\r\n        console.log(response.data.items[0].position.lat);\r\n        setDestination([\r\n          response.data.items[0].position.lat,\r\n          response.data.items[0].position.lng,\r\n        ]);\r\n\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n    // setshowsuggestions(false);\r\n  };\r\n  const navigate = () => {\r\n    dispatch(\r\n      setMapBounds({\r\n        // lat:\"22\",\r\n        // lon:\"22\",\r\n        path: \"\",\r\n      })\r\n    )\r\n    console.log(source);\r\n    var config = {\r\n      method: \"get\",\r\n      url:\r\n        \"https://apis.mapmyindia.com/advancedmaps/v1/493dfe9d040ca1e0f2c7d1a5c7bc5f5a/route_adv/driving/\" +\r\n        source[1] +\r\n        \",\" +\r\n        source[0] +\r\n        \";\" +\r\n        destination[1] +\r\n        \",\" +\r\n        destination[0],\r\n      // url:\r\n      //   \"https://router.hereapi.com/v8/routes?transportMode=car&origin=26.1445,91.7362&destination=25.6768,91.9270&return=polyline&apiKey=ArsBpOEL5bGUOCLre5UdBeFKCNgahMq1AfywBFhfgY4\",\r\n      // //   \"?format=json&addressdetails=1&limit=1&polygon_svg=1\",\r\n      headers: {},\r\n    };\r\n\r\n    axios(config)\r\n      .then(function (response) {\r\n        let poly = response.data.routes[0].geometry;\r\n        let geojson = polyline.toGeoJSON(poly);\r\n        console.log(geojson);\r\n        // let box = response.data.items[0].mapView;\r\n\r\n        dispatch(\r\n          setMapBounds({\r\n            // lat:\"22\",\r\n            // lon:\"22\",\r\n            path: geojson,\r\n          })\r\n        );\r\n      })\r\n      .catch(function (error) {\r\n        console.log(error);\r\n      });\r\n    setshowsuggestions(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Search>\r\n        <input\r\n          id=\"Destination\"\r\n          className=\"input\"\r\n          placeholder=\"Source...\"\r\n          // value={sourcevalue}\r\n          onChange={(event) => {\r\n            suggestLocation(event.target.value);\r\n          }}\r\n        />\r\n        {showsuggestions &&\r\n          suggestions.map((e) => (\r\n            <li\r\n              className=\"Locations\"\r\n              onClick={(event) => {\r\n                handleClick(event.target.innerHTML);\r\n              }}\r\n            >\r\n              {e.label}\r\n            </li>\r\n          ))}\r\n      </Search>\r\n      <Search>\r\n        <input\r\n          id=\"Source\"\r\n          className=\"input\"\r\n          placeholder=\"Destination...\"\r\n          // value={destvalue}\r\n          onChange={(event) => {\r\n            suggestLocation1(event.target.value);\r\n          }}\r\n        />\r\n        {showsuggestions1 &&\r\n          suggestions1.map((e) => (\r\n            <li\r\n              className=\"Locations\"\r\n              onClick={(event) => {\r\n                handleClick1(event.target.innerHTML);\r\n              }}\r\n            >\r\n              {e.label}\r\n            </li>\r\n          ))}\r\n        <Button\r\n          className=\"Button\"\r\n          onClick={() => {\r\n            navigate();\r\n          }}\r\n        >\r\n          Navigate\r\n        </Button>\r\n      </Search>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavigationBox;\r\n\r\nconst Search = styled.div`\r\n  .input {\r\n    border: 1px solid #555;\r\n    border-radius: 4px;\r\n    box-shadow: none;\r\n    font-size: 12px;\r\n    font-weight: 400;\r\n    /* width: 5000px; */\r\n    display: block;\r\n    width: 70%;\r\n    height: 34px;\r\n    padding: 6px 12px;\r\n    font-size: 14px;\r\n    line-height: 1.42857143;\r\n    color: #555;\r\n    background-color: #fff;\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n    margin-left: 40px;\r\n    margin-right: 10px;\r\n  }\r\n  .Button {\r\n    display: flex;\r\n    align-items: center;\r\n    background-color: orange;\r\n    margin-left: 2em;\r\n    margin-right: 5em;\r\n    width: 75%;\r\n  }\r\n  .Locations {\r\n    list-style: none;\r\n\r\n    background-color: #fff;\r\n    width: 70%;\r\n    height: 2.5rem;\r\n    padding: 6px 12px;\r\n    margin-left: 40px;\r\n    margin-right: 10px;\r\n    font-size: 14px;\r\n  }\r\n  .Locations:hover {\r\n    background-color: grey;\r\n    border-left: 2px solid orange;\r\n  }\r\n`;\r\n","E:\\sanjiv\\CODE\\nerdrr\\src\\features\\layers\\layerslice.js",[],"E:\\sanjiv\\CODE\\nerdrr\\src\\features\\layers\\layervisualiseslice.js",[],"E:\\sanjiv\\CODE\\nerdrr\\src\\features\\layers\\overlaylayerslice.js",[],"E:\\sanjiv\\CODE\\nerdrr\\src\\features\\layers\\appslice.js",["252"],"import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { apps } from \"../../config\";\r\n\r\nconst initialState = apps;\r\nconst appSlice = createSlice({\r\n  name: \"apps\",\r\n  initialState,\r\n  reducers: {\r\n    setAppDetails: (state, action) => {\r\n      console.log(action.payload.data);\r\n      state.map((st) => {\r\n        st.app === action.payload.data ? (st.show = true) : (st.show = false);\r\n      });\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setAppDetails } = appSlice.actions;\r\n\r\nexport const selectAppDataSet = (state) => state.apps;\r\n\r\nexport default appSlice.reducer;\r\n","E:\\sanjiv\\CODE\\nerdrr\\src\\features\\layers\\infoboxslice.js",[],"E:\\sanjiv\\CODE\\nerdrr\\src\\features\\layers\\swipemapslice.js",[],"E:\\sanjiv\\CODE\\nerdrr\\src\\features\\layers\\layerinfoslice.js",[],"E:\\sanjiv\\CODE\\nerdrr\\src\\features\\layers\\baselayerslice.js",["253"],"import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { maps } from \"../../config\";\r\n\r\nconst initialState = maps;\r\nconst baseLayerSlice = createSlice({\r\n  name: \"baselayer\",\r\n  initialState,\r\n  reducers: {\r\n    setBaseDetails: (state, action) => {\r\n      console.log(action.payload.data);\r\n      state.map((st) => {\r\n        st.id === action.payload.data ? (st.show = true) : (st.show = false);\r\n      });\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setBaseDetails } = baseLayerSlice.actions;\r\n\r\nexport const selectBaseDataSet = (state) => state.baselayer;\r\n\r\nexport default baseLayerSlice.reducer;\r\n","E:\\sanjiv\\CODE\\nerdrr\\src\\features\\maps\\mapZoomSlice.js",[],"E:\\sanjiv\\CODE\\nerdrr\\src\\features\\maps\\mapStateSlice.js",[],"E:\\sanjiv\\CODE\\nerdrr\\src\\components\\Legend.js",["254","255","256","257","258","259"],"import { red } from \"@material-ui/core/colors\";\r\nimport React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport styled from \"styled-components\";\r\nimport { selectLayerDataSet } from \"../features/layers/overlaylayerslice\";\r\nimport AddIcon from \"@material-ui/icons/Add\";\r\nimport RemoveIcon from \"@material-ui/icons/Remove\";\r\nimport Legen from \"./Legen\";\r\nconst Legend = () => {\r\n  const tasks = useSelector(selectLayerDataSet);\r\n  var sanju;\r\n  var arr = [\r\n    \"NERDRR_NEW:mizoram_fire_vul_4326\",\r\n    \"  NERDRR_NEW:megh_fire_vul_4326\",\r\n    \"analytic:ner_landuse_landcover_50k_1st_cycle\",\r\n    \"analytic:lulc2ndcycle\",\r\n    \"analytic:lulc3rdcycle\",\r\n    \"NEC:assam_census\",\r\n  ];\r\n  // let sstyle = {\r\n  //   backgroundColor: \"orange\",\r\n  //   color: \"black\",\r\n  //   fontWeigth: \"bold\"\r\n  // }\r\n  return (\r\n    //key={}>{task.text}\r\n    <LSTYLE>\r\n      <React.Fragment>\r\n        <div className=\"Legend\">\r\n          {tasks\r\n            .filter((task) => task.show === true)\r\n            .map(\r\n              (task) => (\r\n                //console.log(task.layer),\r\n                (sanju =\r\n                  \"https://geoserver.nesdr.gov.in:442/geoserver/wms?REQUEST=GetLegendGraphic&VERSION=1.0.0&FORMAT=image/png&WIDTH=20&HEIGHT=20&LAYER=\" +\r\n                  task.layer),\r\n                  arr.includes(task.layer) && (\r\n                  <>\r\n                    <Legen sanju={sanju} task={task} />\r\n                  </>\r\n                )\r\n              )\r\n            )}\r\n        </div>\r\n      </React.Fragment>\r\n    </LSTYLE>\r\n  );\r\n};\r\nexport default Legend;\r\nexport const LSTYLE = styled.div`\r\n  .visibility {\r\n    display: none;\r\n  }\r\n  p {\r\n    background: #014b96;\r\n    color: white;\r\n    font-weight: bold;\r\n    font-size: 14px;\r\n  }\r\n  .MuiSvgIcon-root {\r\n    font-size: 15px !important;\r\n  }\r\n`;\r\n","E:\\sanjiv\\CODE\\nerdrr\\src\\config.js",["260"],"import { FolderOpenRounded } from \"@material-ui/icons\";\r\n\r\nexport const layer = [\r\n  //Administrator boundary start\r\n  {\r\n    id: 1,\r\n    text: \"State Boundary\",\r\n    show: true,\r\n    class: \"Administrative\",\r\n    layer: \"NEC:ner_states\",\r\n\r\n    link: \"https://apps.nesdr.gov.in:442/geoserver/wms\",\r\n  },\r\n  {\r\n    id: 2,\r\n    text: \"District Boundary\",\r\n    show: true,\r\n    class: \"Administrative\",\r\n    layer: \"analytic:ner_boundary\",\r\n    link: \"https://apps.nesdr.gov.in:442/geoserver/wms\",\r\n    info: \"District Boundary\",\r\n    attributes: [\r\n      { value: \"dtname\", text: \"District Name\" },\r\n      { value: \"area\", text: \"Area\" },\r\n      // { value: \"diff\", text: \"Change\"},\r\n    ],\r\n    minZoom:10\r\n    // stats: {\r\n    //   api:\"https://apps.nesdr.gov.in/nerdrrapi/flood.php?district=\",\r\n    //   charttype:\"column\"\r\n    // }\r\n  },\r\n  {\r\n    id: 3,\r\n    text: \"Revenue Circle\",\r\n    show: false,\r\n    class: \"Administrative\",\r\n    layer: \"NEC:assam_dist\",\r\n    link: \"https://apps.nesdr.gov.in:442/geoserver/NEC/wms\",\r\n    info: \"Revenue Circle\",\r\n    attributes: [\r\n      { value: \"dtname\", text: \"District Name\" },\r\n      { value: \"area\", text: \"Area\" },\r\n      // { value: \"diff\", text: \"Change\"},\r\n    ],\r\n  },\r\n  // Administrator boundary end\r\n\r\n  // Land Use and Land Cover Start\r\n  {\r\n    id: 4,\r\n    text: \"LULC (2005-06)\",\r\n    show: false,\r\n    class: \"Land Use/Land Cover\",\r\n    layer: \"analytic:ner_landuse_landcover_50k_1st_cycle\",\r\n    link: \"https://apps.nesdr.gov.in:442/geoserver/wms\",\r\n    info: \"Revenue Circle\",\r\n    stats: true,\r\n    legend:\"https://apps.nesdr.gov.in:442/geoserver/wms?REQUEST=GetLegendGraphic&VERSION=1.0.0&FORMAT=image/png&WIDTH=20&HEIGHT=20&LAYER=analytic:ner_landuse_landcover_50k_1st_cycle\"\r\n  },\r\n  {\r\n    id: 5,\r\n    text: \"LULC(2011-12)\",\r\n    show: false,\r\n    class: \"Land Use/Land Cover\",\r\n    layer: \"analytic:lulc2ndcycle\",\r\n    link: \"https://apps.nesdr.gov.in:442/geoserver/wms\",\r\n    info: \"Revenue Circle\",\r\n    legend:\"https://apps.nesdr.gov.in:442/geoserver/wms?REQUEST=GetLegendGraphic&VERSION=1.0.0&FORMAT=image/png&WIDTH=20&HEIGHT=20&LAYER=analytic:lulc2ndcycle\"\r\n\r\n  },\r\n  {\r\n    id: 6,\r\n    text: \"LULC(2015-16)\",\r\n    show: false,\r\n    class: \"Land Use/Land Cover\",\r\n    layer: \"analytic:lulc3rdcycle\",\r\n    link: \"https://apps.nesdr.gov.in:442/geoserver/wms\",\r\n    info: \"LULC(2015-16)\",\r\n    legend:\"https://apps.nesdr.gov.in:442/geoserver/wms?REQUEST=GetLegendGraphic&VERSION=1.0.0&FORMAT=image/png&WIDTH=20&HEIGHT=20&LAYER=analytic:lulc3rdcycle\"\r\n\r\n  },\r\n  // Land Use and Land Cover end\r\n\r\n  // Census strat\r\n  {\r\n    id: 7,\r\n    text: \"Census\",\r\n    show: false,\r\n    class: \"Census\",\r\n    layer: \"NEC:assam_census\",\r\n    link: \"https://apps.nesdr.gov.in:442/geoserver/NEC/wms\",\r\n    legend:\"https://apps.nesdr.gov.in:442/geoserver/wms?REQUEST=GetLegendGraphic&VERSION=1.0.0&FORMAT=image/png&WIDTH=20&HEIGHT=20&LAYER=NEC:assam_census\"\r\n\r\n  },\r\n  {\r\n    id: 8,\r\n    text: \"Embankment\",\r\n    show: false,\r\n    class: \"Flood\",\r\n    layer: \"NEWRM:ne_embankments\",\r\n    link: \"http://geoserver.vassarlabs.com/geoserver/NEWRM/gwc/service/wms\",\r\n  },\r\n  {\r\n    id: 9,\r\n    text: \"Breach Locations\",\r\n    show: false,\r\n    class: \"Flood\",\r\n    layer: \"NEWRM:ne_breach_total_locations\",\r\n    link: \"http://geoserver.vassarlabs.com/geoserver/NEWRM/gwc/service/wms\",\r\n  },\r\n  {\r\n    id: 10,\r\n    text: \"Erosion Deposition\",\r\n    show: false,\r\n    class: \"Flood\",\r\n    layer: \"NEWRM:NE_ErosionDeposition\",\r\n    link: \"http://geoserver.vassarlabs.com/geoserver/NEWRM/gwc/service/wms\",\r\n  },\r\n  {\r\n    id: 11,\r\n    text: \"Landslide\",\r\n    show: false,\r\n    class: \"Earthquake/Landslides\",\r\n    layer: \"NERDRR_NEW:ladslide_points\",\r\n    link: \"https://apps.nesdr.gov.in:442/geoserver/NERDRR_NEW/wms\",\r\n    info:\"This is an inventory of all landslide incidents that have occurred in the NER in 2020 and 2021 (till date). This seasonal landslide inventory is small-medium in scale and archival in nature. The inventory is sourced from Newspapers, Social Media, GSI Reports, SDMA reports and Field Visits. The inventory has a 3-Tier classification for all landslide incidents. Type 1 incidents have accurate geolocation, Type 2 incidents have some degree of locational uncertainty while Type 3 incidents are collapsed/blocked road sections along National/State Highways and other important roads. Those landside incidents which have been verified are mentioned. The preceding '24 hours' rainfall for each landslide is derived from NASA's Global Precipitation Measurement (GPM) mission using the 'NASA/GPM_L3/IMERG_V06' product. If the landslide was fatal in nature then the number of deaths caused are also mentioned.\"\r\n  },\r\n  {\r\n    id: 12,\r\n    text: \"Flood Inundation\",\r\n    show: false,\r\n    class: \"Flood\",\r\n    // layer: \"FLEWS:1august20\",\r\n    options: [\r\n      { value: \"FLEWS:1august20\", text: \"1 August 2020\" },\r\n      { value: \"FLEWS:8july2020\", text: \"8 July 2020\" },\r\n      { value: \"FLEWS:25july2020\", text: \"25 July 2020\" },\r\n      { value: \"FLEWS:22july2020\", text: \"22 July 2020\" },\r\n      { value: \"FLEWS:19_july\", text: \"19 July 2020\" },\r\n      { value: \"FLEWS:17July\", text: \"17 July 2020\" },\r\n      { value: \"FLEWS:16_july\", text: \"16 July 2020\" },\r\n      { value: \"FLEWS:10july2020\", text: \"10 July 2020\" },\r\n      { value: \"FLEWS:3july2020\", text: \"3 July 2020\" },\r\n      { value: \"FLEWS:onejuly\", text: \"1 July 2020\" },\r\n      { value: \"FLEWS:28june2020\", text: \"28 June 2020\" },\r\n      { value: \"FLEWS:26june2020\", text: \"26 June 2020\" },\r\n      { value: \"FLEWS:24june20\", text: \"24 June 2020\" },\r\n      { value: \"FLEWS:21june\", text: \"21 June 2020\" },\r\n      { value: \"FLEWS:2june\", text: \"2 June 2020\" },\r\n      { value: \"FLEWS:may28\", text: \"28 May 2020\" },\r\n    ],\r\n    stats: {\r\n      api: \"https://api.nesdr.gov.in/nerdrr/flood.php?district=\",\r\n      charttype: \"column\",\r\n      val:\"flood\",\r\n    },\r\n    layer_date:'',\r\n    link: \"https://apps.nesdr.gov.in:442/geoserver/FLEWS/wms\",\r\n  },\r\n  {\r\n    id: 13,\r\n    text: \"Flood Alerts\",\r\n    show: false,\r\n    class: \"Alerts and Early Warning\",\r\n    layer: \"FLEWS:assam_rc_utm\",\r\n    link: \"https://apps.nesdr.gov.in:442/geoserver/FLEWS/wms\",\r\n  },\r\n  {\r\n    id: 14,\r\n    text: \"Lightning Alerts\",\r\n    show: false,\r\n    class: \"Alerts and Early Warning\",\r\n    layer: \"FLEWS:1august20\",\r\n\r\n    link: \"https://apps.nesdr.gov.in:442/geoserver/FLEWS/wms\",\r\n  },\r\n  {\r\n    id: 15,\r\n    text: \"Thunderstorm\",\r\n    show: false,\r\n    class: \"Alerts and Early Warning\",\r\n    layer: \"FLEWS:1august20\",\r\n    link: \"https://apps.nesdr.gov.in:442/geoserver/FLEWS/wms\",\r\n  },\r\n  {\r\n    id: 16,\r\n    text: \"Earthquake\",\r\n    show: false,\r\n    class: \"Earthquake/Landslides\",\r\n    layer: \"NEWRM:ne_earthquake\",\r\n    link: \"http://geoserver.vassarlabs.com/geoserver/NEWRM/gwc/service/wms\",\r\n  },\r\n  {\r\n    id: 17,\r\n    text: \"PulseRad\",\r\n    show: false,\r\n    class: \"Lightning\",\r\n    layer: \"NEWRM:ne_earthquake\",\r\n    link: \"https://earthnetworks.azure-api.net/maps/overlays/tile?x={x}&y={y}&z={z}&lid=pulserad&epsg=3857&subscription-key=f9d0c8aa32904e45884cc6f7c34b5e9e\",\r\n  },\r\n  {\r\n    id: 18,\r\n    text: \"Storm ETA\",\r\n    show: false,\r\n    class: \"Lightning\",\r\n    layer: \"NEWRM:ne_earthquake\",\r\n    link: \"https://earthnetworks.azure-api.net/maps/overlays/tile?x={x}&y={y}&z={z}&lid=eta&epsg=3857&subscription-key=f9d0c8aa32904e45884cc6f7c34b5e9e\",\r\n  },\r\n  {\r\n    id: 19,\r\n    text: \"Lightning Alert Polygons\",\r\n    show: false,\r\n    class: \"Lightning\",\r\n    layer: \"NEWRM:ne_earthquake\",\r\n    link: \"https://earthnetworks.azure-api.net/maps/overlays/tile?x={x}&y={y}&z={z}&lid=Total.Lightning.Polygons:::1:2:3&epsg=3857&subscription-key=f9d0c8aa32904e45884cc6f7c34b5e9e\",\r\n  },\r\n  {\r\n    id: 20,\r\n    text: \"Lightning Cell Tracks\",\r\n    show: false,\r\n    class: \"Lightning\",\r\n    layer: \"NEWRM:ne_earthquake\",\r\n    link: \"https://earthnetworks.azure-api.net/maps/overlays/tile?x={x}&y={y}&z={z}&lid=Cell.Tracks&epsg=3857&subscription-key=f9d0c8aa32904e45884cc6f7c34b5e9e\",\r\n  },\r\n  {\r\n    id: 21,\r\n    text: \"Kharif Crop Damage (Flood)\",\r\n    show: false,\r\n    class: \"CropDAMS\",\r\n    layer: \"NERDRR_NEW:cropdam_flood_4326\",\r\n    link: \"https://apps.nesdr.gov.in:442/geoserver/NERDRR_NEW/wms\",\r\n    legend:\"https://apps.nesdr.gov.in:442/geoserver/NERDRR_NEW/wms?REQUEST=GetLegendGraphic&VERSION=1.0.0&FORMAT=image/png&WIDTH=20&HEIGHT=20&LAYER=NERDRR_NEW:cropdam_flood_4326\"\r\n\r\n  },\r\n  {\r\n    id: 22,\r\n    text: \"Forest Fire Vunalarability (Mizoram)\",\r\n    show: false,\r\n    class: \"Forestry\",\r\n    layer: \"NERDRR_NEW:mizoram_fire_vul_4326\",\r\n    link: \"https://apps.nesdr.gov.in:442/geoserver/NERDRR_NEW/wms\",\r\n    stats: {\r\n      api: \"https://api.nesdr.gov.in/nerdrr/firevunalarability.php?state=mizoram&district=\",\r\n      apitable: \"https://api.nesdr.gov.in/nerdrr/datatable.php?state=mizoram\",\r\n      charttype: \"pie\",\r\n      val:\"firev\",\r\n    },\r\n    legend:\"https://apps.nesdr.gov.in:442/geoserver/NERDRR_NEW/wms?REQUEST=GetLegendGraphic&VERSION=1.0.0&FORMAT=image/png&WIDTH=20&HEIGHT=20&LAYER=NERDRR_NEW:mizoram_fire_vul_4326\",\r\n    info:\"A forest fire vulnerability map provides information about the likelihood of forest fire in a specific region. The vulnerability of forest fire depends on many factors, the important factors being forest types, forest density, elevation above mean sea level, the slope of the terrain, hill’s aspect, and proximity. This information is useful in the forest fire early warning and is beneficial for decision-making policies of mitigating forest fire. \"\r\n  },\r\n  {\r\n    id: 23,\r\n    text: \"Forest Fire Vunalarability (Meghalaya)\",\r\n    show: false,\r\n    class: \"Forestry\",\r\n    layer: \"  NERDRR_NEW:megh_fire_vul_4326\",\r\n    link: \"https://apps.nesdr.gov.in:442/geoserver/NERDRR_NEW/wms\",\r\n    stats: {\r\n      api: \"https://api.nesdr.gov.in/nerdrr/firevunalarability.php?state=meghalaya&district=\",\r\n      apitable: \"https://api.nesdr.gov.in/nerdrr/datatable.php?state=meghalaya\",\r\n      charttype: \"pie\",\r\n      val:\"firev\",\r\n    },\r\n    legend:\"https://apps.nesdr.gov.in:442/geoserver/NERDRR_NEW/wms?REQUEST=GetLegendGraphic&VERSION=1.0.0&FORMAT=image/png&WIDTH=20&HEIGHT=20&LAYER=NERDRR_NEW:mizoram_fire_vul_4326\",\r\n    info:\"A forest fire vulnerability map provides information about the likelihood of forest fire in a specific region. The vulnerability of forest fire depends on many factors, the important factors being forest types, forest density, elevation above mean sea level, the slope of the terrain, hill’s aspect, and proximity. This information is useful in the forest fire early warning and is beneficial for decision-making policies of mitigating forest fire. \"\r\n  },\r\n  {\r\n    id: 24,\r\n    text: \"Burn Patches\",\r\n    show: false,\r\n    class: \"Forestry\",\r\n    layer: \"NERDRR_NEW:churachandpur_patchwise_4326\",\r\n    link: \"https://apps.nesdr.gov.in:442/geoserver/NERDRR_NEW/wms\",\r\n  },\r\n  {\r\n    id: 25,\r\n    text: \"Bankline Change\",\r\n    show: false,\r\n    class: \"CropDAMS\",\r\n    layer: \"NERDRR_NEW:2015_streamline_4326\",\r\n    link: \"https://apps.nesdr.gov.in:442/geoserver/NERDRR_NEW/wms\",\r\n    options: [\r\n      {\r\n        value: \"NERDRR_NEW:2015_streamline_4326\",\r\n        text: \"2015\",\r\n      },\r\n      {\r\n        value: \"NERDRR_NEW:2011_streamline_4326\",\r\n        text: \"2011\",\r\n      },\r\n      {\r\n        value: \"NERDRR_NEW:2005_streamline_4326\",\r\n        text: \"2005\",\r\n      },\r\n      \t\r\n    ],\r\n  },\r\n  {\r\n    id: 26,\r\n    text: \"Crop Damage (River Bank Erosion)\",\r\n    show: false,\r\n    class: \"CropDAMS\",\r\n    layer: \"NERDRR_NEW:2005-11-6_districts_cropdam_due_to_bankline_erosion\",\r\n    link: \"https://apps.nesdr.gov.in:442/geoserver/NERDRR_NEW/wms\",\r\n    layer_date:'',\r\n    stats: {\r\n      val:\"cropyear\",\r\n      charttype: \"pie\",\r\n\r\n    },\r\n    options: [\r\n      {\r\n        value: \"NERDRR_NEW:2005-11-6_districts_cropdam_due_to_bankline_erosion\",\r\n        text: \"2005-2011\",\r\n        api: \"https://api.nesdr.gov.in/nerdrr/crop.php?year=2005-2011&district=\",\r\n      },\r\n      {\r\n        value: \"NERDRR_NEW:2005-15-6_districts_cropdam_due_to_bankline_erosion\",\r\n        text: \"2005-2015\",\r\n        api: \"https://api.nesdr.gov.in/nerdrr/crop.php?year=2005-2015&district=\",\r\n      },\r\n      {\r\n        value: \"NERDRR_NEW:2011-15-6_districts_cropdam_due_to_bankline_erosion\",\r\n        text: \"2011-2015\",\r\n        api: \"https://api.nesdr.gov.in/nerdrr/crop.php?year=2011-2015&district=\",\r\n      },\r\n      \t\r\n    ],\r\n  },\r\n  {\r\n    id: 27,\r\n    text: \"Lightning Hazard Map\",\r\n    show: false,\r\n    class: \"Lightning\",\r\n    layer: \"NERDRR_NEW:Light_Hazards_Map\",\r\n    link: \"https://apps.nesdr.gov.in:442/geoserver/NERDRR_NEW/wms\",\r\n    info:\"LIS DATA (Lightnign Hazards map is prepared by the TRMM- Lightning Imaging Sensor (LIS) available data . The spatial resulution is 0.1 degee X 0.1 degree.\"\r\n  },\r\n\r\n  {\r\n    id: 28,\r\n    text: \"Forest Vulnarability Map\",\r\n    show: false,\r\n    class: \"Forestry\",\r\n    layer: \"NERDRR_NEW:ner_forest_fire_prone_area_map\",\r\n    link: \"https://apps.nesdr.gov.in:442/geoserver/NERDRR_NEW/wms\",\r\n  },\r\n  {\r\n    id: 29,\r\n    text: \"Thunderstorm Probable Index\",\r\n    show: false,\r\n    class: \"Lightning\",\r\n    layer: \"NERDRR_NEW:2021_06_15tp1\",\r\n    link: \"https://apps.nesdr.gov.in:442/geoserver/NERDRR_NEW/wms\",\r\n    options: [\r\n      {\r\n        value: \"NERDRR_NEW:2021_06_15tp1\",\r\n        text: \"2005-2011\",\r\n      },\r\n      {\r\n        value: \"NERDRR_NEW:2021_06_15tp2\",\r\n        text: \"2005-2015\",\r\n      },\r\n      {\r\n        value: \"NERDRR_NEW:2021_06_15tp3\",\r\n        text: \"2011-2015\",\r\n      }]\r\n  },\r\n  // {\r\n  //   id: 29,\r\n  //   text: \"Landslide\",\r\n  //   show: false,\r\n  //   class: \"Forestry\",\r\n  //   layer: \"NERDRR_NEW:ladslide_points\",\r\n  //   link: \"https://apps.nesdr.gov.in:442/geoserver/NERDRR_NEW/wms\",\r\n  // },\r\n  // census end\r\n];\r\n\r\n// maps configuration\r\nexport const maps = [\r\n  //maps start\r\n  {\r\n    id: 1,\r\n    text: \"Mapbox Light\",\r\n    show: true,\r\n    class: \"Maps\",\r\n    layer: \"analytic:ner_boundary\",\r\n    link: \"https://api.mapbox.com/styles/v1/mapbox/light-v10/tiles/256/{z}/{x}/{y}?access_token=pk.eyJ1IjoiZGluZXNoa2N1YmUiLCJhIjoiY2p2Z2Jzc3pyMDVwajN5bWowdjA1YTAyMSJ9.TcJaEwi-qTQqBPqTh0Kt2g\",\r\n    format: \"image/png\",\r\n    domain: \" \",\r\n    type: \"tile\",\r\n    image: \"carto.jpg\",\r\n  },\r\n  {\r\n    id: 2,\r\n    text: \"Bhuvan\",\r\n    show: false,\r\n    class: \"Maps\",\r\n    layer: \"india3\",\r\n    link: \"https://bhuvan-vec1.nrsc.gov.in/bhuvan/gwc/service/wms/\",\r\n    format: \"image/png\",\r\n    domain: \" \",\r\n    image: \"bhuvanmaps.png\",\r\n  },\r\n  {\r\n    id: 3,\r\n    text: \"BhuvanSatellite\",\r\n    show: false,\r\n    class: \"Maps\",\r\n    layer: \"bhuvan_imagery2\",\r\n    link: \"https://bhuvan-ras2.nrsc.gov.in/tilecache/tilecache.py?\",\r\n    format: \"png/jpeg\",\r\n    domain: \" \",\r\n    image: \"bhuvan.png\",\r\n  },\r\n  {\r\n    id: 4,\r\n    text: \"Open Street\",\r\n    show: false,\r\n    class: \"Maps\",\r\n    link: \"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\",\r\n    format: \"png/jpeg\",\r\n    domain: \" \",\r\n    type: \"tile\",\r\n    image: \"osm.png\",\r\n  },\r\n  {\r\n    id: 5,\r\n    text: \"Google Map\",\r\n    show: false,\r\n    class: \"Maps\",\r\n    layer: \"analytic:ner_boundary\",\r\n    link: \"http://{s}.google.com/vt/lyrs=m&x={x}&y={y}&z={z}\",\r\n    format: \"image/png\",\r\n    domain: \"['mt0','mt1','mt2','mt3']\",\r\n    image: \"osm.png\",\r\n  },\r\n  {\r\n    id: 6,\r\n    text: \"Google Satellite\",\r\n    show: false,\r\n    class: \"Maps\",\r\n    layer: \"analytic:ner_boundary\",\r\n    link: \"http://{s}.google.com/vt/lyrs=s&x={x}&y={y}&z={z}\",\r\n    format: \"image/png\",\r\n    domain: [\"mt0\", \"mt1\", \"mt2\", \"mt3\"],\r\n    image: \"google.png\",\r\n  },\r\n  {\r\n    id: 7,\r\n    text: \" Satellite\",\r\n    show: false,\r\n    class: \"Maps\",\r\n    layer: \"analytic:ner_boundary\",\r\n    link: \"https://server.arcgisonline.com/ArcGIS/rest/services/World_Imagery/MapServer/tile/{z}/{y}/{x}\",\r\n    format: \"image/png\",\r\n    // domain: [\"mt0\", \"mt1\", \"mt2\", \"mt3\"],\r\n    image: \"google.png\",\r\n  },\r\n  {\r\n    id: 8,\r\n    text: \" Map My India\",\r\n    show: false,\r\n    class: \"Maps\",\r\n    layer: \"analytic:ner_boundary\",\r\n    link: \"https://mt3.mapmyindia.com/advancedmaps/v1/493dfe9d040ca1e0f2c7d1a5c7bc5f5a/base_hybrid/{z}/{x}/{y}.png\",\r\n    format: \"image/png\",\r\n    // domain: [\"mt0\", \"mt1\", \"mt2\", \"mt3\"],\r\n    type: \"tile\",\r\n    image: \"google.png\",\r\n  },\r\n  //maps end\r\n];\r\n\r\nexport const apps = [\r\n  {\r\n    id: 1,\r\n    app: \"GeoPortal\",\r\n    show: true,\r\n  },\r\n  {\r\n    id: 2,\r\n    app: \"Flood\",\r\n    show: false,\r\n  },\r\n  {\r\n    id: 3,\r\n    app: \"Agriculture\",\r\n    show: false,\r\n  },\r\n  {\r\n    id: 4,\r\n    app: \"Atmospheric Sciences\",\r\n    show: false,\r\n  },\r\n  {\r\n    id: 5,\r\n    app: \"Geosciences\",\r\n    show: false,\r\n  },\r\n];\r\n\r\n// side pannel visibility\r\nexport const panelVisibilty = [\r\n  {\r\n    id: \"Alert\",\r\n    text: \"Alert\",\r\n    show: false,\r\n    panel: false,\r\n  },\r\n  {\r\n    id: \"Layer\",\r\n    text: \"Layer\",\r\n    show: true,\r\n    panel: true,\r\n  },\r\n  {\r\n    id: \"Legend\",\r\n    show: false,\r\n    panel: false,\r\n  },\r\n  {\r\n    id: \"Stats\",\r\n    show: false,\r\n    panel: false,\r\n  },\r\n  {\r\n    id: \"Tools\",\r\n    show: false,\r\n    panel: false,\r\n  },\r\n  {\r\n    id: \"Apps\",\r\n    show: false,\r\n    panel: false,\r\n  },\r\n  {\r\n    id: \"Search\",\r\n    show: false,\r\n    panel: false,\r\n  },\r\n];\r\n\r\n\r\n// analytics layer\r\nexport const analyticoper = [\r\n  {\r\n    id: 2,\r\n    text: \"modisndvi\",\r\n    wmsname: \"modis_ndvi\",\r\n    state: \"modis_ndvi\",\r\n    wmsname_op:\"modis_ndvi\",\r\n    show: false,\r\n    yearrange: [\r\n      2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012,\r\n      2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021,\r\n    ],\r\n    operations: [\r\n      { value: \"diff\", text: \"Change\", legend: \"\" },\r\n      { value: \"mean\", text: \"Mean\", legend: \"\" },\r\n      { value: \"max\", text: \"Maximum\", legend: \"\" },\r\n      { value: \"min\", text: \"Minimum\", legend: \"\" },\r\n      { value: \"std\", text: \"Standard Deviation\", legend: \"\" },\r\n      { value: \"range\", text: \"Range\", legend: \"\" },\r\n      { value: \"vci\", text: \"Vegetation Condition Index\", legend: \"\" },\r\n      { value: \"trend\", text: \"Trend\", legend: \"\" },\r\n      { value: \"anomaly\", text: \"Anomaly\", legend: \"\" },\r\n\r\n      { value: \"rgb\", text: \"RGB\", legend: \"\" },\r\n    ],\r\n    // legends: [],\r\n    category: \"vegetation\",\r\n  },\r\n  {\r\n    id: 3,\r\n    text: \"smap\",\r\n    wmsname: \"soil\",\r\n    state: \"soil_date\",\r\n    wmsname_op:\"soil\",\r\n\r\n    yearrange: [\r\n      2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012,\r\n      2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021,\r\n    ],\r\n    show: false,\r\n    operations: [\r\n      { value: \"difference\", text: \"Change\", legend: \"\" },\r\n      { value: \"Mean\", text: \"Mean\", legend: \"\" },\r\n      { value: \"Maximum\", text: \"Maximum\", legend: \"\" },\r\n      { value: \"Minimum\", text: \"Minimum\", legend: \"\" },\r\n      { value: \"sd\", text: \"Standard Deviation\", legend: \"\" },\r\n      { value: \"cv\", text: \"Coefficient of Variance\", legend: \"\" },\r\n    ],\r\n    category: \"vegetation\",\r\n  },\r\n  {\r\n    id: 4,\r\n    text: \"et\",\r\n    wmsname: \"et\",\r\n    state: \"et\",\r\n    wmsname_op:\"et\",\r\n\r\n    yearrange: [\r\n      2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012,\r\n      2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021,\r\n    ],\r\n    show: false,\r\n    operations: [\r\n      { value: \"diff\", text: \"Change\", legend: \"\" },\r\n      { value: \"mean\", text: \"Mean\", legend: \"\" },\r\n      { value: \"max\", text: \"Maximum\", legend: \"\" },\r\n      { value: \"min\", text: \"Minimum\", legend: \"\" },\r\n      { value: \"std\", text: \"Standard Deviation\", legend: \"\" },\r\n      // { value: \"cv\", text: \"Coefficient of Variance\", legend: \"\" },\r\n    ],\r\n    category: \"vegetation\",\r\n  },\r\n  {\r\n    id: 4,\r\n    text: \"INSAT Rainfall\",\r\n    wmsname: \"insat_rain\",\r\n    state: \"insat_rainfall\",\r\n    wmsname_op:\"insat_rain\",\r\n\r\n    yearrange: [\r\n      2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012,\r\n      2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021,\r\n    ],\r\n    show: false,\r\n    operations: [\r\n      { value: \"sum\", text: \"Sum\", legend: \"\" },\r\n      { value: \"mean\", text: \"Mean\", legend: \"\" },\r\n      { value: \"max\", text: \"Maximum\", legend: \"\" },\r\n    ],\r\n    category: \"weather\",\r\n  },\r\n  {\r\n    id: 5,\r\n    text: \"Air Quality AOD\",\r\n    wmsname: \"aod\",\r\n    state: \"aod_date\",\r\n    wmsname_op:\"aod\",\r\n\r\n    yearrange: [\r\n      2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012,\r\n      2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021,\r\n    ],\r\n    show: false,\r\n    operations: [\r\n      { value: \"sum\", text: \"Change\", legend: \"\" },\r\n      { value: \"Mean\", text: \"Mean\", legend: \"\" },\r\n      { value: \"Maximum\", text: \"Maximum\", legend: \"\" },\r\n    ],\r\n    category: \"weather\",\r\n  },\r\n  {\r\n    id: 5,\r\n    text: \"Land Surface Temperature\",\r\n    wmsname: \"lst\",\r\n    state: \"lst_date\",\r\n    wmsname_op:\"lst\",\r\n\r\n    yearrange: [\r\n      2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012,\r\n      2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021,\r\n    ],\r\n    show: false,\r\n    operations: [\r\n      { value: \"diff\", text: \"Change\", legend: \"\" },\r\n      { value: \"mean\", text: \"Mean\", legend: \"\" },\r\n      { value: \"max\", text: \"Maximum\", legend: \"\" },\r\n    ],\r\n    category: \"weather\",\r\n  },\r\n  {\r\n    id: 6,\r\n    text: \"MODIS NRT FLood\",\r\n    wmsname: \"modis_flood\",\r\n    state: \"modis_flood\",\r\n    wmsname_op: \"modis_flood\",\r\n    yearrange: [\r\n      2001, 2002, 2003, 2004, 2005, 2006, 2007, 2008, 2009, 2010, 2011, 2012,\r\n      2013, 2014, 2015, 2016, 2017, 2018, 2019, 2020, 2021,\r\n    ],\r\n    show: false,\r\n    operations: [\r\n      { value: \"min\", text: \"Minimum\", legend: \"\" },\r\n      { value: \"mean\", text: \"Mean\", legend: \"\" },\r\n      { value: \"max\", text: \"Maximum\", legend: \"\" },\r\n      { value: \"range\", text: \"Flood Statistical Analysis\", legend: \"\" },\r\n\r\n    ],\r\n    category: \"weather\",\r\n  },\r\n  {\r\n    id: 6,\r\n    text: \"Sentinel\",\r\n    wmsname: \"sentinal\",\r\n    state: \"sentinal\",\r\n    show: false,\r\n    operations: [\r\n      { value: \"NDVI\", text: \"NDVI\"},\r\n      { value: \"NDWI\", text: \"NDWI\" },\r\n      { value: \"NBR\" , text: \"NBR\"},\r\n      { value: \"Deforestation\", text: \"Deforestation\"},\r\n      { value: \"Fire Detection Index\", text: \"Fire Detection Index\" },\r\n      { value: \"EVI\", text: \"EVI\"},\r\n      { value: \"Custom\", text: \"Custom\"}\r\n    ],\r\n    category: \"Satellite\",\r\n  }\r\n];\r\n\r\n//list of dates\r\n","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\SwpieMapControl.js",["261","262","263","264","265"],"import React from \"react\";\r\nimport \"leaflet-side-by-side\";\r\nimport L from \"leaflet\";\r\nimport { useMap } from \"react-leaflet\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { selectSwipeDataSet } from \"../features/layers/swipemapslice\";\r\nimport { useSelector } from \"react-redux\";\r\n// import { selectLayerDataSet } from \"../features/layers/overlaylayerslice\";\r\nimport { selectLayerDataSet } from \"../features/layers/overlaylayerslice\";\r\n\r\nlet sbs = null;\r\nlet rightlayer = null;\r\nlet leftlayer = null;\r\nlet baselayer = null;\r\nconst SwpieMapControl = ({ show }) => {\r\n  const state = useSelector(selectSwipeDataSet);\r\n  const layers = useSelector(selectLayerDataSet);\r\n  console.log(state);\r\n  const map = useMap();\r\n\r\n  let left = layers.filter((e) => e.id == state.leftmap);\r\n\r\n  let right = layers.filter((e) => e.id == state.rightmap);\r\n  console.log(left);\r\n\r\n  useEffect(() => {\r\n    console.log(state);\r\n    if (show) {\r\n      rightlayer !== null && map.removeLayer(rightlayer);\r\n      leftlayer !== null && map.removeLayer(leftlayer);\r\n      sbs !== null && map.removeControl(sbs);\r\n      baselayer === null &&\r\n        (baselayer = L.tileLayer(\"http://{s}.tile.osm.org/{z}/{x}/{y}.png\", {\r\n          attribution:\r\n            '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\r\n          zIndex: 99,\r\n        }).addTo(map));\r\n      right[0] === undefined\r\n        ? (rightlayer = L.tileLayer(\"http://{s}.tile.osm.org/{z}/{x}/{y}.png\", {\r\n            attribution:\r\n              '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\r\n          }).addTo(map))\r\n        : (rightlayer = L.tileLayer\r\n            .wms(right[0].link, {\r\n              layers: right[0].layer,\r\n              format: \"image/png\",\r\n              transparent: true,\r\n              zIndex: 100,\r\n            })\r\n            .addTo(map));\r\n\r\n      left[0] === undefined\r\n        ? (leftlayer = L.tileLayer(\"http://{s}.tile.osm.org/{z}/{x}/{y}.png\", {\r\n            attribution:\r\n              '&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors',\r\n          }).addTo(map))\r\n        : (leftlayer = L.tileLayer\r\n            .wms(left[0].link, {\r\n              layers: left[0].layer,\r\n              format: \"image/png\",\r\n              transparent: true,\r\n              zIndex: 100,\r\n            })\r\n            .addTo(map));\r\n\r\n      sbs = L.control.sideBySide(rightlayer, leftlayer);\r\n      sbs.addTo(map);\r\n    } else {\r\n      if (sbs !== null) {\r\n        map.removeLayer(baselayer);\r\n        map.removeControl(sbs);\r\n        map.removeLayer(rightlayer);\r\n        map.removeLayer(leftlayer);\r\n      }\r\n    }\r\n  }, [show, state]);\r\n\r\n  return null;\r\n};\r\n\r\nexport default SwpieMapControl;\r\n","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\AddAnalyticsLayer.js",["266","267"],"import { useMap } from \"react-leaflet\";\r\nimport L from \"leaflet\";\r\nimport { analyticoper } from \"../config\";\r\nlet analyticslayer = null;\r\n\r\nconst AddAnalyticsLayer = ({ test, showAnalytics }) => {\r\n  let data = null;\r\n  test = test.filter((state) => state.show)[0];\r\n  console.log(test);\r\n\r\n  // console.log(test);\r\n  test =\r\n    test.operation === \"visu\"\r\n      ? { ...test }\r\n      : { ...test, dates: test.dates.join() };\r\n  if (\r\n    analyticoper.filter(\r\n      (operations) => operations.state === test.dataset\r\n    )[0] !== undefined\r\n  ) {\r\n    if (test.operation === \"visu\") {\r\n      data = analyticoper.filter(\r\n        (operations) => operations.state === test.dataset\r\n      )[0].wmsname;\r\n    } else {\r\n      data = analyticoper.filter(\r\n        (operations) => operations.state === test.dataset\r\n      )[0].wmsname_op;\r\n    }\r\n  }\r\n  const map = useMap();\r\n  // console.log(test);\r\n\r\n  if (analyticslayer != null) {\r\n    map.removeLayer(analyticslayer);\r\n  }\r\n  if (test.dataset == \"sentinel1\") {\r\n    analyticslayer = L.tileLayer.wms(\r\n      \"https://analytics.nesdr.gov.in/nerdrr_sentinel_1/visu?band=1\",\r\n      {\r\n        // date: test.dates,\r\n        format: \"image/png\",\r\n        transparent: true,\r\n      }\r\n    );\r\n  }\r\n  else{\r\n  if (test.operation === \"visu\") {\r\n    analyticslayer = L.tileLayer.wms(\r\n      \"https://analytics.nesdr.gov.in/nerdrr_sentinel_2/\" +\r\n        test.operation +\r\n        \"?\",\r\n      {\r\n        date: test.dates,\r\n        format: \"image/png\",\r\n        transparent: true,\r\n        zIndex: 100,\r\n\r\n        band1: test.bands !== undefined && test.bands[0],\r\n        band2: test.bands !== undefined && test.bands[1],\r\n        band3: test.bands !== undefined && test.bands[2],\r\n        //  }),\r\n        //   ...(data === \"modis_flood\" && {\r\n        //     fromrange: test.fromrange,\r\n        //     torange: test.torange,\r\n        //   }),\r\n      }\r\n    );\r\n  } else if (test.operation === \"Custom\") {\r\n    analyticslayer = L.tileLayer.wms(\r\n      \"https://analytics.nesdr.gov.in/nerdrr_sentinel_2/custom?exp=\"+encodeURIComponent(test.custom)+\"&color=default&from=-1.0&to=1.0\",\r\n      {\r\n        date: test.dates,\r\n        format: \"image/png\",\r\n        transparent: true,\r\n        // zIndex: 100,\r\n\r\n        //  }),\r\n        //   ...(data === \"modis_flood\" && {\r\n        //     fromrange: test.fromrange,\r\n        //     torange: test.torange,\r\n        //   }),\r\n      }\r\n    );\r\n  } else {\r\n    analyticslayer = L.tileLayer.wms(\r\n      \"https://analytics.nesdr.gov.in/nerdrr_sentinel_2/oper?color=default&from=-1.0&to=1.0&oper=\" +\r\n        test.operation +\r\n        \"&dataset=sentinal2\",\r\n      {\r\n        date: test.dates,\r\n        format: \"image/png\",\r\n        transparent: true,\r\n        zIndex: 100,\r\n\r\n        //  }),\r\n        //   ...(data === \"modis_flood\" && {\r\n        //     fromrange: test.fromrange,\r\n        //     torange: test.torange,\r\n        //   }),\r\n      }\r\n    );\r\n  }\r\n}\r\n  map.addLayer(analyticslayer);\r\n  if (showAnalytics) {\r\n    console.log(showAnalytics);\r\n    map.removeLayer(analyticslayer);\r\n  }\r\n  return null;\r\n};\r\n\r\nexport default AddAnalyticsLayer;\r\n","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\AddTimeseries.js",["268","269","270"],"import { useMap } from \"react-leaflet\";\r\nimport { useEffect } from \"react\";\r\nimport L from \"leaflet\";\r\n\r\nlet analyticslayer = null;\r\n\r\nfunction AddTimeseries({ test, showAnalytics }) {\r\n  console.log(test);\r\n  let data = null;\r\n  const map = useMap();\r\n  useEffect(() => {\r\n    if (analyticslayer != null) {\r\n      map.removeLayer(analyticslayer);\r\n    }\r\n    analyticslayer = L.tileLayer.wms(test[1], {\r\n      layers: test[0],\r\n      format: \"image/png\",\r\n      transparent: true,\r\n      zIndex: 100,\r\n    });\r\n    map.addLayer(analyticslayer);\r\n    if (!showAnalytics) {\r\n      map.removeLayer(analyticslayer);\r\n    }\r\n  }, [test, showAnalytics]);\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n    //    if (!showAnalytics) {\r\n            map.removeLayer(analyticslayer);\r\n    //      }  \r\n        //   else{\r\n        //     map.addLayer(analyticslayer);\r\n\r\n        //   }\r\n    };\r\n  }, []);\r\n\r\n  return null;\r\n}\r\n\r\nexport default AddTimeseries","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\Info.js",["271","272","273","274"],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setInfoDetails } from \"../features/layers/infoboxslice\";\r\nimport styled from \"styled-components\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { selectLayerDataSet } from \"../features/layers/overlaylayerslice\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\nconst Info = ({ info, state }) => {\r\n  const [featureInfo, setFeatureInfo] = useState({\r\n    data: [],\r\n    isFetching: false,\r\n  });\r\n  const [showLayer, setShowLayer] = useState(true);\r\n  const dispatch = useDispatch();\r\n\r\n  const overlayLayers = useSelector(selectLayerDataSet);\r\n  const activelayers = overlayLayers.filter((e) => e.show).map((e) => e.text);\r\n  const getInfo = async () => {\r\n  //  console.log(info)\r\n    try {\r\n      setFeatureInfo({ data: [], isFetching: true });\r\n\r\n      // console.log(formData);\r\n      fetch(\r\n        info.link +\r\n          \"?SERVICE=WMS&VERSION=1.1.1&REQUEST=GetFeatureInfo&QUERY_LAYERS=\" +\r\n          info.layer +\r\n          \"&LAYERS=\" +\r\n          info.layer +\r\n          \"&INFO_FORMAT=application/json&FEATURE_COUNT=50&X=\" +\r\n          state.point.x +\r\n          \"&Y=\" +\r\n          state.point.y +\r\n          \"&WIDTH=\" +\r\n          state.shape.x +\r\n          \"&HEIGHT=\" +\r\n          state.shape.y +\r\n          \"&BBOX=\" +\r\n          state.bounds,\r\n        {\r\n          method: \"GET\",\r\n        }\r\n      )\r\n        .then((response) => response.json())\r\n        .then((result) => {\r\n          console.log(result.numberReturned)\r\n          // if (\r\n          //   activelayers.includes(\"State Boundary\") &\r\n          //   activelayers.includes(\"District Boundary\")\r\n          // ) {\r\n          //   result.features[0].properties.dtname !== undefined &&\r\n          //     dispatch(\r\n          //       setInfoDetails({\r\n          //         statename: result.features[0].properties.stname,\r\n          //         distname: result.features[0].properties.dtname,\r\n          //       })\r\n          //     );\r\n          // } else {\r\n          //   result.features.length>0&&dispatch(\r\n          //     // result.features[0].properties.dtname !== undefined &&\r\n          //     setInfoDetails({\r\n          //       statename: result.features[0].properties.stname,\r\n          //       // distname: result.features[0].properties.dtname,\r\n          //     })\r\n          //   );\r\n          // }\r\n          // );\r\n          // result.features[0].properties.dtname !== undefined;\r\n\r\n          setFeatureInfo({ data: result.features, isFetching: false });\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error:\", error);\r\n          setFeatureInfo({ ...featureInfo, isFetching: false });\r\n\r\n        });\r\n      setFeatureInfo({ ...featureInfo, isFetching: true });\r\n    } catch (exception) {\r\n      console.log(exception);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // AddAnalytics()\r\n    getInfo();\r\n  }, [state]);\r\n  return (\r\n    (\r\n      <INFO>\r\n\r\n      \r\n        {featureInfo.isFetching ? (\r\n          <CircularProgress />\r\n        ) : (\r\n          featureInfo.data.length > 0 && (\r\n            <React.Fragment ><div className=\"InfoBox\">         \r\n                <p onClick={() => setShowLayer(!showLayer)}>\r\n                {showLayer ? (\r\n                    <RemoveIcon />\r\n                  ) : (\r\n                    <AddIcon />\r\n                  )}\r\n                  {info.text}\r\n                </p>\r\n                {/* <p>{info.text}</p> */}\r\n                <table className={`${showLayer ? \"showtable\" : \"visibility\"}`}>\r\n                  <thead >\r\n                    <tr >\r\n                      <td style={{backgroundColor:\"orange\", fontWeight:\"bold\"}}>Attribute</td>\r\n                      <td style={{backgroundColor:\"orange\", fontWeight:\"bold\"}}>Value</td>\r\n                    </tr>\r\n                  </thead>\r\n                  <tbody >\r\n                    {featureInfo.data[0] !== undefined && info.attributes\r\n                      ? info.attributes.map((attribute) =>\r\n                          Object.keys(featureInfo.data[0].properties)\r\n                            .filter((e) => e === attribute.value)\r\n                            .map(function (element, index) {\r\n                              return (\r\n                                <tr key={index}>\r\n                                  <td >{attribute.text}</td>\r\n                                  <td >\r\n                                    {featureInfo.data[0].properties[element]}\r\n                                  </td>\r\n                                </tr>\r\n                              );\r\n                            })\r\n                        )\r\n                      : Object.keys(featureInfo.data[0].properties).map(function (\r\n                          element,\r\n                          index\r\n                        ) {\r\n                          return (\r\n                            <tr key={index}>\r\n                              <td>{element}</td>\r\n                              <td>{featureInfo.data[0].properties[element]}</td>\r\n                            </tr>\r\n                          );\r\n                        })}\r\n                  </tbody>\r\n                </table>\r\n            </div>\r\n            </React.Fragment>\r\n          )\r\n        )}\r\n      </INFO>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Info;\r\n\r\nexport const INFO = styled.div`\r\n  /* width: 10%; */\r\n  /* table-layout: fixed; */\r\n  .Infobox{\r\n    \r\n    /* border-radius: 10px; */\r\n\r\n  }\r\n  p {\r\n    background: #294da1;\r\n    align-items: center;\r\n    width: 100%;\r\n    padding: 8px 10px;\r\n    border-bottom: 1px solid #ccc; \r\n  }\r\n  p > .MuiSvgIcon-root {\r\n    float: left;\r\n    color: gray;\r\n  }\r\n  .visibility {\r\n    display: none;\r\n  }\r\n  table {\r\n    /* margin-left: 1%; */\r\n    margin-top: 2%;\r\n    margin-bottom: 2%;\r\n    /* margin-right: 18%; */\r\n    /* max-width: 20%; */\r\n    table-layout: fixed;\r\n    width: 100%;\r\n\r\n    /* border: none; */\r\n    border-collapse: collapse;\r\n    border: 1px solid #dadada;\r\n\r\n    background-color: #222222;\r\n  }\r\n  table tr {\r\n    margin-bottom: 1px;\r\n    border-bottom: 0.5px solid #dadada;\r\n    word-break: break-all;\r\n  }\r\n  .showtable{\r\n    height:20%;\r\n  }\r\n  table td {\r\n    padding: 6px !important;\r\n    text-align: center !important;\r\n    background-color:white;\r\n    color:black !important;\r\n    font-weight: 400;\r\n}\r\n`;\r\n","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\SidePanel.js",[],"E:\\sanjiv\\CODE\\nerdrr\\src\\components\\LayerTree.js",[],"E:\\sanjiv\\CODE\\nerdrr\\src\\components\\BaseSwitcher.js",[],"E:\\sanjiv\\CODE\\nerdrr\\src\\components\\AlertPanel.js",[],"E:\\sanjiv\\CODE\\nerdrr\\src\\components\\AnalyticsPanel.js",[],"E:\\sanjiv\\CODE\\nerdrr\\src\\components\\AppsPanel.js",["275","276"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setBaseDetails } from \"../features/layers/baselayerslice\";\r\nimport { setAppDetails } from \"../features/layers/appslice\";\r\nconst AppsPanel = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  // const basedata = useSelector(selectBaseDataSet);\r\n  const ChangeMap = (e) => {\r\n    dispatch(\r\n      setAppDetails({\r\n        data: e,\r\n        show: true,\r\n      })\r\n    );\r\n  };\r\n\r\n\r\n  return (\r\n    <VEGANALYSIS>\r\n      <p className=\"heads\">Applications</p>\r\n\r\n      <div className=\"apps\"  onClick={() => ChangeMap(\"GeoPortal\")}>\r\n        <p>Geo Portal</p>\r\n      </div>\r\n\r\n      <div className=\" apps\" onClick={() => ChangeMap(\"Flood\")}>\r\n        <p>Flood</p>\r\n      </div>\r\n\r\n      <div className=\" apps\" onClick={() => ChangeMap(\"lightning\")}>\r\n        <p>Lightning/Thunderstrom</p>\r\n      </div>\r\n\r\n      <div className=\" apps\" onClick={() => ChangeMap(\"Agriculture\")}>\r\n        <p>Agriculture</p>\r\n      </div>\r\n\r\n      <div className=\" apps\" onClick={() => ChangeMap(\"Geosciences\")}>\r\n        <p>Geosciences</p>\r\n      </div>\r\n    </VEGANALYSIS>\r\n  );\r\n};\r\n\r\nexport default AppsPanel;\r\n\r\nconst VEGANALYSIS = styled.div`\r\n  .heads {\r\n    background: #004b96bd;\r\n    align-items: flex-end;\r\n    width: 100%;\r\n    padding: 8px 10px;\r\n    cursor: pointer;\r\n    border-bottom: 1px solid rgb(131, 130, 130);\r\n    font-size: 14px;\r\n    color: #fff;\r\n  }\r\n  .apps {\r\n    padding: 10px;\r\n    margin: 10px;\r\n    border-radius: 15px;\r\n    background: #3a3a3a;\r\n    border: 1px solid rgb(131, 130, 130);\r\n    align-items: flex-end;\r\n    width: 20rem;\r\n    height: 50px;\r\n    padding: 8px 10px;\r\n    cursor: pointer;\r\n    border-bottom: 1px solid rgb(131, 130, 130);\r\n    font-size: 14px;\r\n    color: #fff;\r\n  }\r\n  .apps:hover {\r\n    background-color: #bdbdbd;\r\n    border: black;\r\n    color: #fff;\r\n  }\r\n`;\r\n","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\ToolsPanel.js",["277","278","279","280","281"],"E:\\sanjiv\\CODE\\nerdrr\\src\\components\\collapsebutton.js",["282"],"E:\\sanjiv\\CODE\\nerdrr\\src\\components\\Statdatatable.js",["283","284","285","286","287","288","289","290","291","292","293","294","295","296","297","298","299","300","301","302","303","304","305","306","307","308","309","310","311","312","313","314","315","316","317","318"],"E:\\sanjiv\\CODE\\nerdrr\\src\\components\\Stats.js",["319","320","321","322","323","324","325","326","327","328","329","330","331","332","333","334","335","336","337","338","339","340","341"],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport { selectInfo } from \"../features/layers/infoboxslice\";\r\nimport { selectLayerDataSet } from \"../features/layers/overlaylayerslice\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport Highcharts from \"highcharts\";\r\nimport HighchartsReact from \"highcharts-react-official\";\r\nimport Cbutton from \"./collapsebutton\";\r\nimport { ContactsOutlined } from \"@material-ui/icons\";\r\nimport Statsdatatable from \"./Statdatatable\";\r\nconst Stats = ({ info, state }) => {\r\n  const [featureInfo, setFeatureInfo] = useState({\r\n    data: [],\r\n    isFetching: false,\r\n  });\r\n  const [options, setOptions] = useState([]);\r\n  const [showLayer, setShowLayer] = useState(false);\r\n  const infodata = useSelector(selectInfo);\r\n  const layerdata = useSelector(selectLayerDataSet);\r\n  // var dateapi=layerdata[25].layer_date;\r\n  // console.log(dateapi)\r\n  var dateapi;\r\n  useEffect(() => {\r\n    dateapi = layerdata[25].layer_date;\r\n    getInfo(dateapi)\r\n  }, [layerdata]);\r\n  const getInfo = async (e) => {\r\n    var cropdamsyear=e;\r\n    try {\r\n      setFeatureInfo({ data: [], isFetching: true });\r\n      console.log(info.stats.val)\r\n      if (info.stats.val == \"flood\") {\r\n        var urlapi = info.stats.api + '' + (e.districtname !== undefined ? e.districtname.toUpperCase() : \"\")\r\n      }else\r\n      if (info.stats.val == \"firev\") {\r\n        var urlapi = info.stats.api + '' + (e.districtname !== undefined ? e.districtname : \"\")\r\n      }else\r\n      if (info.stats.val == \"cropyear\") {\r\n        if(cropdamsyear=='2005-2011'){\r\n          var urlapi=info.options[0].api+ '' + (e.districtname !== undefined ? e.districtname.toLowerCase() : \"\")\r\n        }else if(cropdamsyear=='2005-2015'){\r\n          var urlapi=info.options[1].api+ '' + (e.districtname !== undefined ? e.districtname.toLowerCase() : \"\")\r\n        }else if(cropdamsyear=='2011-2015'){\r\n          var urlapi=info.options[2].api+ '' + (e.districtname !== undefined ? e.districtname.toLowerCase() : \"\")\r\n        }else{\r\n          var urlapi=info.options[0].api+ '' + (e.districtname !== undefined ? e.districtname.toLowerCase() : \"\")\r\n        }\r\n      }\r\n      console.log(urlapi)\r\n      fetch(\r\n        urlapi, {\r\n        method: \"GET\",\r\n      })\r\n        .then((response) => response.json())\r\n        .then((result) => {\r\n         // console.log(result)\r\n          if (info.stats.val == \"flood\") {\r\n            var date = result.map((e) => e.date);\r\n            var chartarea = result.map((e) => Number(e.area) / 1000000);\r\n          }\r\n          if (info.stats.val == \"firev\") {\r\n            var a1 = result.map((e) => Number(e.area1) / 1000000);\r\n            var a2 = result.map((e) => Number(e.area2) / 1000000);\r\n            var a3 = result.map((e) => Number(e.area3) / 1000000);\r\n            var a4 = result.map((e) => Number(e.area4) / 1000000);\r\n            var a5 = result.map((e) => Number(e.area5) / 1000000);\r\n            var chartarea = [{\r\n              name: 'Very Low',\r\n              y: a1[0],\r\n              sliced: true,\r\n              selected: true\r\n            }, {\r\n              name: 'Low',\r\n              y: a2[0],\r\n            }, {\r\n              name: 'Moderate',\r\n              y: a3[0],\r\n            }, {\r\n              name: 'High',\r\n              y: a4[0],\r\n            }, {\r\n              name: 'Very High',\r\n              y: a5[0],\r\n            }]\r\n            var date = \"\";\r\n          }\r\n          if (info.stats.val == \"cropyear\") {\r\n            var date = result.map((e) => e.district);\r\n            var chartarea = result.map((e) => Number(e.area) / 1000000);\r\n          }\r\n          setFeatureInfo({ data: [result], isFetching: false });\r\n          setOptions({\r\n            chart: {\r\n              width: 300,\r\n              backgroundColor: {\r\n                linearGradient: {\r\n                  x1: 0,\r\n                  y1: 0,\r\n                  x2: 1,\r\n                  y2: 1,\r\n                },\r\n                stops: [\r\n                  [0, \"white\"],\r\n                  [1, \"white\"],\r\n                ],\r\n              },\r\n              type: info.stats.charttype,\r\n            },\r\n            credits: {\r\n              enabled: false,\r\n            },\r\n\r\n            xAxis: {\r\n              title: {\r\n                // color: \"#E0E0E3\",\r\n                text: \"\",\r\n              },\r\n              labels: {\r\n                style: {\r\n                  //   color: \"#E0E0E3\",\r\n                },\r\n              },\r\n              categories: date,\r\n            },\r\n            yAxis: {\r\n              crosshair: false,\r\n              title: {\r\n                // color: \"#E0E0E3\",\r\n                text: \"Area (sq. km)\",\r\n              },\r\n              labels: {\r\n                style: {\r\n                  // color: \"#E0E0E3\",\r\n                },\r\n                formatter: function () {\r\n                  return this.value;\r\n                },\r\n              },\r\n            },\r\n            tooltip: {\r\n              formatter: function () {\r\n                return (\r\n                  \"Total Area is <b>\" + this.y + \"</b>\"\r\n                );\r\n              },\r\n            },\r\n            plotOptions: {\r\n              pie: {\r\n                colors: [\r\n                  'green', \r\n                  'rgb(100, 229, 114)', \r\n                  '#DDDF00', \r\n                  'orange', \r\n                  'red'\r\n                ],\r\n                allowPointSelect: true,\r\n                cursor: 'pointer',\r\n                dataLabels: {\r\n                  enabled: false,\r\n                }\r\n              },\r\n              spline: {\r\n                marker: {\r\n                  radius: 4,\r\n                  // lineColor: \"#666666\",\r\n                  lineWidth: 1,\r\n                },\r\n              },\r\n            },\r\n            legend: {\r\n              backgroundColor: \"white\",\r\n              itemStyle: {\r\n                color: \"black\",\r\n              },\r\n              itemHoverStyle: {\r\n                color: \"black\",\r\n              },\r\n              itemHiddenStyle: {\r\n                color: \"#606063\",\r\n              },\r\n              title: {\r\n                style: {\r\n                  color: \"#C0C0C0\",\r\n                },\r\n              },\r\n            },\r\n            series: [\r\n              {\r\n                showInLegend: true,\r\n                name: \"Area\",\r\n                data: chartarea,\r\n              },\r\n            ],\r\n          });\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error:\", error);\r\n        });\r\n      setFeatureInfo({ ...featureInfo, isFetching: true });\r\n    } catch (exception) {\r\n      // console.log(exception);\r\n      //     setFeatureInfo({ featureInfo: featureInfo.data, isFetching: false });\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getInfo(infodata);\r\n    //console.log(infodata)\r\n  }, [infodata, info]);\r\n  return (\r\n    <>\r\n      <INFO>\r\n        {featureInfo.isFetching ? (\r\n          <CircularProgress />\r\n        ) : (\r\n          featureInfo.data.length > 0 && (\r\n            <React.Fragment>\r\n              <p onClick={() => setShowLayer(!showLayer)}>{info.text}</p>\r\n              <HighchartsReact highcharts={Highcharts} options={options} />\r\n              {/* <Test/> */}\r\n            </React.Fragment>\r\n          )\r\n        )}\r\n        <Statsdatatable/>\r\n      </INFO>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Stats;\r\n\r\nexport const INFO = styled.div`\r\n  /* width: 10%; */\r\n  color: white;\r\n  /* table-layout: fixed; */\r\n  p {\r\n    background: white;\r\n    align-items: center;\r\n    width: 100%;\r\n    padding: 8px 10px;\r\n    border-bottom: 1px solid #ccc;\r\n    color:black;\r\n  }\r\n  p > .MuiSvgIcon-root {\r\n    float: right;\r\n    color: gray;\r\n  }\r\n  .visibility {\r\n    display: none;\r\n  }\r\n  table {\r\n    margin-left: 0%;\r\n    margin-top: 2%;\r\n    margin-bottom: 2%;\r\n    /* max-width: 20%; */\r\n    table-layout: fixed;\r\n    width: 100%;\r\n    /* border: none; */\r\n    border-collapse: collapse;\r\n    border: 1px solid #dadada;\r\n    background-color: #222222;\r\n  }\r\n  table tr {\r\n    margin-bottom: 1px;\r\n    border-bottom: 0.5px solid #dadada;\r\n    word-break: break-all;\r\n    width:80%;\r\n  }\r\n  table td {\r\n    padding: 6px !important;\r\n    text-align: center !important;\r\n    background-color:white;\r\n    color:black !important;\r\n    font-weight: 400;\r\n}\r\ntable th {\r\n  padding: 6px !important;\r\n  text-align: center !important;\r\n  background-color:orange !important;\r\n  font-weight:bold !important;\r\n  color:black !important;\r\n  font-weight:\"bold\";\r\n}\r\ndiv.mdb-datatable div.mdb-datatable-info {\r\n  display: none !important;\r\n}\r\ndiv.mdb-datatable div.mdb-datatable-info, div.mdb-datatable div.mdb-dataTables_paginate, div.mdb-datatable div.mdb-datatable-entries {\r\n  padding-top: 0rem !important;\r\n  padding-bottom: 0rem !important;\r\n  padding-left: 0rem !important;\r\n}\r\n.pagination .page-item .page-link {\r\n  text-align:center !important;\r\n}\r\n`;\r\n","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\Layer.js",[],"E:\\sanjiv\\CODE\\nerdrr\\src\\components\\AnalyticsAnalysis.js",["342","343","344","345","346","347","348"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport {\r\n  selectDataSet,\r\n  setAnalyticsDetails,\r\n} from \"../features/layers/layerslice\";\r\nimport {\r\n  setAnalyticsVisual,\r\n  selectLayerData,\r\n} from \"../features/layers/layervisualiseslice\";\r\nimport styled from \"styled-components\";\r\nimport { analyticoper } from \"../config\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\nconst AnalyticsAnalysis = () => {\r\n  const [analytics, setanalytics] = useState(\"Change\");\r\n  const dispatch = useDispatch();\r\n  // const dispatch1 = useDispatch();\r\n  const [showtext, setshowtext]= useState(false)\r\n  const state = useSelector(selectDataSet);\r\n  // const [data, setData] = useState(\"modis_ndvi\");\r\n  const visualise = useSelector(selectLayerData);\r\n  const setOperation = (e) => {\r\n    e===\"custom\"?(setshowtext(true)):setshowtext(false)\r\n    console.log(showtext)\r\n    dispatch(setAnalyticsDetails({ ...state, operation: e, show: true }));\r\n    dispatch(setAnalyticsVisual({ ...visualise, show: false }));\r\n  };\r\n\r\n\r\n  const setCustomOperation = (e) => {\r\n    // e===\"custom\"?(setshowtext(true)):setshowtext(false)\r\n    console.log(e)\r\n    dispatch(setAnalyticsDetails({ ...state, operation: \"Custom\", custom:e, show: true }));\r\n    dispatch(setAnalyticsVisual({ ...visualise, show: false }));\r\n  };\r\n\r\n  const setDataset = (e) => {\r\n    dispatch(setAnalyticsDetails({ ...state, dataset: e, show: true }));\r\n    dispatch(setAnalyticsVisual({ ...visualise, show: false }));\r\n  };\r\n\r\n  const [date, setdate] = useState({\r\n    dates: [],\r\n    isFetching: false,\r\n  });\r\n\r\n  const setDate = (e) => {\r\n    // getDates();\r\n\r\n    dispatch(\r\n      setAnalyticsVisual({\r\n        ...state,\r\n        show: true,\r\n      })\r\n    );\r\n    // dispatch(setAnalyticsVisual({ ...visualise, show: false }));\r\n  };\r\n\r\n  const fetchDates = async () => {\r\n    try {\r\n      setdate({ dates: [], isFetching: false });\r\n      const formData = new FormData();\r\n      formData.append(\"database\", state.dataset);\r\n      formData.append(\"key\", \"mgy1exz0n8mXQXi8NrOq24DDvmLrZ16a\");\r\n      // console.log(formData);\r\n      fetch(\"https://mobileapp.nesdr.gov.in/analytics_api/modis_ndvi.php\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      })\r\n        .then((response) => response.json())\r\n        .then((result) => {\r\n          // console.log(result);\r\n          setdate({ dates: result, isFetching: false });\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error:\", error);\r\n        });\r\n      // console.log(response);\r\n      setdate({ ...date, isFetching: true });\r\n    } catch (exception) {\r\n      console.log(exception);\r\n      setdate({ dates: date.dates, isFetching: false });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchDates();\r\n\r\n    dispatch(\r\n      setAnalyticsVisual({\r\n        ...state,\r\n        show: true,\r\n      })\r\n    );\r\n    //dispatch(setAnalyticsVisual({ ...state, dates: document.getElementById(\"date\").value, show: true }));\r\n  }, [state.dataset]);\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      setAnalyticsVisual({\r\n        ...state,\r\n        dataset: document.getElementById(\"data\").value,\r\n        show: true,\r\n      })\r\n    );\r\n    dispatch(\r\n      setAnalyticsVisual({\r\n        ...state,\r\n        show: true,\r\n      })\r\n    );\r\n    fetchDates();\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      setAnalyticsDetails({\r\n        ...state,\r\n        dataset: document.getElementById(\"data\").value,\r\n      })\r\n    );\r\n  }, []);\r\n\r\n  return (\r\n    <VEGANALYSIS>\r\n      <div className=\"LayerTree\">\r\n        <p className=\"heads\">Dataset</p>\r\n      </div>\r\n      <select\r\n        id=\"data\"\r\n        className=\"SelectMenu\"\r\n        onChange={(event) => setDataset(event.target.value)}\r\n      >\r\n        <option value=\"modis_ndvi\">Sentinel 1</option>\r\n        <option value=\"sentinal\">Sentinel 2</option>\r\n      </select>\r\n      <div className=\"LayerTree\">\r\n        <p className=\"heads\">Date</p>\r\n      </div>\r\n      {date.isFetching ? (\r\n        <CircularProgress />\r\n      ) : (\r\n        <React.Fragment>\r\n          <div>\r\n            <select\r\n              id=\"date\"\r\n              className=\"SelectMenu\"\r\n              onChange={(event) => setDate(event.target.value)}\r\n            >\r\n              {date.dates.map((task, index) => (\r\n                <option key={index} value={task.time_stamp}>\r\n                  {task.date}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        </React.Fragment>\r\n      )}\r\n      <div className=\"LayerTree\">\r\n        <p>Operations</p>\r\n      </div>\r\n\r\n      <select\r\n        className=\"SelectMenu\"\r\n        onChange={(event) => {\r\n          setOperation(event.target.value);\r\n        }}\r\n      >\r\n        {/* {analyticoper\r\n          .filter((operations) => operations.state === state.dataset)[0]\r\n          .operations.map((ops) => ( */}\r\n        <option value=\"NDVI\">NDVI</option>\r\n        <option value=\"SAVI\">SAVI</option>\r\n        <option value=\"NBR\">NBR</option>\r\n        <option value=\"NDWI\">NDWI</option>\r\n        <option value=\"EVI\">EVI</option>\r\n        <option value=\"custom\">Custom</option>\r\n\r\n        {/* ))} */}\r\n      </select>\r\n{    showtext&&    <input className=\"input\" type=\"text\" id=\"lname\" name=\"lname\"  onBlur={(event) => {\r\n          setCustomOperation(event.target.value);\r\n        }}/>\r\n\r\n}\r\n    </VEGANALYSIS>\r\n  );\r\n};\r\n\r\nexport default AnalyticsAnalysis;\r\n\r\nconst VEGANALYSIS = styled.div`\r\n  font-family: \"Poppins\", sans-serif;\r\n  /* padding-right: 15px;\r\n    padding-left: 15px;  */\r\n  background-color: #fff;\r\n  font-size: 14px;\r\n  margin-bottom: 15px;\r\n  padding-bottom: 15px;\r\n  .heads {\r\n    box-shadow: 0px 2px 1px -1px rgb(0 0 0 / 20%),\r\n      0px 1px 1px 0px rgb(0 0 0 / 14%), 0px 1px 3px 0px rgb(0 0 0 / 12%);\r\n    border-bottom: black;\r\n  }\r\n  .SelectMenu {\r\n    border: 1px solid #555;\r\n    border-radius: 4px;\r\n    box-shadow: none;\r\n    font-size: 12px;\r\n    font-weight: 400;\r\n    /* width: 5000px; */\r\n    display: block;\r\n    width: 70%;\r\n    height: 34px;\r\n    padding: 6px 12px;\r\n    font-size: 14px;\r\n    line-height: 1.42857143;\r\n    color: #555;\r\n    background-color: #fff;\r\n    background-image: none;\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n    margin-left: 40px;\r\n    margin-right: 10px;\r\n  }\r\n\r\n  .input {\r\n    border: 1px solid #555;\r\n    border-radius: 4px;\r\n    box-shadow: none;\r\n    font-size: 12px;\r\n    font-weight: 400;\r\n    /* width: 5000px; */\r\n    display: block;\r\n    width: 70%;\r\n    height: 34px;\r\n    padding: 6px 12px;\r\n    font-size: 14px;\r\n    line-height: 1.42857143;\r\n    color: #555;\r\n    background-color: #fff;\r\n    background-image: none;\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n    margin-left: 40px;\r\n    margin-right: 10px;\r\n  }\r\n`;\r\n","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\AnalyticsVisualise.js",["349","350","351"],"import React, { useState, useEffect } from \"react\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { useSelector } from \"react-redux\";\r\nimport {\r\n  setAnalyticsVisual,\r\n  selectLayerData,\r\n} from \"../features/layers/layervisualiseslice\";\r\nimport styled from \"styled-components\";\r\n\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport reactDom from \"react-dom\";\r\n\r\nconst AnalyticsVisualise = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  const state = useSelector(selectLayerData);\r\n\r\n  const setDate = (e) => {\r\n    dispatch(setAnalyticsVisual({ ...state, dates: e, show: true }));\r\n  };\r\n\r\n  const setDataset = (e) => {\r\n    dispatch(setAnalyticsVisual({ ...state, dataset: e, show:true }));\r\n  };\r\n\r\n  const [date, setdate] = useState({\r\n    dates: [],\r\n    isFetching: false,\r\n  });\r\n\r\n\r\n  const setBand = (e) => {\r\n    let red = document.getElementById(\"red\").value;\r\n    let green = document.getElementById(\"green\").value;\r\n    let blue = document.getElementById(\"blue\").value;\r\n    // getDates();\r\n    console.log([red,green,blue])\r\n    \r\n    dispatch(\r\n      setAnalyticsVisual({\r\n        ...state,\r\n        bands: [red, green, blue],\r\n        show: true,\r\n      })\r\n    );\r\n    // dispatch(setAnalyticsVisual({ ...visualise, show: false }));\r\n  };\r\n\r\n  const fetchDates = async () => {\r\n    try {\r\n      setdate({ dates: [], isFetching: false });\r\n      const formData = new FormData();\r\n      formData.append(\"database\", state.dataset);\r\n      formData.append(\"key\", \"mgy1exz0n8mXQXi8NrOq24DDvmLrZ16a\");\r\n      // console.log(formData);\r\n      fetch(\"https://mobileapp.nesdr.gov.in/analytics_api/modis_ndvi.php\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      })\r\n        .then((response) => response.json())\r\n        .then((result) => {\r\n          // console.log(result);\r\n          setdate({ dates: result, isFetching: false });\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error:\", error);\r\n        });\r\n      // console.log(response);\r\n      setdate({ ...date, isFetching: true });\r\n    } catch (exception) {\r\n      console.log(exception);\r\n      setdate({ dates: date.dates, isFetching: false });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchDates();\r\n    let red = document.getElementById(\"red\").value;\r\n    let green = document.getElementById(\"green\").value;\r\n    let blue = document.getElementById(\"blue\").value;\r\n    dispatch(\r\n      setAnalyticsVisual({\r\n        ...state,\r\n        bands: [red, green, blue],\r\n        show: true,\r\n      })\r\n    );\r\n    //dispatch(setAnalyticsVisual({ ...state, dates: document.getElementById(\"date\").value, show: true }));\r\n  }, [state.dataset]);\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      setAnalyticsVisual({\r\n        ...state,\r\n        dataset: document.getElementById(\"data\").value,\r\n        show: true,\r\n      })\r\n    );\r\n    let red = document.getElementById(\"red\").value;\r\n    let green = document.getElementById(\"green\").value;\r\n    let blue = document.getElementById(\"blue\").value;\r\n    dispatch(\r\n      setAnalyticsVisual({\r\n        ...state,\r\n        bands: [red, green, blue],\r\n        show: true,\r\n      })\r\n    );\r\n    fetchDates();\r\n  }, []);\r\n\r\n  return (\r\n    <VEGVISUALISE>\r\n      <div className=\"LayerTree\">\r\n        <p className=\"heads\">Dataset</p>\r\n      </div>\r\n      <select\r\n        id=\"data\"\r\n        className=\"SelectMenu\"\r\n        onChange={(event) => setDataset(event.target.value)}\r\n      >\r\n        <option value=\"sentinel1\">Sentinel 1</option>\r\n        <option value=\"sentinal\">Sentinel 2</option>\r\n      </select>\r\n      <div className=\"LayerTree\">\r\n        <p className=\"heads\">Date</p>\r\n      </div>\r\n      {date.isFetching ? (\r\n        <CircularProgress />\r\n      ) : (\r\n        <React.Fragment>\r\n          <div>\r\n            <select\r\n              id=\"date\"\r\n              className=\"SelectMenu\"\r\n              onChange={(event) => setDate(event.target.value)}\r\n            >\r\n              {date.dates.map((task, index) => (\r\n                <option key={index} value={task.time_stamp}>\r\n                  {task.date}\r\n                </option>\r\n              ))}\r\n            </select>\r\n          </div>\r\n        </React.Fragment>\r\n      )}\r\n      {state.dataset !== \"night_light\" && (\r\n        <React.Fragment>\r\n          <div className=\"LayerTree\">\r\n            <p className=\"heads\">Bands</p>\r\n          </div>\r\n\r\n          <div className=\"Bands\">\r\n            <div className=\"Change\">\r\n              <p>Red</p>\r\n              <select\r\n                id=\"red\"\r\n                className=\"SelectMenu1\"\r\n                 onChange={(e) => setBand(e.target.value)}\r\n              >\r\n                <option value=\"0\">Band 1</option>\r\n                <option value=\"1\">Band 2</option>\r\n                <option value=\"2\">Band 3</option>\r\n                <option value=\"3\">Band 4</option>\r\n                <option value=\"4\">Band 5</option>\r\n                <option value=\"5\">Band 6</option>\r\n                <option value=\"6\">Band 7</option>\r\n                <option value=\"7\">Band 8</option>\r\n                <option value=\"8\">Band 8A</option>\r\n                <option value=\"9\">Band 10</option>\r\n                <option value=\"10\">Band 11</option>\r\n                <option value=\"11\">Band 12</option>\r\n              </select>\r\n            </div>\r\n            <div className=\"Change\">\r\n              <p>Green</p>\r\n              <select\r\n                id=\"green\"\r\n                className=\"SelectMenu1\"\r\n                onChange={() => setBand()}\r\n              >\r\n                <option value=\"0\">Band 1</option>\r\n                <option value=\"1\">Band 2</option>\r\n                <option value=\"2\">Band 3</option>\r\n                <option value=\"3\">Band 4</option>\r\n                <option value=\"4\">Band 5</option>\r\n                <option value=\"5\">Band 6</option>\r\n                <option value=\"6\">Band 7</option>\r\n                <option value=\"7\">Band 8</option>\r\n                <option value=\"8\">Band 8A</option>\r\n                <option value=\"9\">Band 10</option>\r\n                <option value=\"10\">Band 11</option>\r\n                <option value=\"11\">Band 12</option>\r\n\r\n              </select>\r\n            </div>\r\n            <div className=\"Change\">\r\n              <p>Blue</p>\r\n              <select\r\n                id=\"blue\"\r\n                className=\"SelectMenu1\"\r\n                onChange={() => setBand()}\r\n              >\r\n                <option value=\"0\">Band 1</option>\r\n                <option value=\"1\">Band 2</option>\r\n                <option value=\"2\">Band 3</option>\r\n                <option value=\"3\">Band 4</option>\r\n                <option value=\"4\">Band 5</option>\r\n                <option value=\"5\">Band 6</option>\r\n                <option value=\"6\">Band 7</option>\r\n                <option value=\"7\">Band 8</option>\r\n                <option value=\"8\">Band 8A</option>\r\n                <option value=\"9\">Band 10</option>\r\n                <option value=\"10\">Band 11</option>\r\n                <option value=\"11\">Band 12</option>\r\n              </select>\r\n            </div>\r\n          </div>\r\n        </React.Fragment>\r\n      )}\r\n    </VEGVISUALISE>\r\n  );\r\n};\r\n\r\nexport default AnalyticsVisualise;\r\n\r\nconst VEGVISUALISE = styled.div`\r\n  font-family: \"Poppins\", sans-serif;\r\n  /* padding-right: 15px;\r\n  padding-left: 15px;  */\r\n  background-color: #fff;\r\n  font-size: 14px;\r\n  margin-bottom: 15px;\r\n  padding-bottom: 15px;\r\n  .heads {\r\n    box-shadow: 0px 2px 1px -1px rgb(0 0 0 / 20%),\r\n      0px 1px 1px 0px rgb(0 0 0 / 14%), 0px 1px 3px 0px rgb(0 0 0 / 12%);\r\n    border-bottom: black;\r\n  }\r\n  .SelectMenu {\r\n    border: 1px solid #555;\r\n    border-radius: 4px;\r\n    box-shadow: none;\r\n    font-size: 12px;\r\n    font-weight: 400;\r\n    /* width: 5000px; */\r\n    display: block;\r\n    width: 70%;\r\n    height: 34px;\r\n    padding: 6px 12px;\r\n    font-size: 14px;\r\n    line-height: 1.42857143;\r\n    color: #555;\r\n    background-color: #fff;\r\n    background-image: none;\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n    margin-left: 40px;\r\n    margin-right: 10px;\r\n  }\r\n  .Bands {\r\n    margin: 0px;\r\n    margin-left: 20px;\r\n    margin-right: 40px;\r\n  }\r\n  .Change {\r\n    display: flex;\r\n    justify-content: space-between;\r\n    /* margin: auto; */\r\n    top: 50%;\r\n  }\r\n  .Change > p {\r\n    margin-top: 15px;\r\n  }\r\n  .SelectMenu1 {\r\n    border: 1px solid #555;\r\n    border-radius: 4px;\r\n    box-shadow: none;\r\n    font-size: 12px;\r\n    font-weight: 400;\r\n    /* width: 5000px; */\r\n    display: block;\r\n    width: 50%;\r\n    height: 34px;\r\n    padding: 6px 12px;\r\n    font-size: 14px;\r\n    line-height: 1.42857143;\r\n    color: #555;\r\n    background-color: #fff;\r\n    background-image: none;\r\n    margin-top: 10px;\r\n    margin-bottom: 10px;\r\n    margin-left: 40px;\r\n    margin-right: 10px;\r\n  }\r\n`;","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\ProximityTool.js",["352","353","354","355","356","357","358","359","360"],"E:\\sanjiv\\CODE\\nerdrr\\src\\components\\TimeSlider.js",["361"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: 200,\r\n    display:\"flex\"\r\n  },\r\n  margin: {\r\n    height: theme.spacing(3),\r\n  },\r\n}));\r\n\r\nconst marks = [\r\n  {\r\n    value: 0,\r\n    label: '0°C',\r\n  },\r\n  {\r\n    value: 20,\r\n    label: '20°C',\r\n  },\r\n  {\r\n    value: 37,\r\n    label: '37°C',\r\n  },\r\n  {\r\n    value: 100,\r\n    label: '100°C',\r\n  },\r\n];\r\n\r\nfunction valuetext(value) {\r\n  return `${value}`;\r\n}\r\n\r\nexport default function TimeSlider() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n    <PlayArrowIcon/>  <Slider\r\n        defaultValue={20}\r\n        getAriaValueText={valuetext}\r\n        aria-labelledby=\"discrete-slider-custom\"\r\n        step={10}\r\n        valueLabelDisplay=\"auto\"\r\n        // marks={marks}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\Legen.js",["362","363"],"import React from 'react'\r\nimport { useState, useEffect } from \"react\";\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport RemoveIcon from '@material-ui/icons/Remove';\r\n\r\nconst Legen = ({ task, sanju }) => {\r\n  const [showlegend, setShowlegend] = useState(true);\r\n\r\n  return (\r\n    <div>\r\n      <p onClick={() => setShowlegend(!showlegend)}>\r\n        {showlegend ? (\r\n          <RemoveIcon />\r\n        ) : (\r\n          <AddIcon />\r\n        )}\r\n        {task.text}\r\n        {/* {console.log(task.id)} */}\r\n      </p>\r\n      <div className={`${showlegend ? \"\" : \"visibility\"}`}>\r\n        <img src={sanju} />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Legen\r\n","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\VectorTile.js",["364","365","366"],"import React from 'react'\r\nimport {useMap} from \"react-leaflet\"\r\nimport L from \"leaflet\";\r\n\r\n\r\nexport default VectorTile\r\nconst VectorTile = ({ show }) => {\r\n    console.log(\"Hi\");\r\n    const map = useMap();\r\n    // useEffect(() => {\r\n    var vectorTileOptions = {\r\n      interactive: true,\r\n      pane: \"OverlayPane\",\r\n      vectorTileLayerStyles: {\r\n        AP_VILLAGE_V2: {\r\n          weight: 0,\r\n          fillColor: \"#9bc2c4\",\r\n          fillOpacity: 1,\r\n          fill: true,\r\n        },\r\n      },\r\n    };\r\n  \r\n    let village = L.vectorGrid.protobuf(\r\n      \"http://geoserver.vassarlabs.com/geoserver/gwc/service/wmts?layer=VASSARLABS:AP_VILLAGE_V2&tilematrixset=EPSG:900913&Service=WMTS&Request=GetTile&Version=1.0.0&Format=application/x-protobuf;type=mapbox-vector&TileMatrix=EPSG:900913:{z}&TileCol={x}&TileRow={y}\",\r\n      {\r\n        interactive: true,\r\n        minZoom: 8,\r\n        maxZoom: 12,\r\n        vectorTileLayerStyles: {\r\n          AP_VILLAGE_V2: function (properties, zoom) {\r\n            return {\r\n              weight: 2,\r\n              color: \"green\",\r\n              opacity: 1,\r\n              fillColor: \"yellow\",\r\n              fill: true,\r\n  \r\n              fillOpacity: 0.3,\r\n            };\r\n          },\r\n        },\r\n      }\r\n    );\r\n    village\r\n      .on(\"click\", function (e) {\r\n        console.log(e.layer);\r\n        L.DomEvent.stop(e);\r\n      })\r\n      .addTo(map);\r\n    // const vectorTileOptions = {\r\n    //   AP_VILLAGE_V2: {\r\n    //     weight: 0,\r\n    //     fillColor: \"#9bc2c4\",\r\n    //     fillOpacity: 1,\r\n    //     fill: true,\r\n    //   },\r\n    //   interactive: true,\r\n    //   pane: \"OverlayPane\",\r\n    // };\r\n    // }, []);\r\n  \r\n    return null;\r\n  };",{"ruleId":"367","replacedBy":"368"},{"ruleId":"369","replacedBy":"370"},{"ruleId":"371","severity":1,"message":"372","line":3,"column":8,"nodeType":"373","messageId":"374","endLine":3,"endColumn":15},{"ruleId":"371","severity":1,"message":"375","line":8,"column":8,"nodeType":"373","messageId":"374","endLine":8,"endColumn":16},{"ruleId":"371","severity":1,"message":"376","line":9,"column":8,"nodeType":"373","messageId":"374","endLine":9,"endColumn":16},{"ruleId":"371","severity":1,"message":"377","line":12,"column":8,"nodeType":"373","messageId":"374","endLine":12,"endColumn":17},{"ruleId":"371","severity":1,"message":"378","line":18,"column":8,"nodeType":"373","messageId":"374","endLine":18,"endColumn":9},{"ruleId":"371","severity":1,"message":"379","line":31,"column":5,"nodeType":"373","messageId":"374","endLine":31,"endColumn":8},{"ruleId":"371","severity":1,"message":"380","line":32,"column":5,"nodeType":"373","messageId":"374","endLine":32,"endColumn":15},{"ruleId":"371","severity":1,"message":"381","line":33,"column":5,"nodeType":"373","messageId":"374","endLine":33,"endColumn":14},{"ruleId":"382","severity":1,"message":"383","line":50,"column":6,"nodeType":"384","endLine":50,"endColumn":14,"suggestions":"385"},{"ruleId":"382","severity":1,"message":"383","line":58,"column":6,"nodeType":"384","endLine":58,"endColumn":8,"suggestions":"386"},{"ruleId":"371","severity":1,"message":"387","line":64,"column":9,"nodeType":"373","messageId":"374","endLine":64,"endColumn":12},{"ruleId":"388","severity":1,"message":"389","line":93,"column":27,"nodeType":"390","messageId":"391","endLine":93,"endColumn":29},{"ruleId":"382","severity":1,"message":"392","line":99,"column":6,"nodeType":"384","endLine":99,"endColumn":25,"suggestions":"393"},{"ruleId":"388","severity":1,"message":"389","line":226,"column":26,"nodeType":"390","messageId":"391","endLine":226,"endColumn":28},{"ruleId":"388","severity":1,"message":"389","line":227,"column":30,"nodeType":"390","messageId":"391","endLine":227,"endColumn":32},{"ruleId":"388","severity":1,"message":"389","line":227,"column":60,"nodeType":"390","messageId":"391","endLine":227,"endColumn":62},{"ruleId":"371","severity":1,"message":"394","line":4,"column":10,"nodeType":"373","messageId":"374","endLine":4,"endColumn":19},{"ruleId":"371","severity":1,"message":"395","line":12,"column":8,"nodeType":"373","messageId":"374","endLine":12,"endColumn":18},{"ruleId":"371","severity":1,"message":"396","line":41,"column":9,"nodeType":"373","messageId":"374","endLine":41,"endColumn":16},{"ruleId":"371","severity":1,"message":"397","line":8,"column":10,"nodeType":"373","messageId":"374","endLine":8,"endColumn":14},{"ruleId":"382","severity":1,"message":"398","line":58,"column":6,"nodeType":"384","endLine":58,"endColumn":13,"suggestions":"399"},{"ruleId":"371","severity":1,"message":"400","line":2,"column":8,"nodeType":"373","messageId":"374","endLine":2,"endColumn":17},{"ruleId":"371","severity":1,"message":"375","line":3,"column":8,"nodeType":"373","messageId":"374","endLine":3,"endColumn":16},{"ruleId":"371","severity":1,"message":"376","line":4,"column":8,"nodeType":"373","messageId":"374","endLine":4,"endColumn":16},{"ruleId":"371","severity":1,"message":"372","line":6,"column":8,"nodeType":"373","messageId":"374","endLine":6,"endColumn":15},{"ruleId":"371","severity":1,"message":"401","line":11,"column":8,"nodeType":"373","messageId":"374","endLine":11,"endColumn":24},{"ruleId":"382","severity":1,"message":"402","line":105,"column":6,"nodeType":"384","endLine":105,"endColumn":19,"suggestions":"403"},{"ruleId":"371","severity":1,"message":"404","line":2,"column":8,"nodeType":"373","messageId":"374","endLine":2,"endColumn":13},{"ruleId":"371","severity":1,"message":"405","line":5,"column":8,"nodeType":"373","messageId":"374","endLine":5,"endColumn":13},{"ruleId":"371","severity":1,"message":"406","line":6,"column":8,"nodeType":"373","messageId":"374","endLine":6,"endColumn":12},{"ruleId":"371","severity":1,"message":"407","line":7,"column":8,"nodeType":"373","messageId":"374","endLine":7,"endColumn":11},{"ruleId":"382","severity":1,"message":"408","line":36,"column":6,"nodeType":"384","endLine":36,"endColumn":8,"suggestions":"409"},{"ruleId":"371","severity":1,"message":"394","line":5,"column":10,"nodeType":"373","messageId":"374","endLine":5,"endColumn":19},{"ruleId":"371","severity":1,"message":"394","line":5,"column":10,"nodeType":"373","messageId":"374","endLine":5,"endColumn":19},{"ruleId":"371","severity":1,"message":"410","line":15,"column":10,"nodeType":"373","messageId":"374","endLine":15,"endColumn":21},{"ruleId":"371","severity":1,"message":"411","line":16,"column":10,"nodeType":"373","messageId":"374","endLine":16,"endColumn":19},{"ruleId":"412","severity":1,"message":"413","line":11,"column":22,"nodeType":"414","messageId":"415","endLine":11,"endColumn":24},{"ruleId":"412","severity":1,"message":"413","line":11,"column":22,"nodeType":"414","messageId":"415","endLine":11,"endColumn":24},{"ruleId":"371","severity":1,"message":"416","line":1,"column":10,"nodeType":"373","messageId":"374","endLine":1,"endColumn":13},{"ruleId":"371","severity":1,"message":"417","line":3,"column":10,"nodeType":"373","messageId":"374","endLine":3,"endColumn":18},{"ruleId":"371","severity":1,"message":"394","line":3,"column":20,"nodeType":"373","messageId":"374","endLine":3,"endColumn":29},{"ruleId":"371","severity":1,"message":"418","line":7,"column":8,"nodeType":"373","messageId":"374","endLine":7,"endColumn":15},{"ruleId":"371","severity":1,"message":"419","line":8,"column":8,"nodeType":"373","messageId":"374","endLine":8,"endColumn":18},{"ruleId":"420","severity":1,"message":"421","line":38,"column":30,"nodeType":"422","messageId":"423","endLine":38,"endColumn":31},{"ruleId":"371","severity":1,"message":"424","line":1,"column":10,"nodeType":"373","messageId":"374","endLine":1,"endColumn":27},{"ruleId":"371","severity":1,"message":"425","line":1,"column":8,"nodeType":"373","messageId":"374","endLine":1,"endColumn":13},{"ruleId":"371","severity":1,"message":"417","line":5,"column":21,"nodeType":"373","messageId":"374","endLine":5,"endColumn":29},{"ruleId":"388","severity":1,"message":"426","line":21,"column":40,"nodeType":"390","messageId":"391","endLine":21,"endColumn":42},{"ruleId":"388","severity":1,"message":"426","line":23,"column":41,"nodeType":"390","messageId":"391","endLine":23,"endColumn":43},{"ruleId":"382","severity":1,"message":"427","line":76,"column":6,"nodeType":"384","endLine":76,"endColumn":19,"suggestions":"428"},{"ruleId":"371","severity":1,"message":"429","line":26,"column":7,"nodeType":"373","messageId":"374","endLine":26,"endColumn":11},{"ruleId":"388","severity":1,"message":"426","line":37,"column":20,"nodeType":"390","messageId":"391","endLine":37,"endColumn":22},{"ruleId":"371","severity":1,"message":"429","line":9,"column":7,"nodeType":"373","messageId":"374","endLine":9,"endColumn":11},{"ruleId":"382","severity":1,"message":"383","line":25,"column":6,"nodeType":"384","endLine":25,"endColumn":27,"suggestions":"430"},{"ruleId":"382","severity":1,"message":"383","line":37,"column":6,"nodeType":"384","endLine":37,"endColumn":8,"suggestions":"431"},{"ruleId":"371","severity":1,"message":"432","line":4,"column":10,"nodeType":"373","messageId":"374","endLine":4,"endColumn":24},{"ruleId":"371","severity":1,"message":"433","line":16,"column":9,"nodeType":"373","messageId":"374","endLine":16,"endColumn":17},{"ruleId":"371","severity":1,"message":"434","line":19,"column":9,"nodeType":"373","messageId":"374","endLine":19,"endColumn":21},{"ruleId":"382","severity":1,"message":"402","line":88,"column":6,"nodeType":"384","endLine":88,"endColumn":13,"suggestions":"435"},{"ruleId":"371","severity":1,"message":"436","line":3,"column":23,"nodeType":"373","messageId":"374","endLine":3,"endColumn":34},{"ruleId":"371","severity":1,"message":"437","line":4,"column":10,"nodeType":"373","messageId":"374","endLine":4,"endColumn":24},{"ruleId":"371","severity":1,"message":"436","line":4,"column":23,"nodeType":"373","messageId":"374","endLine":4,"endColumn":34},{"ruleId":"371","severity":1,"message":"437","line":5,"column":10,"nodeType":"373","messageId":"374","endLine":5,"endColumn":24},{"ruleId":"371","severity":1,"message":"438","line":6,"column":10,"nodeType":"373","messageId":"374","endLine":6,"endColumn":23},{"ruleId":"371","severity":1,"message":"433","line":14,"column":9,"nodeType":"373","messageId":"374","endLine":14,"endColumn":17},{"ruleId":"388","severity":1,"message":"426","line":37,"column":35,"nodeType":"390","messageId":"391","endLine":37,"endColumn":37},{"ruleId":"371","severity":1,"message":"439","line":44,"column":10,"nodeType":"373","messageId":"374","endLine":44,"endColumn":19},{"ruleId":"371","severity":1,"message":"401","line":4,"column":8,"nodeType":"373","messageId":"374","endLine":4,"endColumn":24},{"ruleId":"371","severity":1,"message":"440","line":7,"column":10,"nodeType":"373","messageId":"374","endLine":7,"endColumn":21},{"ruleId":"371","severity":1,"message":"441","line":9,"column":10,"nodeType":"373","messageId":"374","endLine":9,"endColumn":22},{"ruleId":"371","severity":1,"message":"442","line":9,"column":24,"nodeType":"373","messageId":"374","endLine":9,"endColumn":32},{"ruleId":"371","severity":1,"message":"443","line":9,"column":34,"nodeType":"373","messageId":"374","endLine":9,"endColumn":46},{"ruleId":"371","severity":1,"message":"444","line":9,"column":48,"nodeType":"373","messageId":"374","endLine":9,"endColumn":60},{"ruleId":"371","severity":1,"message":"445","line":10,"column":8,"nodeType":"373","messageId":"374","endLine":10,"endColumn":15},{"ruleId":"371","severity":1,"message":"446","line":11,"column":10,"nodeType":"373","messageId":"374","endLine":11,"endColumn":26},{"ruleId":"371","severity":1,"message":"447","line":19,"column":10,"nodeType":"373","messageId":"374","endLine":19,"endColumn":17},{"ruleId":"371","severity":1,"message":"448","line":19,"column":19,"nodeType":"373","messageId":"374","endLine":19,"endColumn":29},{"ruleId":"371","severity":1,"message":"449","line":20,"column":10,"nodeType":"373","messageId":"374","endLine":20,"endColumn":19},{"ruleId":"371","severity":1,"message":"450","line":20,"column":21,"nodeType":"373","messageId":"374","endLine":20,"endColumn":33},{"ruleId":"371","severity":1,"message":"451","line":21,"column":9,"nodeType":"373","messageId":"374","endLine":21,"endColumn":17},{"ruleId":"382","severity":1,"message":"452","line":29,"column":15,"nodeType":"453","endLine":29,"endColumn":39},{"ruleId":"382","severity":1,"message":"454","line":30,"column":21,"nodeType":"453","endLine":30,"endColumn":45},{"ruleId":"382","severity":1,"message":"455","line":37,"column":6,"nodeType":"384","endLine":37,"endColumn":8,"suggestions":"456"},{"ruleId":"388","severity":1,"message":"426","line":45,"column":26,"nodeType":"390","messageId":"391","endLine":45,"endColumn":28},{"ruleId":"388","severity":1,"message":"426","line":51,"column":23,"nodeType":"390","messageId":"391","endLine":51,"endColumn":25},{"ruleId":"388","severity":1,"message":"426","line":60,"column":27,"nodeType":"390","messageId":"391","endLine":60,"endColumn":29},{"ruleId":"388","severity":1,"message":"426","line":70,"column":31,"nodeType":"390","messageId":"391","endLine":70,"endColumn":33},{"ruleId":"457","severity":1,"message":"458","line":71,"column":13,"nodeType":"373","messageId":"459","endLine":71,"endColumn":23},{"ruleId":"388","severity":1,"message":"426","line":74,"column":31,"nodeType":"390","messageId":"391","endLine":74,"endColumn":33},{"ruleId":"388","severity":1,"message":"426","line":75,"column":24,"nodeType":"390","messageId":"391","endLine":75,"endColumn":26},{"ruleId":"457","severity":1,"message":"458","line":76,"column":15,"nodeType":"373","messageId":"459","endLine":76,"endColumn":25},{"ruleId":"388","severity":1,"message":"426","line":77,"column":30,"nodeType":"390","messageId":"391","endLine":77,"endColumn":32},{"ruleId":"457","severity":1,"message":"458","line":78,"column":15,"nodeType":"373","messageId":"459","endLine":78,"endColumn":25},{"ruleId":"388","severity":1,"message":"426","line":79,"column":30,"nodeType":"390","messageId":"391","endLine":79,"endColumn":32},{"ruleId":"457","severity":1,"message":"458","line":80,"column":15,"nodeType":"373","messageId":"459","endLine":80,"endColumn":25},{"ruleId":"457","severity":1,"message":"458","line":82,"column":15,"nodeType":"373","messageId":"459","endLine":82,"endColumn":25},{"ruleId":"388","severity":1,"message":"426","line":91,"column":30,"nodeType":"390","messageId":"391","endLine":91,"endColumn":32},{"ruleId":"412","severity":1,"message":"413","line":92,"column":28,"nodeType":"414","messageId":"415","endLine":92,"endColumn":30},{"ruleId":"388","severity":1,"message":"426","line":118,"column":30,"nodeType":"390","messageId":"391","endLine":118,"endColumn":32},{"ruleId":"412","severity":1,"message":"413","line":119,"column":28,"nodeType":"414","messageId":"415","endLine":119,"endColumn":30},{"ruleId":"388","severity":1,"message":"426","line":164,"column":30,"nodeType":"390","messageId":"391","endLine":164,"endColumn":32},{"ruleId":"412","severity":1,"message":"413","line":165,"column":28,"nodeType":"414","messageId":"415","endLine":165,"endColumn":30},{"ruleId":"382","severity":1,"message":"460","line":203,"column":6,"nodeType":"384","endLine":203,"endColumn":8,"suggestions":"461"},{"ruleId":"371","severity":1,"message":"440","line":7,"column":10,"nodeType":"373","messageId":"374","endLine":7,"endColumn":21},{"ruleId":"371","severity":1,"message":"445","line":10,"column":8,"nodeType":"373","messageId":"374","endLine":10,"endColumn":15},{"ruleId":"371","severity":1,"message":"446","line":11,"column":10,"nodeType":"373","messageId":"374","endLine":11,"endColumn":26},{"ruleId":"382","severity":1,"message":"452","line":26,"column":15,"nodeType":"453","endLine":26,"endColumn":39},{"ruleId":"388","severity":1,"message":"426","line":34,"column":26,"nodeType":"390","messageId":"391","endLine":34,"endColumn":28},{"ruleId":"388","severity":1,"message":"426","line":37,"column":26,"nodeType":"390","messageId":"391","endLine":37,"endColumn":28},{"ruleId":"457","severity":1,"message":"462","line":38,"column":13,"nodeType":"373","messageId":"459","endLine":38,"endColumn":19},{"ruleId":"388","severity":1,"message":"426","line":40,"column":26,"nodeType":"390","messageId":"391","endLine":40,"endColumn":28},{"ruleId":"388","severity":1,"message":"426","line":41,"column":24,"nodeType":"390","messageId":"391","endLine":41,"endColumn":26},{"ruleId":"457","severity":1,"message":"462","line":42,"column":15,"nodeType":"373","messageId":"459","endLine":42,"endColumn":21},{"ruleId":"388","severity":1,"message":"426","line":43,"column":30,"nodeType":"390","messageId":"391","endLine":43,"endColumn":32},{"ruleId":"457","severity":1,"message":"462","line":44,"column":15,"nodeType":"373","messageId":"459","endLine":44,"endColumn":21},{"ruleId":"388","severity":1,"message":"426","line":45,"column":30,"nodeType":"390","messageId":"391","endLine":45,"endColumn":32},{"ruleId":"457","severity":1,"message":"462","line":46,"column":15,"nodeType":"373","messageId":"459","endLine":46,"endColumn":21},{"ruleId":"457","severity":1,"message":"462","line":48,"column":15,"nodeType":"373","messageId":"459","endLine":48,"endColumn":21},{"ruleId":"388","severity":1,"message":"426","line":59,"column":30,"nodeType":"390","messageId":"391","endLine":59,"endColumn":32},{"ruleId":"388","severity":1,"message":"426","line":63,"column":30,"nodeType":"390","messageId":"391","endLine":63,"endColumn":32},{"ruleId":"457","severity":1,"message":"463","line":69,"column":17,"nodeType":"373","messageId":"459","endLine":69,"endColumn":26},{"ruleId":"457","severity":1,"message":"464","line":87,"column":17,"nodeType":"373","messageId":"459","endLine":87,"endColumn":21},{"ruleId":"388","severity":1,"message":"426","line":89,"column":30,"nodeType":"390","messageId":"391","endLine":89,"endColumn":32},{"ruleId":"457","severity":1,"message":"464","line":90,"column":17,"nodeType":"373","messageId":"459","endLine":90,"endColumn":21},{"ruleId":"457","severity":1,"message":"463","line":91,"column":17,"nodeType":"373","messageId":"459","endLine":91,"endColumn":26},{"ruleId":"382","severity":1,"message":"402","line":210,"column":6,"nodeType":"384","endLine":210,"endColumn":22,"suggestions":"465"},{"ruleId":"371","severity":1,"message":"466","line":12,"column":10,"nodeType":"373","messageId":"374","endLine":12,"endColumn":22},{"ruleId":"371","severity":1,"message":"467","line":14,"column":8,"nodeType":"373","messageId":"374","endLine":14,"endColumn":17},{"ruleId":"371","severity":1,"message":"468","line":17,"column":10,"nodeType":"373","messageId":"374","endLine":17,"endColumn":19},{"ruleId":"371","severity":1,"message":"469","line":17,"column":21,"nodeType":"373","messageId":"374","endLine":17,"endColumn":33},{"ruleId":"382","severity":1,"message":"470","line":98,"column":6,"nodeType":"384","endLine":98,"endColumn":21,"suggestions":"471"},{"ruleId":"382","severity":1,"message":"470","line":115,"column":6,"nodeType":"384","endLine":115,"endColumn":8,"suggestions":"472"},{"ruleId":"382","severity":1,"message":"473","line":124,"column":6,"nodeType":"384","endLine":124,"endColumn":8,"suggestions":"474"},{"ruleId":"371","severity":1,"message":"475","line":11,"column":8,"nodeType":"373","messageId":"374","endLine":11,"endColumn":16},{"ruleId":"382","severity":1,"message":"470","line":89,"column":6,"nodeType":"384","endLine":89,"endColumn":21,"suggestions":"476"},{"ruleId":"382","severity":1,"message":"470","line":110,"column":6,"nodeType":"384","endLine":110,"endColumn":8,"suggestions":"477"},{"ruleId":"371","severity":1,"message":"478","line":11,"column":8,"nodeType":"373","messageId":"374","endLine":11,"endColumn":16},{"ruleId":"371","severity":1,"message":"479","line":16,"column":10,"nodeType":"373","messageId":"374","endLine":16,"endColumn":21},{"ruleId":"371","severity":1,"message":"480","line":16,"column":23,"nodeType":"373","messageId":"374","endLine":16,"endColumn":37},{"ruleId":"371","severity":1,"message":"481","line":17,"column":10,"nodeType":"373","messageId":"374","endLine":17,"endColumn":22},{"ruleId":"371","severity":1,"message":"482","line":17,"column":24,"nodeType":"373","messageId":"374","endLine":17,"endColumn":39},{"ruleId":"371","severity":1,"message":"483","line":21,"column":10,"nodeType":"373","messageId":"374","endLine":21,"endColumn":16},{"ruleId":"371","severity":1,"message":"484","line":21,"column":18,"nodeType":"373","messageId":"374","endLine":21,"endColumn":27},{"ruleId":"412","severity":1,"message":"413","line":62,"column":26,"nodeType":"414","messageId":"415","endLine":62,"endColumn":28},{"ruleId":"420","severity":1,"message":"421","line":123,"column":32,"nodeType":"422","messageId":"423","endLine":123,"endColumn":33},{"ruleId":"371","severity":1,"message":"485","line":15,"column":7,"nodeType":"373","messageId":"374","endLine":15,"endColumn":12},{"ruleId":"371","severity":1,"message":"394","line":2,"column":20,"nodeType":"373","messageId":"374","endLine":2,"endColumn":29},{"ruleId":"486","severity":1,"message":"487","line":21,"column":9,"nodeType":"488","endLine":21,"endColumn":28},{"ruleId":"371","severity":1,"message":"425","line":1,"column":8,"nodeType":"373","messageId":"374","endLine":1,"endColumn":13},{"ruleId":"489","severity":1,"message":"490","line":6,"column":16,"nodeType":"373","messageId":"491","endLine":6,"endColumn":26},{"ruleId":"371","severity":1,"message":"492","line":11,"column":9,"nodeType":"373","messageId":"374","endLine":11,"endColumn":26},"no-native-reassign",["493"],"no-negated-in-lhs",["494"],"no-unused-vars","'InfoBox' is defined but never used.","Identifier","unusedVar","'StatsBox' is defined but never used.","'FocusBox' is defined but never used.","'Searchbox' is defined but never used.","'L' is defined but never used.","'sbs' is assigned a value but never used.","'rightlayer' is assigned a value but never used.","'leftlayer' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'map'. Either include it or remove the dependency array.","ArrayExpression",["495"],["496"],"'map' is assigned a value but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'navigation'. Either include it or remove the dependency array.",["497"],"'useEffect' is defined but never used.","'SwipePanel' is defined but never used.","'classes' is assigned a value but never used.","'rand' is defined but never used.","React Hook useEffect has a missing dependency: 'handleOpen'. Either include it or remove the dependency array.",["498"],"'LayerInfo' is defined but never used.","'CircularProgress' is defined but never used.","React Hook useEffect has a missing dependency: 'getInfo'. Either include it or remove the dependency array.",["499"],"'Stats' is defined but never used.","'Paper' is defined but never used.","'Tabs' is defined but never used.","'Tab' is defined but never used.","React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["500"],"'sourcevalue' is assigned a value but never used.","'destvalue' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'red' is defined but never used.","'useState' is defined but never used.","'AddIcon' is defined but never used.","'RemoveIcon' is defined but never used.","no-sequences","Unexpected use of comma operator.","SequenceExpression","unexpectedCommaExpression","'FolderOpenRounded' is defined but never used.","'React' is defined but never used.","Expected '===' and instead saw '=='.","React Hook useEffect has missing dependencies: 'left', 'map', and 'right'. Either include them or remove the dependency array.",["501"],"'data' is assigned a value but never used.",["502"],["503"],"'setInfoDetails' is defined but never used.","'dispatch' is assigned a value but never used.","'activelayers' is assigned a value but never used.",["504"],"'useSelector' is defined but never used.","'setBaseDetails' is defined but never used.","'setAppDetails' is defined but never used.","'a11yProps' is defined but never used.","'useDispatch' is defined but never used.","'MDBDataTable' is defined but never used.","'MDBTable' is defined but never used.","'MDBTableBody' is defined but never used.","'MDBTableHead' is defined but never used.","'Cbutton' is defined but never used.","'ContactsOutlined' is defined but never used.","'options' is assigned a value but never used.","'setOptions' is assigned a value but never used.","'showLayer' is assigned a value but never used.","'setShowLayer' is assigned a value but never used.","'infodata' is assigned a value but never used.","Assignments to the 'dateapi' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","Assignments to the 'cropyeardataapi' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","React Hook useEffect has a missing dependency: 'toolsState'. Either include it or remove the dependency array.",["505"],"no-redeclare","'dataurlapi' is already defined.","redeclared","React Hook useEffect has a missing dependency: 'tabledata'. Either include it or remove the dependency array.",["506"],"'urlapi' is already defined.","'chartarea' is already defined.","'date' is already defined.",["507"],"'analyticoper' is defined but never used.","'TextField' is defined but never used.","'analytics' is assigned a value but never used.","'setanalytics' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'dispatch', 'fetchDates', and 'state'. Either include them or remove the dependency array.",["508"],["509"],"React Hook useEffect has missing dependencies: 'dispatch' and 'state'. Either include them or remove the dependency array.",["510"],"'reactDom' is defined but never used.",["511"],["512"],"'polyline' is defined but never used.","'suggestions' is assigned a value but never used.","'setsuggestions' is assigned a value but never used.","'suggestions1' is assigned a value but never used.","'setsuggestions1' is assigned a value but never used.","'source' is assigned a value but never used.","'setSource' is assigned a value but never used.","'marks' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-use-before-define","'VectorTile' was used before it was defined.","usedBeforeDefined","'vectorTileOptions' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"513","fix":"514"},{"desc":"515","fix":"516"},{"desc":"517","fix":"518"},{"desc":"519","fix":"520"},{"desc":"521","fix":"522"},{"desc":"523","fix":"524"},{"desc":"525","fix":"526"},{"desc":"527","fix":"528"},{"desc":"515","fix":"529"},{"desc":"530","fix":"531"},{"desc":"532","fix":"533"},{"desc":"534","fix":"535"},{"desc":"536","fix":"537"},{"desc":"538","fix":"539"},{"desc":"540","fix":"541"},{"desc":"542","fix":"543"},{"desc":"538","fix":"544"},{"desc":"540","fix":"545"},"Update the dependencies array to be: [bounds, map]",{"range":"546","text":"547"},"Update the dependencies array to be: [map]",{"range":"548","text":"549"},"Update the dependencies array to be: [mapZoomState.path, navigation]",{"range":"550","text":"551"},"Update the dependencies array to be: [handleOpen, state]",{"range":"552","text":"553"},"Update the dependencies array to be: [state, info, getInfo]",{"range":"554","text":"555"},"Update the dependencies array to be: [dispatch]",{"range":"556","text":"557"},"Update the dependencies array to be: [left, map, right, show, state]",{"range":"558","text":"559"},"Update the dependencies array to be: [test, showAnalytics, map]",{"range":"560","text":"561"},{"range":"562","text":"549"},"Update the dependencies array to be: [getInfo, state]",{"range":"563","text":"564"},"Update the dependencies array to be: [toolsState]",{"range":"565","text":"566"},"Update the dependencies array to be: [tabledata]",{"range":"567","text":"568"},"Update the dependencies array to be: [infodata, info, getInfo]",{"range":"569","text":"570"},"Update the dependencies array to be: [dispatch, fetchDates, state, state.dataset]",{"range":"571","text":"572"},"Update the dependencies array to be: [dispatch, fetchDates, state]",{"range":"573","text":"574"},"Update the dependencies array to be: [dispatch, state]",{"range":"575","text":"576"},{"range":"577","text":"572"},{"range":"578","text":"574"},[1693,1701],"[bounds, map]",[1956,1958],"[map]",[3022,3041],"[mapZoomState.path, navigation]",[1488,1495],"[handleOpen, state]",[3532,3545],"[state, info, getInfo]",[1036,1038],"[dispatch]",[2667,2680],"[left, map, right, show, state]",[626,647],"[test, showAnalytics, map]",[887,889],[3032,3039],"[getInfo, state]",[1423,1425],"[toolsState]",[6673,6675],"[tabledata]",[6962,6978],"[infodata, info, getInfo]",[3088,3103],"[dispatch, fetchDates, state, state.dataset]",[3413,3415],"[dispatch, fetchDates, state]",[3585,3587],"[dispatch, state]",[2647,2662],[3173,3175]]
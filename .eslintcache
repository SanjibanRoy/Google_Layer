[{"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/index.js":"1","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/reportWebVitals.js":"2","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/App.js":"3","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/Legend.js":"4","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/InfoBox.js":"5","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/config.js":"6","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/Map.js":"7","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/SideBarWrapper.js":"8","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/Info.js":"9","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/LayerTree.js":"10","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/SidePanel.js":"11","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/Layer.js":"12","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/LayerAnalyticsVisualise.js":"13","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/VegetationAnalysis.js":"14","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/ChangeDates.js":"15","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/AnalyticsDates.js":"16","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/RGBDropDown.js":"17","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/features/layers/layerslice.js":"18","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/app/store.js":"19","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/features/layers/layervisualiseslice.js":"20","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/features/layers/overlaylayerslice.js":"21","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/BaseSwitcher.js":"22","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/features/layers/baselayerslice.js":"23","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/WeatherVisualise.js":"24","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/VegetationVisualise.js":"25","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/WaterVisualise.js":"26","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/SatelliteVisualise.js":"27","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/features/maps/mapStateSlice.js":"28"},{"size":620,"mtime":1621196132286,"results":"29","hashOfConfig":"30"},{"size":362,"mtime":1620367994223,"results":"31","hashOfConfig":"30"},{"size":834,"mtime":1621401910979,"results":"32","hashOfConfig":"30"},{"size":440,"mtime":1621363484171,"results":"33","hashOfConfig":"30"},{"size":801,"mtime":1621425536019,"results":"34","hashOfConfig":"30"},{"size":3717,"mtime":1621425450345,"results":"35","hashOfConfig":"30"},{"size":2910,"mtime":1621419573115,"results":"36","hashOfConfig":"30"},{"size":7748,"mtime":1621403717652,"results":"37","hashOfConfig":"30"},{"size":900,"mtime":1620367994206,"results":"38","hashOfConfig":"30"},{"size":829,"mtime":1621363904861,"results":"39","hashOfConfig":"30"},{"size":1777,"mtime":1620849792381,"results":"40","hashOfConfig":"30"},{"size":945,"mtime":1621426173555,"results":"41","hashOfConfig":"30"},{"size":1038,"mtime":1621370871773,"results":"42","hashOfConfig":"30"},{"size":3166,"mtime":1621373184770,"results":"43","hashOfConfig":"30"},{"size":1260,"mtime":1621372833353,"results":"44","hashOfConfig":"30"},{"size":2941,"mtime":1621442198291,"results":"45","hashOfConfig":"30"},{"size":2099,"mtime":1621405338645,"results":"46","hashOfConfig":"30"},{"size":822,"mtime":1621405015206,"results":"47","hashOfConfig":"30"},{"size":697,"mtime":1621418143207,"results":"48","hashOfConfig":"30"},{"size":585,"mtime":1621370995732,"results":"49","hashOfConfig":"30"},{"size":531,"mtime":1621367651028,"results":"50","hashOfConfig":"30"},{"size":1490,"mtime":1621363537131,"results":"51","hashOfConfig":"30"},{"size":600,"mtime":1621353689351,"results":"52","hashOfConfig":"30"},{"size":2373,"mtime":1621402653496,"results":"53","hashOfConfig":"30"},{"size":3223,"mtime":1621403007278,"results":"54","hashOfConfig":"30"},{"size":2256,"mtime":1621403285620,"results":"55","hashOfConfig":"30"},{"size":2341,"mtime":1621403640834,"results":"56","hashOfConfig":"30"},{"size":567,"mtime":1621425503120,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"r63pth",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"83","messages":"84","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"85","messages":"86","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"60"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/index.js",[],["120","121"],"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/reportWebVitals.js",[],"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/App.js",[],"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/Legend.js",[],"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/InfoBox.js",[],"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/config.js",[],"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/Map.js",["122","123","124","125"],"import {\n  MapContainer,\n  TileLayer,\n  WMSTileLayer,\n  useMapEvents,\n} from \"react-leaflet\";\nimport { useState, useEffect, useRef } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport { selectDataSet } from \"../features/layers/layerslice\";\nimport { selectLayerDataSet } from \"../features/layers/overlaylayerslice\";\nimport { selectBaseDataSet } from \"../features/layers/baselayerslice\";\nimport { selectLayerData } from \"../features/layers/layervisualiseslice\";\nimport { setMapState } from \"../features/maps/mapStateSlice\";\nimport React from \"react\";\n\n// function HandleClick() {\n//   const map = useMapEvents({\n//     click: (e) => {\n//       dispatch({\n//         lat:\"test\",\n//         lon:\"test2\",\n//         zoom:\"3\"\n//       })\n//       console.log(e);\n//     },\n//   });\n//   return null;\n// }\n\nfunction HandleHover() {\n  const map = useMapEvents({\n    mousemove: (e) => {\n      //  console.log(e)\n    },\n  });\n  return null;\n}\n\nconst Map = () => {\n  const [AnalyticsLayer, SetAnalytics] = useState({\n    show: false,\n  });\n  const dispatch = useDispatch();\n  function HandleClick() {\n    const map = useMapEvents({\n      click: (e) => {\n        dispatch(\n          setMapState({\n            lat: e.latlng.lat,\n            lon: e.latlng.lng,\n            zoom: map.getZoom(),\n            overlays: overlayLayers.filter((overlay)=>overlay.show===true)\n          })\n        );\n        console.log(e);\n      },\n    });\n    return null;\n  }\n  const analyticsLayer = useSelector(selectDataSet);\n  const baseLayers = useSelector(selectBaseDataSet);\n  console.log(analyticsLayer);\n  const analyticsvisualise = useSelector(selectLayerData);\n  console.log(analyticsvisualise);\n  const overlayLayers = useSelector(selectLayerDataSet);\n\n  return (\n    <MapContainer center={[26.2006, 92.9376]} zoom={6} zoomControl={false}>\n      {baseLayers.map(\n        (baselayer) =>\n          baselayer.show &&\n          (baselayer.type === \"tile\" ? (\n            <TileLayer url={baselayer.link} zIndex=\"1\" />\n          ) : (\n            <WMSTileLayer\n              url={baselayer.link}\n              layers={baselayer.layer}\n              format=\"image/png\"\n              zIndex=\"1\"\n            />\n          ))\n      )}\n      {overlayLayers.map(\n        (overlayer) =>\n          overlayer.show && (\n            <WMSTileLayer\n              format=\"image/png\"\n              layers={overlayer.layer}\n              url=\"https://apps.nesdr.gov.in:442/geoserver/wms\"\n              transparent=\"true\"\n              zIndex=\"10\"\n            />\n          )\n      )}\n      {AnalyticsLayer.show && (\n        <WMSTileLayer\n          format=\"image/png\"\n          layers={AnalyticsLayer.layer}\n          url=\"https://apps.nesdr.gov.in:442/geoserver/wms\"\n          transparent=\"true\"\n          zIndex=\"10\"\n        />\n      )}\n      <HandleClick />\n      <HandleHover />\n    </MapContainer>\n  );\n};\n\nexport default Map;\n","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/SideBarWrapper.js",["126"],"//import necessary lib\nimport React from \"react\";\nimport SidePanel from \"./SidePanel\";\nimport LayerTree from \"./LayerTree\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport VegetationAnalysis from \"./VegetationAnalysis\";\nimport BaseSwitcher from \"./BaseSwitcher\";\nimport WeatherVisualise from \"./WeatherVisualise\";\nimport VegetationVisualise from \"./VegetationVisualise\";\nimport WaterVisualise from \"./WaterVisualise\";\nimport SatelliteVisualise from \"./SatelliteVisualise\";\n// import CreatableSelect from 'react-select/creatable';\n//end of import\n\nconst SideBarWrapper = ({\n  //   analyticsLayers,\n  changeVisibility,\n  visibility,\n}) => {\n  //Tab view start\n  const [value, setValue] = React.useState(0);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  //tab view ends\n\n  //accordion start\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      width: \"100%\",\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(15),\n      fontWeight: theme.typography.fontWeightRegular,\n    },\n  }));\n  const classes = useStyles();\n  // accordion ends\n\n  //hind show sideBarwarapper start\n  var data_filter = visibility.filter((element) => element.show);\n  var type = data_filter[0].id;\n  // hide show sideBarWrapper ends\n\n  // ******************************** fetch date data from database Start*******************************\n\n  // declare list of array *PS: array used in select in list\n\n  //main function *API Key Required\n  // function getdates(name, value) {\n  //     const formData = new FormData();\n  //     formData.append('database', name);\n  //     fetch(\n  //         'https://mobileapp.nesdr.gov.in/analytics_api/modis_ndvi.php?key=mgy1exz0n8mXQXi8NrOq24DDvmLrZ16a',\n  //         {\n  //             method: 'POST',\n  //             body: formData,\n  //         }\n  //     )\n  //         .then((response) => response.json())\n  //         .then((result) => {\n  //             //console.log('Success:', result);\n  //             let datafromapi = result.map(data => {\n  //                 arrays[value].push({\n  //                     value: data.date,\n  //                     label: data.date,\n  //                     rating: data.date\n  //                 })\n  //             })\n  //         })\n  //         .catch((error) => {\n  //             console.error('Error:', error);\n  //         });\n  // }\n\n  // setTimeout(\n  //     function () {\n  //        // console.log(arrays.ndvidates[0].value)\n  //     }\n  //         .bind(this),\n  //     2000\n  // );\n  // get date function *PS: put database name and array name used in select list\n  // getdates('modis_ndvi', 'ndvidates')\n  // getdates('soil_date', 'soil_moisture_dates')\n  // getdates('et', 'et_dates')\n\n  // ******************************** fatch date data from database End here*******************************\n\n  //return view\n  return (\n    <div className=\"SideBarWrapper\">\n      {/* load of side panel start */}\n      <SidePanel changeVisibility={changeVisibility} />\n      {/* load of side panel start */}\n\n      {/* *************Layer Tab start*************** */}\n\n      <div className={type === \"Layer\" ? \"LayerContainer\" : \"hidden\"}>\n        {/* List of map layers */}\n        <Paper square>\n          <Tabs\n            value={value}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            onChange={handleChange}\n            aria-label=\"disabled tabs example\"\n          >\n            <Tab label=\"Base Layers\" />\n            <Tab label=\"Overlays\" />\n          </Tabs>\n        </Paper>\n        <div className={value === 0 ? \" \" : \"hidden\"}>\n          <BaseSwitcher />\n        </div>\n        <div className={value === 1 ? \" \" : \"hidden\"}>\n          <LayerTree category=\"Administrator\" />\n          <LayerTree category=\"Land Use/Land Cover\" />\n          <LayerTree category=\"Census\" />\n        </div>\n      </div>\n      {/* *************Layer Tab end*************** */}\n\n      {/* *************Vegetation Tab start*************** */}\n      <div className={type === \"Vegetation\" ? \"LayerContainer\" : \"hidden\"}>\n        {/* Tab View */}\n        <Paper square>\n          <Tabs\n            value={value}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            onChange={handleChange}\n            aria-label=\"disabled tabs example\"\n          >\n            <Tab label=\"Visualization\" />\n            <Tab label=\"Analysis\" />\n          </Tabs>\n        </Paper>\n        {/* Tab1 Data */}\n        <div className={value === 0 ? \" \" : \"hidden\"}>\n          <VegetationVisualise />\n        </div>\n        {/* Tab2 Data */}\n        <div className={value === 1 ? \" \" : \"hidden\"}>\n          <VegetationAnalysis />\n        </div>\n      </div>\n      {/* *************Vegetation Tab end*************** */}\n\n      {/* *************Weather Tab start*************** */}\n      <div className={type === \"Weather\" ? \"LayerContainer\" : \"hidden\"}>\n        <Paper square>\n          <Tabs\n            value={value}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            onChange={handleChange}\n            aria-label=\"disabled tabs example\"\n          >\n            <Tab label=\"Visualization\" />\n            <Tab label=\"Analysis\" />\n          </Tabs>\n        </Paper>\n        {/* Tab1 Data */}\n        <div className={value === 0 ? \" \" : \"hidden\"}>\n          <WeatherVisualise />\n        </div>\n        {/* Tab2 Data */}\n        <div className={value === 1 ? \" \" : \"hidden\"}>\n          <VegetationAnalysis />\n        </div>\n      </div>\n      {/* *************Weather Tab end*************** */}\n\n      {/* *************Water Resources Tab start*************** */}\n      <div className={type === \"Water_Resources\" ? \"LayerContainer\" : \"hidden\"}>\n        <Paper square>\n          <Tabs\n            value={value}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            onChange={handleChange}\n            aria-label=\"disabled tabs example\"\n          >\n            <Tab label=\"Visualization\" />\n            <Tab label=\"Analysis\" />\n          </Tabs>\n        </Paper>\n        {/* Tab1 Data */}\n        <div className={value === 0 ? \" \" : \"hidden\"}>\n          <WaterVisualise />\n        </div>\n        {/* Tab2 Data */}\n        <div className={value === 1 ? \" \" : \"hidden\"}>\n          <VegetationAnalysis />\n        </div>\n      </div>\n      {/* *************Water Resources Tab end*************** */}\n\n      {/* *************Satellite Imagery Tab start*************** */}\n      <div\n        className={type === \"Satellite_Imagery\" ? \"LayerContainer\" : \"hidden\"}\n      >\n        <Paper square>\n          <Tabs\n            value={value}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            onChange={handleChange}\n            aria-label=\"disabled tabs example\"\n          >\n            <Tab label=\"Visualization\" />\n            <Tab label=\"Analysis\" />\n          </Tabs>\n        </Paper>\n        {/* Tab1 Data */}\n        <div className={value === 0 ? \" \" : \"hidden\"}>\n          <SatelliteVisualise />\n        </div>\n        {/* Tab2 Data */}\n        <div className={value === 1 ? \" \" : \"hidden\"}>\n          <VegetationAnalysis />\n        </div>\n      </div>\n      {/* *************Satellite Imagery Tab end*************** */}\n\n      {/* *************Vedas Services Tab start*************** */}\n      <div className={type === \"Vedas_Services\" ? \"LayerContainer\" : \"hidden\"}>\n        <LayerTree category=\"Admin\" state=\"test\" />\n        <LayerTree category=\"Natural Resource\" />\n      </div>\n      {/* *************Vedas Services Tab start*************** */}\n    </div>\n  );\n};\n\nexport default SideBarWrapper;\n","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/Info.js",[],"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/LayerTree.js",[],"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/SidePanel.js",[],"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/Layer.js",[],"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/LayerAnalyticsVisualise.js",[],"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/VegetationAnalysis.js",[],"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/ChangeDates.js",[],"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/AnalyticsDates.js",["127"],"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/RGBDropDown.js",[],"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/features/layers/layerslice.js",[],"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/app/store.js",[],"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/features/layers/layervisualiseslice.js",[],"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/features/layers/overlaylayerslice.js",[],"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/BaseSwitcher.js",[],"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/features/layers/baselayerslice.js",["128"],"import { createSlice } from \"@reduxjs/toolkit\";\nimport { maps } from \"../../config\";\n\nconst initialState = maps;\nconsole.log(initialState);\nconst baseLayerSlice = createSlice({\n  name: \"baselayer\",\n  initialState,\n  reducers: {\n    setBaseDetails: (state, action) => {\n      console.log(action.payload.data);\n      state.map((st) => {\n        st.id === action.payload.data ? (st.show = true) : (st.show = false);\n      });\n    },\n  },\n});\n\nexport const { setBaseDetails } = baseLayerSlice.actions;\n\nexport const selectBaseDataSet = (state) => state.baselayer;\n\nexport default baseLayerSlice.reducer;\n","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/WeatherVisualise.js",["129","130"],"import React from 'react'\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport LayerAnalyticsVisualise from \"./LayerAnalyticsVisualise\";\nimport VegetationAnalysis from \"./VegetationAnalysis\";\nimport BaseSwitcher from \"./BaseSwitcher\";\nconst WeatherVisualise = () => {\n    const useStyles = makeStyles((theme) => ({\n        root: {\n          width: \"100%\",\n        },\n        heading: {\n          fontSize: theme.typography.pxToRem(15),\n          fontWeight: theme.typography.fontWeightRegular,\n        },\n      }));\n      const classes = useStyles();\n    return (\n        <div>\n            <Accordion>\n            <AccordionSummary\n              expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel1a-content\"\n              id=\"panel1a-header\"\n            >\n              <Typography className={classes.heading}>Temperature</Typography>\n            </AccordionSummary>\n            <AccordionDetails>\n              <LayerAnalyticsVisualise showLayer=\"smap\" />\n            </AccordionDetails>\n          </Accordion>\n          <Accordion>\n            <AccordionSummary\n              expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel2a-content\"\n              id=\"panel2a-header\"\n            >\n              <Typography className={classes.heading}>\n                Air Quaility (AOD)\n              </Typography>\n            </AccordionSummary>\n            <AccordionDetails>\n              <LayerAnalyticsVisualise showLayer=\"smap\" />\n            </AccordionDetails>\n          </Accordion>\n          <Accordion>\n            <AccordionSummary\n              expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel3a-content\"\n              id=\"panel3a-header\"\n            >\n              <Typography className={classes.heading}>\n                Weather Forecast (WRF)\n              </Typography>\n            </AccordionSummary>\n            <AccordionDetails>\n              <LayerAnalyticsVisualise showLayer=\"smap\" />\n            </AccordionDetails>\n          </Accordion>\n        </div>\n    )\n}\n\nexport default WeatherVisualise\n","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/VegetationVisualise.js",[],"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/WaterVisualise.js",[],"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/SatelliteVisualise.js",["131","132"],"import React from 'react'\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport LayerAnalyticsVisualise from \"./LayerAnalyticsVisualise\";\nimport VegetationAnalysis from \"./VegetationAnalysis\";\nimport BaseSwitcher from \"./BaseSwitcher\";\nconst SatelliteVisualise = () => {\n    const useStyles = makeStyles((theme) => ({\n        root: {\n          width: \"100%\",\n        },\n        heading: {\n          fontSize: theme.typography.pxToRem(15),\n          fontWeight: theme.typography.fontWeightRegular,\n        },\n      }));\n      const classes = useStyles();\n    return (\n        <div>\n             <Accordion>\n            <AccordionSummary\n              expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel1a-content\"\n              id=\"panel1a-header\"\n            >\n              <Typography className={classes.heading}>Landsat</Typography>\n            </AccordionSummary>\n            <AccordionDetails>\n              <LayerAnalyticsVisualise showLayer=\"modisndvi\" />\n            </AccordionDetails>\n          </Accordion>\n          <Accordion>\n            <AccordionSummary\n              expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel2a-content\"\n              id=\"panel2a-header\"\n            >\n              <Typography className={classes.heading}>Sentinel</Typography>\n            </AccordionSummary>\n            <AccordionDetails>\n              <LayerAnalyticsVisualise showLayer=\"modisndvi\" />\n            </AccordionDetails>\n          </Accordion>\n          <Accordion>\n            <AccordionSummary\n              expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel3a-content\"\n              id=\"panel3a-header\"\n            >\n              <Typography className={classes.heading}>\n                VIIRS Nightlight\n              </Typography>\n            </AccordionSummary>\n            <AccordionDetails>\n              <LayerAnalyticsVisualise showLayer=\"modisndvi\" />\n            </AccordionDetails>\n          </Accordion>\n        </div>\n    )\n}\n\nexport default SatelliteVisualise\n","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/features/maps/mapStateSlice.js",[],{"ruleId":"133","replacedBy":"134"},{"ruleId":"135","replacedBy":"136"},{"ruleId":"137","severity":1,"message":"138","line":7,"column":20,"nodeType":"139","messageId":"140","endLine":7,"endColumn":29},{"ruleId":"137","severity":1,"message":"141","line":7,"column":31,"nodeType":"139","messageId":"140","endLine":7,"endColumn":37},{"ruleId":"137","severity":1,"message":"142","line":31,"column":9,"nodeType":"139","messageId":"140","endLine":31,"endColumn":12},{"ruleId":"137","severity":1,"message":"143","line":40,"column":26,"nodeType":"139","messageId":"140","endLine":40,"endColumn":38},{"ruleId":"137","severity":1,"message":"144","line":40,"column":9,"nodeType":"139","messageId":"140","endLine":40,"endColumn":16},{"ruleId":"145","severity":1,"message":"146","line":49,"column":5,"nodeType":"147","messageId":"148","endLine":49,"endColumn":9,"fix":"149"},{"ruleId":"150","severity":1,"message":"151","line":12,"column":22,"nodeType":"152","messageId":"153","endLine":12,"endColumn":24},{"ruleId":"137","severity":1,"message":"154","line":9,"column":8,"nodeType":"139","messageId":"140","endLine":9,"endColumn":26},{"ruleId":"137","severity":1,"message":"155","line":10,"column":8,"nodeType":"139","messageId":"140","endLine":10,"endColumn":20},{"ruleId":"137","severity":1,"message":"154","line":9,"column":8,"nodeType":"139","messageId":"140","endLine":9,"endColumn":26},{"ruleId":"137","severity":1,"message":"155","line":10,"column":8,"nodeType":"139","messageId":"140","endLine":10,"endColumn":20},"no-native-reassign",["156"],"no-negated-in-lhs",["157"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useRef' is defined but never used.","'map' is assigned a value but never used.","'SetAnalytics' is assigned a value but never used.","'classes' is assigned a value but never used.","no-extra-bind","The function binding is unnecessary.","CallExpression","unexpected",{"range":"158","text":"159"},"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'VegetationAnalysis' is defined but never used.","'BaseSwitcher' is defined but never used.","no-global-assign","no-unsafe-negation",[1412,1423],""]
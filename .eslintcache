[{"E:\\sanjiv\\CODE\\nerdrr\\src\\index.js":"1","E:\\sanjiv\\CODE\\nerdrr\\src\\App.js":"2","E:\\sanjiv\\CODE\\nerdrr\\src\\reportWebVitals.js":"3","E:\\sanjiv\\CODE\\nerdrr\\src\\app\\store.js":"4","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\InfoBox.js":"5","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\Legend.js":"6","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\LayerInfo.js":"7","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\SideBarWrapper.js":"8","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\StatsBox.js":"9","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\FocusBox.js":"10","E:\\sanjiv\\CODE\\nerdrr\\src\\config.js":"11","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\Map.js":"12","E:\\sanjiv\\CODE\\nerdrr\\src\\features\\layers\\layerslice.js":"13","E:\\sanjiv\\CODE\\nerdrr\\src\\features\\layers\\layervisualiseslice.js":"14","E:\\sanjiv\\CODE\\nerdrr\\src\\features\\layers\\overlaylayerslice.js":"15","E:\\sanjiv\\CODE\\nerdrr\\src\\features\\layers\\appslice.js":"16","E:\\sanjiv\\CODE\\nerdrr\\src\\features\\layers\\baselayerslice.js":"17","E:\\sanjiv\\CODE\\nerdrr\\src\\features\\layers\\infoboxslice.js":"18","E:\\sanjiv\\CODE\\nerdrr\\src\\features\\layers\\layerinfoslice.js":"19","E:\\sanjiv\\CODE\\nerdrr\\src\\features\\maps\\mapStateSlice.js":"20","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\Info.js":"21","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\SidePanel.js":"22","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\LayerTree.js":"23","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\AlertPanel.js":"24","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\BaseSwitcher.js":"25","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\AppsPanel.js":"26","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\Stats.js":"27","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\Layer.js":"28"},{"size":788,"mtime":1624274626682,"results":"29","hashOfConfig":"30"},{"size":1438,"mtime":1623995442719,"results":"31","hashOfConfig":"30"},{"size":375,"mtime":1623995442750,"results":"32","hashOfConfig":"30"},{"size":972,"mtime":1623995442719,"results":"33","hashOfConfig":"30"},{"size":1034,"mtime":1623995442719,"results":"34","hashOfConfig":"30"},{"size":458,"mtime":1623995442719,"results":"35","hashOfConfig":"30"},{"size":1988,"mtime":1623995442719,"results":"36","hashOfConfig":"30"},{"size":3227,"mtime":1623995442719,"results":"37","hashOfConfig":"30"},{"size":1054,"mtime":1623995442719,"results":"38","hashOfConfig":"30"},{"size":1377,"mtime":1623995442719,"results":"39","hashOfConfig":"30"},{"size":14010,"mtime":1624264759338,"results":"40","hashOfConfig":"30"},{"size":3865,"mtime":1624027939135,"results":"41","hashOfConfig":"30"},{"size":883,"mtime":1623995442719,"results":"42","hashOfConfig":"30"},{"size":699,"mtime":1623995442719,"results":"43","hashOfConfig":"30"},{"size":875,"mtime":1624265415120,"results":"44","hashOfConfig":"30"},{"size":565,"mtime":1623995442719,"results":"45","hashOfConfig":"30"},{"size":595,"mtime":1623995442719,"results":"46","hashOfConfig":"30"},{"size":585,"mtime":1623995442719,"results":"47","hashOfConfig":"30"},{"size":584,"mtime":1623995442719,"results":"48","hashOfConfig":"30"},{"size":756,"mtime":1623995442734,"results":"49","hashOfConfig":"30"},{"size":5891,"mtime":1623995442719,"results":"50","hashOfConfig":"30"},{"size":2103,"mtime":1623995993323,"results":"51","hashOfConfig":"30"},{"size":852,"mtime":1623995442719,"results":"52","hashOfConfig":"30"},{"size":2358,"mtime":1623995442719,"results":"53","hashOfConfig":"30"},{"size":1695,"mtime":1623995442719,"results":"54","hashOfConfig":"30"},{"size":1928,"mtime":1623995442719,"results":"55","hashOfConfig":"30"},{"size":7978,"mtime":1624276359241,"results":"56","hashOfConfig":"30"},{"size":2630,"mtime":1624265349361,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"18u0az",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"60"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76","usedDeprecatedRules":"60"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"60"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"93","messages":"94","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"95","usedDeprecatedRules":"60"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"98","usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"107","usedDeprecatedRules":"60"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"110","usedDeprecatedRules":"60"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"60"},{"filePath":"120","messages":"121","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"122","messages":"123","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"124","usedDeprecatedRules":"60"},"E:\\sanjiv\\CODE\\nerdrr\\src\\index.js",[],["125","126"],"E:\\sanjiv\\CODE\\nerdrr\\src\\App.js",[],"E:\\sanjiv\\CODE\\nerdrr\\src\\reportWebVitals.js",[],"E:\\sanjiv\\CODE\\nerdrr\\src\\app\\store.js",[],"E:\\sanjiv\\CODE\\nerdrr\\src\\components\\InfoBox.js",[],"E:\\sanjiv\\CODE\\nerdrr\\src\\components\\Legend.js",[],"E:\\sanjiv\\CODE\\nerdrr\\src\\components\\LayerInfo.js",["127","128"],"import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { selectLayerInfo,setLayerInfoDetails } from \"../features/layers/layerinfoslice\";\r\nimport { useEffect } from \"react\";\r\n\r\nfunction rand() {\r\n  return Math.round(Math.random() * 20) - 10;\r\n}\r\n\r\nfunction getModalStyle() {\r\n  const top = 30;\r\n  const left = 50;\r\n\r\n  return {\r\n    top: `${top}%`,\r\n    left: `${left}%`,\r\n    transform: `translate(-${top}%, -${left}%)`,\r\n  };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    position: \"absolute\",\r\n    width: 800,\r\n    backgroundColor: theme.palette.background.paper,\r\n  //  border: \"2px solid #000\",\r\n    boxShadow: theme.shadows[5],\r\n    padding: theme.spacing(2, 4, 3),\r\n    borderRadius :0\r\n  },\r\n}));\r\n\r\nconst LayerInfo = () => {\r\n  const state = useSelector(selectLayerInfo);\r\n  console.log(state)\r\n  const classes = useStyles();\r\n  // getModalStyle is not a pure function, we roll the style only on the first render\r\n  const [modalStyle] = React.useState(getModalStyle);\r\n  const [open, setOpen] = React.useState(false);\r\n   const dispatch = useDispatch()\r\n  const handleOpen = () => {\r\n\r\n    setOpen(state.show);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    // console.log(\"Here\");\r\n    dispatch(\r\n      setLayerInfoDetails({ show: false })\r\n    );\r\n    setOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    handleOpen();\r\n  }, [state]);\r\n  const body = (\r\n    <div style={modalStyle} className={classes.paper}>\r\n      <h2 id=\"simple-modal-title\">{state.dataset}</h2>\r\n      <p id=\"simple-modal-description\">{state.info}</p>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n\r\n      <Modal\r\n        open={open}\r\n        onClose={handleClose}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n      >\r\n        {body}\r\n      </Modal>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LayerInfo;\r\n","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\SideBarWrapper.js",["129"],"//import necessary lib\r\nimport React from \"react\";\r\nimport SidePanel from \"./SidePanel\";\r\nimport LayerTree from \"./LayerTree\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Tabs from \"@material-ui/core/Tabs\";\r\nimport Tab from \"@material-ui/core/Tab\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport BaseSwitcher from \"./BaseSwitcher\";\r\nimport AlertPanel from \"./AlertPanel\";\r\nimport AppsPanel from \"./AppsPanel\";\r\n\r\n// import CreatableSelect from 'react-select/creatable';\r\n//end of import\r\n\r\nconst SideBarWrapper = ({\r\n  //   analyticsLayers,\r\n  changeVisibility,\r\n  visibility,\r\n  showPanel,\r\n}) => {\r\n  //Tab view start\r\n  const [value, setValue] = React.useState(0);\r\n  const handleChange = (event, newValue) => {\r\n    setValue(newValue);\r\n  };\r\n  //tab view ends\r\n\r\n  //accordion start\r\n  const useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: \"100%\",\r\n    },\r\n    heading: {\r\n      fontSize: theme.typography.pxToRem(15),\r\n      fontWeight: theme.typography.fontWeightRegular,\r\n    },\r\n  }));\r\n  const classes = useStyles();\r\n\r\n  //hind show sideBarwarapper start\r\n  var data_filter = visibility.filter((element) => element.show);\r\n  var type = data_filter[0].id;\r\n  // hide show sideBarWrapper ends\r\n\r\n  // ******************************** fatch date data from database End here*******************************\r\n\r\n  //return view\r\n  return (\r\n    <div className=\"SideBarWrapper\">\r\n      {/* load of side panel start */}\r\n      <SidePanel changeVisibility={changeVisibility} visibility={visibility} />\r\n      {/* load of side panel start */}\r\n\r\n      {/* *************Layer Tab start*************** */}\r\n      {showPanel && (\r\n        <React.Fragment>\r\n          <div className={type === \"Layer\" ? \"LayerContainer\" : \"hidden\"}>\r\n            {/* List of map layers */}\r\n            <Paper square>\r\n              <Tabs\r\n                value={value}\r\n                indicatorColor=\"primary\"\r\n                textColor=\"primary\"\r\n                onChange={handleChange}\r\n                aria-label=\"disabled tabs example\"\r\n              >\r\n                <Tab label=\"Base Layers\" />\r\n                <Tab label=\"Overlays\" />\r\n              </Tabs>\r\n            </Paper>\r\n            <div className={value === 0 ? \" \" : \"hidden\"}>\r\n              <BaseSwitcher />\r\n            </div>\r\n            <div className={value === 1 ? \" \" : \"hidden\"}>\r\n              <LayerTree category=\"Administrative\" />\r\n              <LayerTree category=\"Land Use/Land Cover\" />\r\n              <LayerTree category=\"Census\" />\r\n              <LayerTree category=\"Disaster Mitigation\" />\r\n              <LayerTree category=\"Lightning\" />\r\n              <LayerTree category=\"Alerts and Early Warning\" />\r\n            </div>\r\n          </div>\r\n          {/* *************Layer Tab end*************** */}\r\n\r\n          {/* *************Vegetation Tab start*************** */}\r\n          <div className={type === \"Apps\" ? \"LayerContainer\" : \"hidden\"}>\r\n            <AppsPanel />\r\n          </div>\r\n          <div className={type === \"Alert\" ? \"LayerContainer\" : \"hidden\"}>\r\n            <AlertPanel />\r\n          </div>\r\n        </React.Fragment>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SideBarWrapper;\r\n","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\StatsBox.js",[],"E:\\sanjiv\\CODE\\nerdrr\\src\\components\\FocusBox.js",["130"],"import React from \"react\";\r\nimport Stats from \"./Stats\";\r\nimport styled from \"styled-components\";\r\n\r\nimport { useSelector } from \"react-redux\";\r\nimport { selectInfo } from \"../features/layers/infoboxslice\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\n\r\nconst FocusBox = () => {\r\n  const state = useSelector(selectInfo);\r\n  console.log(state);\r\n  return (\r\n    <InfoBoxx>\r\n      <React.Fragment>\r\n        {state.districtname !== undefined ? (\r\n          <p>\r\n            <InfoIcon />\r\n            Area of Focus: {state.districtname} (District)\r\n          </p>\r\n        ) : (\r\n          <p>\r\n            <InfoIcon />\r\n            Area of Focus: {state.statename} (State)\r\n          </p>\r\n        )}\r\n      </React.Fragment>\r\n    </InfoBoxx>\r\n  );\r\n};\r\nexport default FocusBox;\r\n\r\nconst InfoBoxx = styled.div`\r\n  top: 0px;\r\n  right: 0px;\r\n  position: absolute;\r\n  background: rgba(0, 0, 0, 0.74);\r\n  z-index: 10000;\r\n  max-height: 80%;\r\n  max-width: 20rem;\r\n  overflow-y: auto;\r\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25),\r\n    inset 0px 4px 4px rgba(0, 0, 0, 0.25);\r\n  margin-left: 10px;\r\n  margin-right: auto;\r\n  /* width: 20rem; */\r\n  p {\r\n    background: white;\r\n    align-items: center;\r\n    width: 20rem;\r\n    padding: 8px 10px;\r\n    border-bottom: 1px solid #ccc;\r\n    color: black;\r\n  }\r\n  .MuiSvgIcon-root {\r\n    font-size: 16px;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n","E:\\sanjiv\\CODE\\nerdrr\\src\\config.js",[],"E:\\sanjiv\\CODE\\nerdrr\\src\\components\\Map.js",["131","132"],"import {\r\n  MapContainer,\r\n  TileLayer,\r\n  WMSTileLayer,\r\n  useMapEvents,\r\n  FeatureGroup,\r\n  useMap,\r\n} from \"react-leaflet\";\r\nimport { useEffect } from \"react\";\r\nimport { useSelector, useDispatch } from \"react-redux\";\r\nimport { selectLayerDataSet } from \"../features/layers/overlaylayerslice\";\r\nimport { selectBaseDataSet } from \"../features/layers/baselayerslice\";\r\nimport { setMapState } from \"../features/maps/mapStateSlice\";\r\nimport React from \"react\";\r\nimport L from \"leaflet\";\r\nimport { EditControl } from \"react-leaflet-draw\"\r\n\r\nfunction HandleHover() {\r\n  const map = useMapEvents({\r\n    mousemove: (e) => {\r\n      //  console.log(e)\r\n    },\r\n  });\r\n  return null;\r\n}\r\n\r\nconst Toolbar = () => (\r\n  <FeatureGroup>\r\n     <EditControl\r\n      position='bottomright'\r\n    />\r\n  </FeatureGroup>\r\n);\r\n\r\nlet analyticslayer = null;\r\n\r\nfunction AddAnalytics({ test, showAnalytics }) {\r\n  let data = null;\r\n  const map = useMap();\r\n\r\n  if (analyticslayer != null) {\r\n    map.removeLayer(analyticslayer);\r\n  }\r\n  analyticslayer = L.tileLayer.wms(test[1], {\r\n    layers: test[0],\r\n    format: \"image/png\",\r\n    transparent: true,\r\n    zIndex: 100,\r\n  });\r\n  map.addLayer(analyticslayer);\r\n  if (!showAnalytics) {\r\n    map.removeLayer(analyticslayer);\r\n  }\r\n  return null;\r\n}\r\n\r\nconst Map = ({ visibility }) => {\r\n  console.log(visibility);\r\n  const dispatch = useDispatch();\r\n  function HandleClick() {\r\n    const map = useMapEvents({\r\n      click: (e) => {\r\n        dispatch(\r\n          setMapState({\r\n            lat: e.latlng.lat,\r\n            lon: e.latlng.lng,\r\n            zoom: map.getZoom(),\r\n            overlays: overlayLayers.filter((overlay) => overlay.show === true),\r\n            bbox: map.getBounds().toBBoxString(),\r\n            shape: map.getSize(),\r\n            point: map.latLngToContainerPoint(e.latlng, map.getZoom()),\r\n          })\r\n        );\r\n      },\r\n    });\r\n    return null;\r\n  }\r\n  const baseLayers = useSelector(selectBaseDataSet);\r\n  const overlayLayers = useSelector(selectLayerDataSet);\r\n\r\n  useEffect(() => {}, []);\r\n  return (\r\n    <MapContainer\r\n      center={[26.2006, 92.5376]}\r\n      zoom={7}\r\n      zoomControl={false}\r\n      attributionControl={false}\r\n    >\r\n      {baseLayers.map(\r\n        (baselayer, index) =>\r\n          baselayer.show &&\r\n          (baselayer.type === \"tile\" ? (\r\n            <TileLayer key={index} url={baselayer.link} zIndex=\"1\" />\r\n          ) : (\r\n            <WMSTileLayer\r\n              key={index}\r\n              url={baselayer.link}\r\n              layers={baselayer.layer}\r\n              format=\"image/png\"\r\n              zIndex=\"1\"\r\n            />\r\n          ))\r\n      )}\r\n      {overlayLayers.map(\r\n        (overlayer, index) =>\r\n          overlayer.show &\r\n            ((overlayer.text !== \"Flood Inundation\") &\r\n              (overlayer.class !== \"Lightning\")) && (\r\n            <WMSTileLayer\r\n              key={index}\r\n              format=\"image/png\"\r\n              layers={overlayer.layer}\r\n              url={overlayer.link}\r\n              transparent=\"true\"\r\n              zIndex={overlayer.class===\"Administrative\"?\"15\":\"10\"}\r\n            />\r\n          )\r\n      )}\r\n\r\n      {overlayLayers.map(\r\n        (overlayer, index) =>\r\n          overlayer.text === \"Flood Inundation\" && (\r\n            <AddAnalytics\r\n              test={[overlayer.layer, overlayer.link]}\r\n              showAnalytics={overlayer.show}\r\n            />\r\n          )\r\n      )}\r\n      {overlayLayers.map(\r\n        (overlayer, index) =>\r\n          overlayer.show & (overlayer.class === \"Lightning\") && (\r\n            <TileLayer\r\n              key={index}\r\n              url={overlayer.link + \"&t=\" + Math.floor(+new Date() / 1000)}\r\n              zIndex=\"10\"\r\n            />\r\n          )\r\n      )}\r\n      <Toolbar />\r\n      <HandleClick />\r\n      <HandleHover />\r\n    </MapContainer>\r\n  );\r\n};\r\n\r\nexport default Map;\r\n","E:\\sanjiv\\CODE\\nerdrr\\src\\features\\layers\\layerslice.js",[],"E:\\sanjiv\\CODE\\nerdrr\\src\\features\\layers\\layervisualiseslice.js",[],"E:\\sanjiv\\CODE\\nerdrr\\src\\features\\layers\\overlaylayerslice.js",[],"E:\\sanjiv\\CODE\\nerdrr\\src\\features\\layers\\appslice.js",["133"],"import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { apps } from \"../../config\";\r\n\r\nconst initialState = apps;\r\nconst appSlice = createSlice({\r\n  name: \"apps\",\r\n  initialState,\r\n  reducers: {\r\n    setAppDetails: (state, action) => {\r\n      console.log(action.payload.data);\r\n      state.map((st) => {\r\n        st.app === action.payload.data ? (st.show = true) : (st.show = false);\r\n      });\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setAppDetails } = appSlice.actions;\r\n\r\nexport const selectAppDataSet = (state) => state.apps;\r\n\r\nexport default appSlice.reducer;\r\n","E:\\sanjiv\\CODE\\nerdrr\\src\\features\\layers\\baselayerslice.js",["134"],"import { createSlice } from \"@reduxjs/toolkit\";\r\nimport { maps } from \"../../config\";\r\n\r\nconst initialState = maps;\r\nconst baseLayerSlice = createSlice({\r\n  name: \"baselayer\",\r\n  initialState,\r\n  reducers: {\r\n    setBaseDetails: (state, action) => {\r\n      console.log(action.payload.data);\r\n      state.map((st) => {\r\n        st.id === action.payload.data ? (st.show = true) : (st.show = false);\r\n      });\r\n    },\r\n  },\r\n});\r\n\r\nexport const { setBaseDetails } = baseLayerSlice.actions;\r\n\r\nexport const selectBaseDataSet = (state) => state.baselayer;\r\n\r\nexport default baseLayerSlice.reducer;\r\n","E:\\sanjiv\\CODE\\nerdrr\\src\\features\\layers\\infoboxslice.js",[],"E:\\sanjiv\\CODE\\nerdrr\\src\\features\\layers\\layerinfoslice.js",[],"E:\\sanjiv\\CODE\\nerdrr\\src\\features\\maps\\mapStateSlice.js",[],"E:\\sanjiv\\CODE\\nerdrr\\src\\components\\Info.js",["135"],"import React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setInfoDetails } from \"../features/layers/infoboxslice\";\r\nimport styled from \"styled-components\";\r\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\r\nimport KeyboardArrowDownIcon from \"@material-ui/icons/KeyboardArrowDown\";\r\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\r\nimport { selectLayerDataSet } from \"../features/layers/overlaylayerslice\";\r\nconst Info = ({ info, state }) => {\r\n  const [featureInfo, setFeatureInfo] = useState({\r\n    data: [],\r\n    isFetching: false,\r\n  });\r\n  const [showLayer, setShowLayer] = useState(false);\r\n  const dispatch = useDispatch();\r\n\r\n  const overlayLayers = useSelector(selectLayerDataSet);\r\n  const activelayers = overlayLayers.filter((e) => e.show).map((e) => e.text);\r\n  const getInfo = async () => {\r\n    try {\r\n      setFeatureInfo({ data: [], isFetching: true });\r\n\r\n      // console.log(formData);\r\n      fetch(\r\n        info.link +\r\n          \"?SERVICE=WMS&VERSION=1.1.1&REQUEST=GetFeatureInfo&QUERY_LAYERS=\" +\r\n          info.layer +\r\n          \"&LAYERS=\" +\r\n          info.layer +\r\n          \"&INFO_FORMAT=application/json&FEATURE_COUNT=50&X=\" +\r\n          state.point.x +\r\n          \"&Y=\" +\r\n          state.point.y +\r\n          \"&WIDTH=\" +\r\n          state.shape.x +\r\n          \"&HEIGHT=\" +\r\n          state.shape.y +\r\n          \"&BBOX=\" +\r\n          state.bounds,\r\n        {\r\n          method: \"GET\",\r\n        }\r\n      )\r\n        .then((response) => response.json())\r\n        .then((result) => {\r\n          if (\r\n            activelayers.includes(\"State Boundary\") &\r\n            activelayers.includes(\"District Boundary\")\r\n          ) {\r\n            result.features[0].properties.dtname !== undefined &&\r\n              dispatch(\r\n                setInfoDetails({\r\n                  statename: result.features[0].properties.stname,\r\n                  distname: result.features[0].properties.dtname,\r\n                })\r\n              );\r\n          } else {\r\n            result.features.length>0&&dispatch(\r\n              // result.features[0].properties.dtname !== undefined &&\r\n              setInfoDetails({\r\n                statename: result.features[0].properties.stname,\r\n                // distname: result.features[0].properties.dtname,\r\n              })\r\n            );\r\n          }\r\n          // );\r\n          // result.features[0].properties.dtname !== undefined;\r\n\r\n          setFeatureInfo({ data: result.features, isFetching: false });\r\n        })\r\n        .catch((error) => {\r\n          console.error(\"Error:\", error);\r\n          setFeatureInfo({ ...featureInfo, isFetching: false });\r\n\r\n        });\r\n      setFeatureInfo({ ...featureInfo, isFetching: true });\r\n    } catch (exception) {\r\n      console.log(exception);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    // AddAnalytics()\r\n    getInfo();\r\n  }, [state]);\r\n  return (\r\n    (\r\n      <INFO>\r\n        {featureInfo.isFetching ? (\r\n          <CircularProgress />\r\n        ) : (\r\n          featureInfo.data.length > 0 && (\r\n            <React.Fragment>\r\n              <p onClick={() => setShowLayer(!showLayer)}>\r\n                {info.text}\r\n                {showLayer ? (\r\n                  <KeyboardArrowDownIcon />\r\n                ) : (\r\n                  <KeyboardArrowUpIcon />\r\n                )}\r\n              </p>\r\n\r\n              {/* <p>{info.text}</p> */}\r\n              <table className={`${showLayer ? \"\" : \"visibility\"}`}>\r\n                <thead>\r\n                  <tr>\r\n                    <td>Attribute</td>\r\n                    <td>Value</td>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {featureInfo.data[0] !== undefined && info.attributes\r\n                    ? info.attributes.map((attribute) =>\r\n                        Object.keys(featureInfo.data[0].properties)\r\n                          .filter((e) => e === attribute.value)\r\n                          .map(function (element, index) {\r\n                            return (\r\n                              <tr key={index}>\r\n                                <td>{attribute.text}</td>\r\n                                <td>\r\n                                  {featureInfo.data[0].properties[element]}\r\n                                </td>\r\n                              </tr>\r\n                            );\r\n                          })\r\n                      )\r\n                    : Object.keys(featureInfo.data[0].properties).map(function (\r\n                        element,\r\n                        index\r\n                      ) {\r\n                        return (\r\n                          <tr key={index}>\r\n                            <td>{element}</td>\r\n                            <td>{featureInfo.data[0].properties[element]}</td>\r\n                          </tr>\r\n                        );\r\n                      })}\r\n                </tbody>\r\n              </table>\r\n            </React.Fragment>\r\n          )\r\n        )}\r\n      </INFO>\r\n    )\r\n  );\r\n};\r\n\r\nexport default Info;\r\n\r\nexport const INFO = styled.div`\r\n  /* width: 10%; */\r\n  color: white;\r\n  /* table-layout: fixed; */\r\n\r\n  p {\r\n    background: #014B96;\r\n    align-items: center;\r\n    width: 20rem;\r\n    padding: 8px 10px;\r\n    border-bottom: 1px solid #ccc;\r\n  }\r\n  p > .MuiSvgIcon-root {\r\n    float: right;\r\n    color: gray;\r\n  }\r\n  .visibility {\r\n    display: none;\r\n  }\r\n  table {\r\n    margin-left: 5%;\r\n    margin-top: 2%;\r\n    margin-bottom: 2%;\r\n    margin-right: 5%;\r\n    /* max-width: 20%; */\r\n    table-layout: fixed;\r\n    width: 90%;\r\n\r\n    /* border: none; */\r\n    border-collapse: collapse;\r\n    border: 1px solid #dadada;\r\n\r\n    background-color: #222222;\r\n  }\r\n  table tr {\r\n    margin-bottom: 1px;\r\n    border-bottom: 0.5px solid #dadada;\r\n    word-break: break-all;\r\n  }\r\n`;\r\n","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\SidePanel.js",["136"],"import React from \"react\";\r\nimport LayersIcon from \"@material-ui/icons/Layers\";\r\nimport AppsIcon from \"@material-ui/icons/Apps\";\r\nimport HomeIcon from \"@material-ui/icons/Home\";\r\nimport SwapHorizIcon from \"@material-ui/icons/SwapHoriz\";\r\nimport InsertChartIcon from \"@material-ui/icons/InsertChart\";\r\nimport MapIcon from \"@material-ui/icons/Map\";\r\nimport styled from \"styled-components\";\r\nimport InfoIcon from '@material-ui/icons/Info';\r\nimport $ from \"jquery\";\r\n$(document).on(\"click\", 'ul li', function(){\r\n  $('ul li').removeClass('activetab');\r\n  $(this).addClass('activetab');\r\n});\r\nconst SidePanel = ({ changeVisibility, visibility }) => {\r\n  return (\r\n    <SIDEPANEL className=\"SidePanel\">\r\n      <ul>\r\n        <li key={1}>\r\n          <img src=\"./ASDMA.png\" alt=\"nesdr-logo\" />\r\n        </li>\r\n        <li\r\n          className=\"activetab\"\r\n          key={4}\r\n          onClick={() => changeVisibility(\"Alert\")}\r\n        >\r\n          <HomeIcon />\r\n          <span align=\"center\">Home</span>\r\n        </li>\r\n        <li key={3} onClick={() => changeVisibility(\"Apps\")}>\r\n          <AppsIcon />\r\n          <span align=\"center\">Apps</span>\r\n        </li>\r\n        <li key={2} onClick={() => changeVisibility(\"Layer\")}>\r\n          <LayersIcon />\r\n          <span align=\"center\">Layers</span>\r\n        </li>\r\n\r\n        <li key={5} onClick={() => changeVisibility(\"Tools\")}>\r\n          <InfoIcon />\r\n          <span align=\"center\">Info</span>\r\n        </li>\r\n        <li key={6} onClick={() => changeVisibility(\"Stats\")}>\r\n          <InsertChartIcon />\r\n          <span align=\"center\">Stats</span>\r\n        </li>\r\n      </ul>\r\n      <ul class=\"legend\">\r\n        <li key={3} onClick={() => changeVisibility(\"Alert\")}>\r\n          <MapIcon />\r\n          <span align=\"center\">Legend</span>\r\n        </li>\r\n      </ul>\r\n    </SIDEPANEL>\r\n  );\r\n};\r\n\r\nexport default SidePanel;\r\n\r\nexport const SIDEPANEL = styled.div`\r\n  .legend {\r\n    position: absolute;\r\n    bottom: 5%;\r\n    left: 5%;\r\n  }\r\n  .activetab {\r\n    background-color: #313a43;\r\n    border-left: 3px solid blue;\r\n    border-color: blue;\r\n  }\r\n`;\r\n","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\LayerTree.js",[],"E:\\sanjiv\\CODE\\nerdrr\\src\\components\\AlertPanel.js",[],"E:\\sanjiv\\CODE\\nerdrr\\src\\components\\BaseSwitcher.js",[],"E:\\sanjiv\\CODE\\nerdrr\\src\\components\\AppsPanel.js",["137","138"],"import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { setBaseDetails } from \"../features/layers/baselayerslice\";\r\nimport { setAppDetails } from \"../features/layers/appslice\";\r\nconst AppsPanel = () => {\r\n\r\n  const dispatch = useDispatch();\r\n  // const basedata = useSelector(selectBaseDataSet);\r\n  const ChangeMap = (e) => {\r\n    dispatch(\r\n      setAppDetails({\r\n        data: e,\r\n        show: true,\r\n      })\r\n    );\r\n  };\r\n\r\n\r\n  return (\r\n    <VEGANALYSIS>\r\n      <p className=\"heads\">Applications</p>\r\n\r\n      <div className=\"apps\"  onClick={() => ChangeMap(\"GeoPortal\")}>\r\n        <p>Geo Portal</p>\r\n      </div>\r\n\r\n      <div className=\" apps\" onClick={() => ChangeMap(\"Flood\")}>\r\n        <p>Flood</p>\r\n      </div>\r\n\r\n      <div className=\" apps\" onClick={() => ChangeMap(\"lightning\")}>\r\n        <p>Lightning/Thunderstrom</p>\r\n      </div>\r\n\r\n      <div className=\" apps\" onClick={() => ChangeMap(\"Agriculture\")}>\r\n        <p>Agriculture</p>\r\n      </div>\r\n\r\n      <div className=\" apps\" onClick={() => ChangeMap(\"Geosciences\")}>\r\n        <p>Geosciences</p>\r\n      </div>\r\n    </VEGANALYSIS>\r\n  );\r\n};\r\n\r\nexport default AppsPanel;\r\n\r\nconst VEGANALYSIS = styled.div`\r\n  .heads {\r\n    background: #bdbdbd;\r\n    align-items: flex-end;\r\n    width: 100%;\r\n    padding: 8px 10px;\r\n    cursor: pointer;\r\n    border-bottom: 1px solid rgb(131, 130, 130);\r\n    font-size: 14px;\r\n    color: #fff;\r\n  }\r\n  .apps {\r\n    padding: 10px;\r\n    margin: 10px;\r\n    border-radius: 15px;\r\n    background: #3a3a3a;\r\n    border: 1px solid rgb(131, 130, 130);\r\n    align-items: flex-end;\r\n    width: 20rem;\r\n    height: 50px;\r\n    padding: 8px 10px;\r\n    cursor: pointer;\r\n    border-bottom: 1px solid rgb(131, 130, 130);\r\n    font-size: 14px;\r\n    color: #fff;\r\n  }\r\n  .apps:hover {\r\n    background-color: #bdbdbd;\r\n    border: black;\r\n    color: #fff;\r\n  }\r\n`;\r\n","E:\\sanjiv\\CODE\\nerdrr\\src\\components\\Stats.js",["139","140","141","142","143","144","145","146"],"E:\\sanjiv\\CODE\\nerdrr\\src\\components\\Layer.js",["147","148","149"],"import Checkbox from \"@material-ui/core/Checkbox\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { setAnalyticsDetails, selectLayerDataSet } from \"../features/layers/overlaylayerslice\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { setLayerInfoDetails } from \"../features/layers/layerinfoslice\";\r\nimport styled from \"styled-components\";\r\nfunction getdrop() {\r\n  var vall = document.getElementById(\"date\");\r\n  var value=vall.options[vall.selectedIndex].value;\r\n  var text=vall.options[vall.selectedIndex].text;\r\n}\r\nconst Layer = ({ task, showLayer }) => {\r\n  const dispatch = useDispatch();\r\n  const state = useSelector(selectLayerDataSet);\r\n\r\n  const toggleLayer = (id, e) => {\r\n    dispatch(setAnalyticsDetails({ ...state, id: id - 1, show: e }));\r\n  };\r\n  const showInfo = (data,info) => {\r\n    dispatch(setLayerInfoDetails({ dataset: data, info:info, show: true }));\r\n\r\n  };\r\n  const changeDate = (date, id) => {\r\n    var vall = document.getElementById(\"date\");\r\n    var value=vall.options[vall.selectedIndex].value;\r\n    var text=vall.options[vall.selectedIndex].text;\r\n    dispatch(setAnalyticsDetails({ ...state, id: id - 1, show: false }));\r\n    setTimeout(console.log(\"\"), 10000);\r\n\r\n    dispatch(\r\n      setAnalyticsDetails({ ...state, id: id - 1, show: true, layer: date, layer_date:text })\r\n    );\r\n  };\r\n  // task.options.map((data) => {})\r\n//  var date = task.options.map((e) => e);\r\n  return (\r\n    <LAYER className={`${showLayer ? \"active\" : \"task\"}`}>\r\n      <Checkbox\r\n        color=\"primary\"\r\n        defaultChecked={task.show && true}\r\n        onClick={(e) => toggleLayer(task.id, e.target.checked)}\r\n      />\r\n      {task.text}{\" \"}\r\n      <InfoIcon className=\"info\" onClick={(e) => showInfo(task.text, task.info)} />\r\n      {task.options !== undefined && (\r\n        <>\r\n          {\" \"}\r\n          <select\r\n            id=\"date\"\r\n            onClick={getdrop}\r\n            onChange={(event) => {\r\n              changeDate(event.target.value, task.id);\r\n            }}\r\n          >       \r\n          {\r\n          task.options.map((data) => (\r\n            <option value={data.value}> {data.text}</option>   \r\n          ))}\r\n          </select>\r\n        </>\r\n      )}\r\n    </LAYER>\r\n  );\r\n};\r\n\r\nexport default Layer;\r\n\r\nconst LAYER = styled.div`\r\n  font-size: 14px;\r\n  .MuiSvgIcon-root {\r\n    font-size: 16px;\r\n    cursor: pointer;\r\n  }\r\n  .info {\r\n    cursor: pointer;\r\n\r\n    margin-top: 5px;\r\n    display: block;\r\n    margin-inline-end: 15px;\r\n    float: right;\r\n    color: rgb(73, 73, 245);\r\n    font-size: small;\r\n    margin-top: 10px;\r\n  }\r\n`;\r\n",{"ruleId":"150","replacedBy":"151"},{"ruleId":"152","replacedBy":"153"},{"ruleId":"154","severity":1,"message":"155","line":8,"column":10,"nodeType":"156","messageId":"157","endLine":8,"endColumn":14},{"ruleId":"158","severity":1,"message":"159","line":58,"column":6,"nodeType":"160","endLine":58,"endColumn":13,"suggestions":"161"},{"ruleId":"154","severity":1,"message":"162","line":39,"column":9,"nodeType":"156","messageId":"157","endLine":39,"endColumn":16},{"ruleId":"154","severity":1,"message":"163","line":2,"column":8,"nodeType":"156","messageId":"157","endLine":2,"endColumn":13},{"ruleId":"154","severity":1,"message":"164","line":19,"column":9,"nodeType":"156","messageId":"157","endLine":19,"endColumn":12},{"ruleId":"154","severity":1,"message":"165","line":38,"column":7,"nodeType":"156","messageId":"157","endLine":38,"endColumn":11},{"ruleId":"166","severity":1,"message":"167","line":11,"column":22,"nodeType":"168","messageId":"169","endLine":11,"endColumn":24},{"ruleId":"166","severity":1,"message":"167","line":11,"column":22,"nodeType":"168","messageId":"169","endLine":11,"endColumn":24},{"ruleId":"158","severity":1,"message":"170","line":86,"column":6,"nodeType":"160","endLine":86,"endColumn":13,"suggestions":"171"},{"ruleId":"154","severity":1,"message":"172","line":5,"column":8,"nodeType":"156","messageId":"157","endLine":5,"endColumn":21},{"ruleId":"154","severity":1,"message":"173","line":3,"column":23,"nodeType":"156","messageId":"157","endLine":3,"endColumn":34},{"ruleId":"154","severity":1,"message":"174","line":4,"column":10,"nodeType":"156","messageId":"157","endLine":4,"endColumn":24},{"ruleId":"154","severity":1,"message":"175","line":7,"column":10,"nodeType":"156","messageId":"157","endLine":7,"endColumn":21},{"ruleId":"154","severity":1,"message":"176","line":9,"column":10,"nodeType":"156","messageId":"157","endLine":9,"endColumn":22},{"ruleId":"158","severity":1,"message":"177","line":136,"column":15,"nodeType":"178","endLine":136,"endColumn":39},{"ruleId":"179","severity":1,"message":"180","line":145,"column":19,"nodeType":"181","messageId":"182","endLine":145,"endColumn":21},{"ruleId":"179","severity":1,"message":"180","line":154,"column":23,"nodeType":"181","messageId":"182","endLine":154,"endColumn":25},{"ruleId":"166","severity":1,"message":"167","line":170,"column":26,"nodeType":"168","messageId":"169","endLine":170,"endColumn":28},{"ruleId":"158","severity":1,"message":"183","line":208,"column":6,"nodeType":"160","endLine":208,"endColumn":8,"suggestions":"184"},{"ruleId":"158","severity":1,"message":"170","line":211,"column":6,"nodeType":"160","endLine":211,"endColumn":16,"suggestions":"185"},{"ruleId":"154","severity":1,"message":"186","line":10,"column":7,"nodeType":"156","messageId":"157","endLine":10,"endColumn":12},{"ruleId":"154","severity":1,"message":"187","line":11,"column":7,"nodeType":"156","messageId":"157","endLine":11,"endColumn":11},{"ruleId":"154","severity":1,"message":"186","line":26,"column":9,"nodeType":"156","messageId":"157","endLine":26,"endColumn":14},"no-native-reassign",["188"],"no-negated-in-lhs",["189"],"no-unused-vars","'rand' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'handleOpen'. Either include it or remove the dependency array.","ArrayExpression",["190"],"'classes' is assigned a value but never used.","'Stats' is defined but never used.","'map' is assigned a value but never used.","'data' is assigned a value but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","React Hook useEffect has a missing dependency: 'getInfo'. Either include it or remove the dependency array.",["191"],"'SwapHorizIcon' is defined but never used.","'useSelector' is defined but never used.","'setBaseDetails' is defined but never used.","'useDispatch' is defined but never used.","'MDBDataTable' is defined but never used.","Assignments to the 'dateapi' variable from inside React Hook useEffect will be lost after each render. To preserve the value over time, store it in a useRef Hook and keep the mutable value in the '.current' property. Otherwise, you can move this variable directly inside useEffect.","MemberExpression","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has a missing dependency: 'tabledata'. Either include it or remove the dependency array.",["192"],["193"],"'value' is assigned a value but never used.","'text' is assigned a value but never used.","no-global-assign","no-unsafe-negation",{"desc":"194","fix":"195"},{"desc":"196","fix":"197"},{"desc":"198","fix":"199"},{"desc":"200","fix":"201"},"Update the dependencies array to be: [handleOpen, state]",{"range":"202","text":"203"},"Update the dependencies array to be: [getInfo, state]",{"range":"204","text":"205"},"Update the dependencies array to be: [tabledata]",{"range":"206","text":"207"},"Update the dependencies array to be: [getInfo, infodata]",{"range":"208","text":"209"},[1488,1495],"[handleOpen, state]",[2948,2955],"[getInfo, state]",[6218,6220],"[tabledata]",[6274,6284],"[getInfo, infodata]"]
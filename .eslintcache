[{"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/index.js":"1","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/reportWebVitals.js":"2","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/App.js":"3","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/Legend.js":"4","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/InfoBox.js":"5","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/config.js":"6","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/Map.js":"7","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/SideBarWrapper.js":"8","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/Info.js":"9","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/LayerTree.js":"10","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/SidePanel.js":"11","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/Layer.js":"12","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/LayerAnalyticsVisualise.js":"13","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/VegetationAnalysis.js":"14","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/ChangeDates.js":"15","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/AnalyticsDates.js":"16","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/RGBDropDown.js":"17","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/features/layers/layerslice.js":"18","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/app/store.js":"19","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/features/layers/layervisualiseslice.js":"20","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/features/layers/overlaylayerslice.js":"21","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/BaseSwitcher.js":"22","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/features/layers/baselayerslice.js":"23","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/WeatherVisualise.js":"24","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/VegetationVisualise.js":"25","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/WaterVisualise.js":"26","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/SatelliteVisualise.js":"27","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/features/maps/mapStateSlice.js":"28","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/WeatherAnalysis.js":"29","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/WaterAnalysis.js":"30"},{"size":620,"mtime":1621196132286,"results":"31","hashOfConfig":"32"},{"size":362,"mtime":1620367994223,"results":"33","hashOfConfig":"32"},{"size":858,"mtime":1621592972785,"results":"34","hashOfConfig":"32"},{"size":440,"mtime":1621363484171,"results":"35","hashOfConfig":"32"},{"size":801,"mtime":1621425536019,"results":"36","hashOfConfig":"32"},{"size":7398,"mtime":1621976464549,"results":"37","hashOfConfig":"32"},{"size":4296,"mtime":1621975586616,"results":"38","hashOfConfig":"32"},{"size":6143,"mtime":1621883335967,"results":"39","hashOfConfig":"32"},{"size":900,"mtime":1620367994206,"results":"40","hashOfConfig":"32"},{"size":829,"mtime":1621363904861,"results":"41","hashOfConfig":"32"},{"size":1777,"mtime":1620849792381,"results":"42","hashOfConfig":"32"},{"size":1286,"mtime":1621799270631,"results":"43","hashOfConfig":"32"},{"size":2189,"mtime":1621836081825,"results":"44","hashOfConfig":"32"},{"size":4259,"mtime":1621969365223,"results":"45","hashOfConfig":"32"},{"size":3916,"mtime":1621969450810,"results":"46","hashOfConfig":"32"},{"size":4710,"mtime":1621975998095,"results":"47","hashOfConfig":"32"},{"size":4500,"mtime":1621807963890,"results":"48","hashOfConfig":"32"},{"size":839,"mtime":1621948560557,"results":"49","hashOfConfig":"32"},{"size":697,"mtime":1621418143207,"results":"50","hashOfConfig":"32"},{"size":614,"mtime":1621947961914,"results":"51","hashOfConfig":"32"},{"size":531,"mtime":1621367651028,"results":"52","hashOfConfig":"32"},{"size":1616,"mtime":1621673051176,"results":"53","hashOfConfig":"32"},{"size":573,"mtime":1621799202909,"results":"54","hashOfConfig":"32"},{"size":3907,"mtime":1621950572522,"results":"55","hashOfConfig":"32"},{"size":3907,"mtime":1621942414475,"results":"56","hashOfConfig":"32"},{"size":3950,"mtime":1621950664144,"results":"57","hashOfConfig":"32"},{"size":2365,"mtime":1621541576098,"results":"58","hashOfConfig":"32"},{"size":567,"mtime":1621425503120,"results":"59","hashOfConfig":"32"},{"size":4226,"mtime":1621882825366,"results":"60","hashOfConfig":"32"},{"size":4222,"mtime":1621886856120,"results":"61","hashOfConfig":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},"r63pth",{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"64"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"90","usedDeprecatedRules":"64"},{"filePath":"91","messages":"92","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"93","messages":"94","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"95","messages":"96","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"99","usedDeprecatedRules":"64"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"112","usedDeprecatedRules":"64"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"115","messages":"116","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"117","usedDeprecatedRules":"64"},{"filePath":"118","messages":"119","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"120","messages":"121","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"64"},{"filePath":"123","messages":"124","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"64"},{"filePath":"125","messages":"126","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"127","usedDeprecatedRules":"64"},{"filePath":"128","messages":"129","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"130","usedDeprecatedRules":"64"},"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/index.js",[],["131","132"],"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/reportWebVitals.js",[],"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/App.js",[],"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/Legend.js",[],"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/InfoBox.js",[],"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/config.js",[],"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/Map.js",["133"],"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/SideBarWrapper.js",["134"],"//import necessary lib\nimport React from \"react\";\nimport SidePanel from \"./SidePanel\";\nimport LayerTree from \"./LayerTree\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport VegetationAnalysis from \"./VegetationAnalysis\";\nimport BaseSwitcher from \"./BaseSwitcher\";\nimport WeatherVisualise from \"./WeatherVisualise\";\nimport VegetationVisualise from \"./VegetationVisualise\";\nimport WaterVisualise from \"./WaterVisualise\";\nimport SatelliteVisualise from \"./SatelliteVisualise\";\nimport WeatherAnalysis from \"./WeatherAnalysis\"\nimport WaterAnalysis from \"./WaterAnalysis\"\n// import CreatableSelect from 'react-select/creatable';\n//end of import\n\nconst SideBarWrapper = ({\n  //   analyticsLayers,\n  changeVisibility,\n  visibility,\n}) => {\n  //Tab view start\n  const [value, setValue] = React.useState(0);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  //tab view ends\n\n  //accordion start\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      width: \"100%\",\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(15),\n      fontWeight: theme.typography.fontWeightRegular,\n    },\n  }));\n  const classes = useStyles();\n\n  //hind show sideBarwarapper start\n  var data_filter = visibility.filter((element) => element.show);\n  var type = data_filter[0].id;\n  // hide show sideBarWrapper ends\n\n  // ******************************** fatch date data from database End here*******************************\n\n  //return view\n  return (\n    <div className=\"SideBarWrapper\">\n      {/* load of side panel start */}\n      <SidePanel changeVisibility={changeVisibility} />\n      {/* load of side panel start */}\n\n      {/* *************Layer Tab start*************** */}\n\n      <div className={type === \"Layer\" ? \"LayerContainer\" : \"hidden\"}>\n        {/* List of map layers */}\n        <Paper square>\n          <Tabs\n            value={value}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            onChange={handleChange}\n            aria-label=\"disabled tabs example\"\n          >\n            <Tab label=\"Base Layers\" />\n            <Tab label=\"Overlays\" />\n          </Tabs>\n        </Paper>\n        <div className={value === 0 ? \" \" : \"hidden\"}>\n          <BaseSwitcher />\n        </div>\n        <div className={value === 1 ? \" \" : \"hidden\"}>\n          <LayerTree category=\"Administrative\" />\n          <LayerTree category=\"Land Use/Land Cover\" />\n          <LayerTree category=\"Census\" />\n        </div>\n      </div>\n      {/* *************Layer Tab end*************** */}\n\n      {/* *************Vegetation Tab start*************** */}\n      {type === \"Vegetation\" ? (\n        <div className=\"LayerContainer\">\n          {/* Tab View */}\n          <Paper square>\n            <Tabs\n              value={value}\n              indicatorColor=\"primary\"\n              textColor=\"primary\"\n              onChange={handleChange}\n              aria-label=\"disabled tabs example\"\n            >\n              <Tab label=\"Visualization\" />\n              <Tab label=\"Analysis\" />\n            </Tabs>\n          </Paper>\n          {/* Tab1 Data */}\n          <div className={value === 0 ? \" \" : \"hidden\"}>\n            <VegetationVisualise />\n          </div>\n          {/* Tab2 Data */}\n          <div className={value === 1 ? \" \" : \"hidden\"}>\n            <VegetationAnalysis />\n          </div>\n        </div>\n      ) : type === \"Weather\" ? (\n        <div className={type === \"Weather\" ? \"LayerContainer\" : \"hidden\"}>\n          <Paper square>\n            <Tabs\n              value={value}\n              indicatorColor=\"primary\"\n              textColor=\"primary\"\n              onChange={handleChange}\n              aria-label=\"disabled tabs example\"\n            >\n              <Tab label=\"Visualization\" />\n              <Tab label=\"Analysis\" />\n            </Tabs>\n          </Paper>\n          {/* Tab1 Data */}\n          <div className={value === 0 ? \" \" : \"hidden\"}>\n            <WeatherVisualise />\n          </div>\n          {/* Tab2 Data */}\n          <div className={value === 1 ? \" \" : \"hidden\"}>\n            <WeatherAnalysis />\n          </div>\n        </div>\n      ) : type === \"Water_Resources\" ? (\n        <div\n          className={type === \"Water_Resources\" ? \"LayerContainer\" : \"hidden\"}\n        >\n          <Paper square>\n            <Tabs\n              value={value}\n              indicatorColor=\"primary\"\n              textColor=\"primary\"\n              onChange={handleChange}\n              aria-label=\"disabled tabs example\"\n            >\n              <Tab label=\"Visualization\" />\n              <Tab label=\"Analysis\" />\n            </Tabs>\n          </Paper>\n          {/* Tab1 Data */}\n          <div className={value === 0 ? \" \" : \"hidden\"}>\n            <WaterVisualise />\n          </div>\n          {/* Tab2 Data */}\n          <div className={value === 1 ? \" \" : \"hidden\"}>\n            <WaterAnalysis />\n          </div>\n        </div>\n      ) : type === \"Satellite_Imagery\" ? (\n        <div\n          className={type === \"Satellite_Imagery\" ? \"LayerContainer\" : \"hidden\"}\n        >\n          <Paper square>\n            <Tabs\n              value={value}\n              indicatorColor=\"primary\"\n              textColor=\"primary\"\n              onChange={handleChange}\n              aria-label=\"disabled tabs example\"\n            >\n              <Tab label=\"Visualization\" />\n              <Tab label=\"Analysis\" />\n            </Tabs>\n          </Paper>\n          {/* Tab1 Data */}\n          <div className={value === 0 ? \" \" : \"hidden\"}>\n            <SatelliteVisualise />\n          </div>\n          {/* Tab2 Data */}\n          <div className={value === 1 ? \" \" : \"hidden\"}>\n            <VegetationAnalysis />\n          </div>\n        </div>\n      ) : (\n        <div\n          className={type === \"Vedas_Services\" ? \"LayerContainer\" : \"hidden\"}\n        >\n          <LayerTree category=\"Admin\" state=\"test\" />\n          <LayerTree category=\"Natural Resource\" />\n        </div>\n      )}\n\n      \n    </div>\n  );\n};\n\nexport default SideBarWrapper;\n","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/Info.js",[],"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/LayerTree.js",[],"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/SidePanel.js",[],"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/Layer.js",[],"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/LayerAnalyticsVisualise.js",["135","136","137"],"import { useDispatch } from \"react-redux\";\nimport {useState, useEffect} from \"react\";\nimport { setAnalyticsVisual } from \"../features/layers/layervisualiseslice\";\n// import { useSelector } from \"react-redux\";\n// import { selectLayerData } from \"../features/layers/layervisualiseslice\";\nimport {setAnalyticsDetails} from \"../features/layers/layerslice\"\nconst LayerAnalyticsVisualise = ({showLayer }) => {\n  var arrays = [{\n    ndvidates: [200,300],\n    soil_moisture_dates: [200,300],\n    et_dates: [200,300]\n}];\nconst dispatch = useDispatch();\n// const state = useSelector(selectLayerData);\n\nconst setDate = (date,data) => {\n  dispatch(\n    setAnalyticsVisual({dataset:data.showLayer,\n      dates: date,\n      show:true\n    })\n  );\n  // dispatch(setAnalyticsDetails({ ...state, dates: e, show: true }));\n\n};\n\nconst [date, setdate] = useState({\n  dates: [],\n  isFetching: false,\n});\n\n\n\nconst fetchDates = async () => {\n  try {\n    setdate({ dates: [], isFetching: false });\n    const formData = new FormData();\n\n    formData.append(\"database\", showLayer);\n    formData.append(\"key\", \"mgy1exz0n8mXQXi8NrOq24DDvmLrZ16a\");\n    // console.log(formData);\n    fetch(\"https://mobileapp.nesdr.gov.in/analytics_api/modis_ndvi.php\", {\n      method: \"POST\",\n      body: formData,\n    })\n      .then((response) => response.json())\n      .then((result) => {\n        console.log(result);\n        setdate({ dates: result, isFetching: false });\n      })\n      .catch((error) => {\n        console.error(\"Error:\", error);\n      });\n    // console.log(response);\n    setdate({ ...date, isFetching: true });\n  } catch (exception) {\n    console.log(exception);\n    setdate({ dates: date.dates, isFetching: false });\n  }\n};\n\n\n\n\nuseEffect(() => {\n  fetchDates();\n}, []);\n\nreturn (\n  \n      <div\n        className={ `${showLayer? 'activeAnalytics':'task'}`} \n      >\n         {showLayer} Date \n         \n         <select onChange={(event)=>setDate(event.target.value, {showLayer} )}>\n            {\n            date.dates.map((task, index) => (\n                <option key={index} value={task.time_stamp}>{task.date}</option>\n            ))}\n      </select>\n    </div>\n  )\n}\n\nexport default LayerAnalyticsVisualise\n","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/VegetationAnalysis.js",["138"],"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/ChangeDates.js",["139","140"],"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/AnalyticsDates.js",["141","142"],"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/RGBDropDown.js",["143","144","145"],"import React from \"react\";\nimport styled from \"styled-components\";\nimport { useDispatch } from \"react-redux\";\nimport { setAnalyticsDetails } from \"../features/layers/layerslice\";\nimport { useSelector } from \"react-redux\";\nimport { selectDataSet } from \"../features/layers/layerslice\";\nimport { setAnalyticsVisual } from \"../features/layers/layervisualiseslice\";\nimport { useState, useEffect } from \"react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nconst RGBDropDown = () => {\n  const dispatch = useDispatch();\n  const dispatch1 = useDispatch();\n  const state = useSelector(selectDataSet);\n\n  const setDate = (e) => {\n    dispatch(setAnalyticsDetails({ ...state, dates: e, show: true }));\n    dispatch1(setAnalyticsVisual({ show: false }));\n  };\n  // const dispatch = useDispatch();\n  // const dispatch1 = useDispatch();\n  // const state = useSelector(selectDataSet);\n\n  const setChangeDate = () => {\n    let fromdate=document.getElementById('fromdate').value\n    let todate=document.getElementById('todate').value\n    dispatch(setAnalyticsDetails({ ...state, dates: [fromdate,todate], show: true }));\n    dispatch1(setAnalyticsVisual({ show: false }));\n  };\n\n  const [date, setdate] = useState({\n    dates: [],\n    isFetching: false,\n  });\n\n  const fetchDates = async () => {\n    try {\n      setdate({ dates: [], isFetching: false });\n      const formData = new FormData();\n\n      formData.append(\"database\", state.dataset);\n      formData.append(\"key\", \"mgy1exz0n8mXQXi8NrOq24DDvmLrZ16a\");\n      // console.log(formData);\n      fetch(\"https://mobileapp.nesdr.gov.in/analytics_api/modis_ndvi.php\", {\n        method: \"POST\",\n        body: formData,\n      })\n        .then((response) => response.json())\n        .then((result) => {\n          setdate({ dates: result, isFetching: false });\n        })\n        .catch((error) => {\n          console.error(\"Error:\", error);\n        });\n      setdate({ ...date, isFetching: true });\n    } catch (exception) {\n      console.log(exception);\n      setdate({ dates: date.dates, isFetching: false });\n    }\n  };\n\n  useEffect(() => {\n    // console.log(\"inside Effect\");\n    // console.log(state)\n    fetchDates();\n  }, []);\n\n  useEffect(() => {\n    // console.log(\"inside Effect\");\n    // console.log(state)\n    fetchDates();\n  }, [state.dataset]);\n\n  return (\n    <RGB>\n      {date.isFetching ? (\n        <CircularProgress />\n      ) : (\n        <React.Fragment>\n          <div className=\"Change\">\n            <p>Red</p>\n            <select id=\"fromdate\"\n              className=\"SelectMenu1\"\n              onChange={() => setChangeDate()}\n            >\n              {date.dates.map((task, index) => (\n                <option key={index} value={task.time_stamp}>\n                  {task.date}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"Change\">\n            <p>Green</p>\n            <select id=\"todate\"\n              className=\"SelectMenu1\"\n              onChange={() => setChangeDate()}\n            >\n              {date.dates.map((task, index) => (\n                <option key={index} value={task.time_stamp}>\n                  {task.date}\n                </option>\n              ))}\n            </select>\n          </div>\n          <div className=\"Change\">\n            <p>Blue</p>\n            <select id=\"fromdate\"\n              className=\"SelectMenu1\"\n              onChange={() => setChangeDate()}\n            >\n              {date.dates.map((task, index) => (\n                <option key={index} value={task.time_stamp}>\n                  {task.date}\n                </option>\n              ))}\n            </select>\n          </div>\n        </React.Fragment>\n      )}\n    </RGB>\n  );\n  \n};\n\nexport default RGBDropDown;\n\nconst RGB = styled.div`\n  /* height: 75px;\n  background-color: white; */\n  margin: 0px;\n  margin-left: 20px;\n  margin-right: 40px;\n  .Change {\n    display: flex;\n    justify-content: space-between;\n    /* margin: auto; */\n    top: 50%;\n  }\n  .Change > p {\n    margin-top: 15px;\n  }\n  .SelectMenu1 {\n    border: 1px solid #555;\n    border-radius: 4px;\n    box-shadow: none;\n    font-size: 12px;\n    font-weight: 400;\n    /* width: 5000px; */\n    display: block;\n    width: 50%;\n    height: 34px;\n    padding: 6px 12px;\n    font-size: 14px;\n    line-height: 1.42857143;\n    color: #555;\n    background-color: #fff;\n    background-image: none;\n    margin-top: 10px;\n    margin-bottom: 10px;\n    margin-left: 40px;\n    margin-right: 10px;\n  }\n`;\n","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/features/layers/layerslice.js",[],"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/app/store.js",[],"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/features/layers/layervisualiseslice.js",[],"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/features/layers/overlaylayerslice.js",[],"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/BaseSwitcher.js",[],"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/features/layers/baselayerslice.js",["146"],"import { createSlice } from \"@reduxjs/toolkit\";\nimport { maps } from \"../../config\";\n\nconst initialState = maps;\nconst baseLayerSlice = createSlice({\n  name: \"baselayer\",\n  initialState,\n  reducers: {\n    setBaseDetails: (state, action) => {\n      console.log(action.payload.data);\n      state.map((st) => {\n        st.id === action.payload.data ? (st.show = true) : (st.show = false);\n      });\n    },\n  },\n});\n\nexport const { setBaseDetails } = baseLayerSlice.actions;\n\nexport const selectBaseDataSet = (state) => state.baselayer;\n\nexport default baseLayerSlice.reducer;\n","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/WeatherVisualise.js",["147","148"],"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/VegetationVisualise.js",["149","150"],"import React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { useSelector } from \"react-redux\";\nimport {\n  setAnalyticsVisual,\n  selectLayerData,\n} from \"../features/layers/layervisualiseslice\";\nimport styled from \"styled-components\";\n\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nconst VegetationVisualise = () => {\n  const dispatch = useDispatch();\n\n  const state = useSelector(selectLayerData);\n\n  const setDate = (e) => {\n    dispatch(setAnalyticsVisual({ ...state, dates: e, show: true }));\n  };\n\n  const setDataset = (e) => {\n    dispatch(setAnalyticsVisual({ ...state, dataset: e }));\n  };\n\n  const [date, setdate] = useState({\n    dates: [],\n    isFetching: false,\n  });\n\n  const fetchDates = async () => {\n    try {\n      setdate({ dates: [], isFetching: false });\n      const formData = new FormData();\n      formData.append(\"database\", state.dataset);\n      formData.append(\"key\", \"mgy1exz0n8mXQXi8NrOq24DDvmLrZ16a\");\n      // console.log(formData);\n      fetch(\"https://mobileapp.nesdr.gov.in/analytics_api/modis_ndvi.php\", {\n        method: \"POST\",\n        body: formData,\n      })\n        .then((response) => response.json())\n        .then((result) => {\n          // console.log(result);\n          setdate({ dates: result, isFetching: false });\n        })\n        .catch((error) => {\n          console.error(\"Error:\", error);\n        });\n      // console.log(response);\n      setdate({ ...date, isFetching: true });\n    } catch (exception) {\n      console.log(exception);\n      setdate({ dates: date.dates, isFetching: false });\n    }\n  };\n\n  useEffect(() => {\n    fetchDates();\n   // dispatch(setAnalyticsVisual({ ...state, dates: document.getElementById(\"date\").value, show: true }));\n\n  }, [state.dataset]);\n\n  useEffect(() => {\n    dispatch(\n      setAnalyticsVisual({ ...state, dataset: document.getElementById(\"data\").value, show:true })\n    );\n\n    fetchDates();\n  }, []);\n\n  return (\n    <VEGVISUALISE>\n      <div className=\"LayerTree\">\n        <p className=\"heads\">Dataset</p>\n      </div>\n      <select\n        id=\"data\"\n        className=\"SelectMenu\"\n        onChange={(event) => setDataset(event.target.value)}\n      >\n        <option value=\"modis_ndvi\">Modis NDVI</option>\n        <option value=\"et\">MODIS ET</option>\n        <option value=\"soil_date\">Soil Moisture (SMAP)</option>\n      </select>\n      <div className=\"LayerTree\">\n        <p className=\"heads\">Date</p>\n      </div>\n      {date.isFetching ? (\n        <CircularProgress />\n      ) : (\n        <React.Fragment>\n          <div>\n            <select\n              id=\"date\"\n              className=\"SelectMenu\"\n              onChange={(event) => setDate(event.target.value)}\n            >\n              {date.dates.map((task, index) => (\n                <option key={index} value={task.time_stamp}>\n                  {task.date}\n                </option>\n              ))}\n            </select>\n          </div>\n        </React.Fragment>\n      )}\n    </VEGVISUALISE>\n  );\n};\n\nexport default VegetationVisualise;\n\nconst VEGVISUALISE = styled.div`\n  font-family: \"Poppins\", sans-serif;\n  /* padding-right: 15px;\n  padding-left: 15px;  */\n  background-color: #fff;\n  font-size: 14px;\n  margin-bottom: 15px;\n  padding-bottom: 15px;\n  .heads {\n    box-shadow: 0px 2px 1px -1px rgb(0 0 0 / 20%),\n      0px 1px 1px 0px rgb(0 0 0 / 14%), 0px 1px 3px 0px rgb(0 0 0 / 12%);\n    border-bottom: black;\n  }\n  .SelectMenu {\n    border: 1px solid #555;\n    border-radius: 4px;\n    box-shadow: none;\n    font-size: 12px;\n    font-weight: 400;\n    /* width: 5000px; */\n    display: block;\n    width: 70%;\n    height: 34px;\n    padding: 6px 12px;\n    font-size: 14px;\n    line-height: 1.42857143;\n    color: #555;\n    background-color: #fff;\n    background-image: none;\n    margin-top: 10px;\n    margin-bottom: 10px;\n    margin-left: 40px;\n    margin-right: 10px;\n  }\n`;\n","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/WaterVisualise.js",["151","152"],"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/SatelliteVisualise.js",["153","154","155"],"import React from 'react'\nimport Typography from \"@material-ui/core/Typography\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Accordion from \"@material-ui/core/Accordion\";\nimport AccordionSummary from \"@material-ui/core/AccordionSummary\";\nimport AccordionDetails from \"@material-ui/core/AccordionDetails\";\nimport ExpandMoreIcon from \"@material-ui/icons/ExpandMore\";\nimport LayerAnalyticsVisualise from \"./LayerAnalyticsVisualise\";\nimport VegetationAnalysis from \"./VegetationAnalysis\";\nimport BaseSwitcher from \"./BaseSwitcher\";\nconst SatelliteVisualise = () => {\n    const useStyles = makeStyles((theme) => ({\n        root: {\n          width: \"100%\",\n        },\n        heading: {\n          fontSize: theme.typography.pxToRem(15),\n          fontWeight: theme.typography.fontWeightRegular,\n        },\n      }));\n      const classes = useStyles();\n    return (\n        <div>\n             <Accordion>\n            <AccordionSummary\n              expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel1a-content\"\n              id=\"panel1a-header\"\n            >\n              <Typography className={classes.heading}>Landsat</Typography>\n            </AccordionSummary>\n            <AccordionDetails>\n              {/* <LayerAnalyticsVisualise showLayer=\"modisndvi\" /> */}\n            </AccordionDetails>\n          </Accordion>\n          <Accordion>\n            <AccordionSummary\n              expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel2a-content\"\n              id=\"panel2a-header\"\n            >\n              <Typography className={classes.heading}>Sentinel</Typography>\n            </AccordionSummary>\n            <AccordionDetails>\n              {/* <LayerAnalyticsVisualise showLayer=\"modisndvi\" /> */}\n            </AccordionDetails>\n          </Accordion>\n          <Accordion>\n            <AccordionSummary\n              expandIcon={<ExpandMoreIcon />}\n              aria-controls=\"panel3a-content\"\n              id=\"panel3a-header\"\n            >\n              <Typography className={classes.heading}>\n                VIIRS Nightlight\n              </Typography>\n            </AccordionSummary>\n            <AccordionDetails>\n              {/* <LayerAnalyticsVisualise showLayer=\"modisndvi\" /> */}\n            </AccordionDetails>\n          </Accordion>\n        </div>\n    )\n}\n\nexport default SatelliteVisualise\n","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/features/maps/mapStateSlice.js",[],"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/WeatherAnalysis.js",["156","157","158","159"],"import ChangeDates from \"./ChangeDates\";\nimport AnalyticsDates from \"./AnalyticsDates\";\nimport RGBDropDown from \"./RGBDropDown\";\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { setAnalyticsDetails } from \"../features/layers/layerslice\";\nimport { useSelector } from \"react-redux\";\nimport { selectDataSet } from \"../features/layers/layerslice\";\nimport { setAnalyticsVisual } from \"../features/layers/layervisualiseslice\";\nimport styled from \"styled-components\";\nimport { analyticoper } from \"../config\";\n\nconst WeatherAnalysis = () => {\n  console.log(analyticoper)\n  const [analytics, setanalytics] = useState(\"Change\");\n  const dispatch = useDispatch();\n  const dispatch1 = useDispatch();\n\n  const state = useSelector(selectDataSet);\n  const [data, setData] = useState(\"insat_rainfall\");\n  console.log(state)\n  const setOperation = (e) => {\n    dispatch(setAnalyticsDetails({ ...state, operation: e }));\n    dispatch(\n      setAnalyticsVisual({\n        show: false,\n      })\n    );\n  };\n\n  const setMask = (e) => {\n    dispatch(setAnalyticsDetails({ ...state, mask: e }));\n    dispatch(\n      setAnalyticsVisual({\n        show: false,\n      })\n    );\n  };\n\n  const setDataset = (e) => {\n    dispatch(setAnalyticsDetails({ ...state, dataset: e }));\n    dispatch(\n      setAnalyticsVisual({\n        show: false,\n      })\n    );\n  };\n\n  useEffect(() => {\n    dispatch(\n      setAnalyticsDetails({\n        ...state,\n        dataset: document.getElementById(\"data\").value,\n      })\n    );\n  }, []);\n\n  return (\n    <VEGANALYSIS>\n      <div className=\"LayerTree\">\n        <p className=\"heads\">Dataset</p>\n      </div>\n      <select\n        id=\"data\"\n        className=\"SelectMenu\"\n        onChange={(event) => setDataset(event.target.value)}\n      >\n        <option value=\"insat_rain\">INSAT Rainfall</option>\n        <option value=\"lst\">MODIS LST</option>\n        <option value=\"aod\">MODIS AOD</option>\n      </select>\n      <div className=\"LayerTree\">\n        <p>Operations</p>\n      </div>\n\n      <select\n        className=\"SelectMenu\"\n        onChange={(event) => {\n          event.target.value === \"difference\"\n            ? setanalytics(\"Change\")\n            : event.target.value === \"rgb\"\n            ? setanalytics(\"RGB\")\n            : setanalytics(\"Anaytics\");\n\n          setOperation(event.target.value);\n        }}\n      >\n        {analyticoper\n          .filter((operations) => operations.state === state.dataset)[0]\n          .operations.map((ops) => (\n            <option value={ops.value}>{ops.text}</option>\n          ))}\n      </select>\n      <div className=\"LayerTree\">\n        <p>Dates</p>\n        {/* <Todo /> */}\n      </div>\n      {analytics === \"Change\" ? (\n        <ChangeDates />\n      ) : analytics === \"Anaytics\" ? (\n        <AnalyticsDates />\n      ) : (\n        <RGBDropDown />\n      )}\n      {state.dataset === \"modis_ndvi\" && (\n        <>\n          <div className=\"LayerTree\">\n            <p>Mask</p>\n          </div>\n          <select\n            className=\"SelectMenu\"\n            onChange={(event) => setMask(event.target.value)}\n          >\n            <option value=\"none\">None</option>\n            <option value=\"forest\">Forest</option>\n            <option value=\"agriculture\">Agriculture</option>\n          </select>\n        </>\n      )}\n    </VEGANALYSIS>\n  );\n};\n\nexport default WeatherAnalysis;\n\nconst VEGANALYSIS = styled.div`\n  font-family: \"Poppins\", sans-serif;\n  /* padding-right: 15px;\n    padding-left: 15px;  */\n  background-color: #fff;\n  font-size: 14px;\n  margin-bottom: 15px;\n  padding-bottom: 15px;\n  .heads {\n    box-shadow: 0px 2px 1px -1px rgb(0 0 0 / 20%),\n      0px 1px 1px 0px rgb(0 0 0 / 14%), 0px 1px 3px 0px rgb(0 0 0 / 12%);\n    border-bottom: black;\n  }\n  .SelectMenu {\n    border: 1px solid #555;\n    border-radius: 4px;\n    box-shadow: none;\n    font-size: 12px;\n    font-weight: 400;\n    /* width: 5000px; */\n    display: block;\n    width: 70%;\n    height: 34px;\n    padding: 6px 12px;\n    font-size: 14px;\n    line-height: 1.42857143;\n    color: #555;\n    background-color: #fff;\n    background-image: none;\n    margin-top: 10px;\n    margin-bottom: 10px;\n    margin-left: 40px;\n    margin-right: 10px;\n  }\n`;\n","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/WaterAnalysis.js",["160","161","162","163"],"import ChangeDates from \"./ChangeDates\";\nimport AnalyticsDates from \"./AnalyticsDates\";\nimport RGBDropDown from \"./RGBDropDown\";\nimport React, { useState, useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { setAnalyticsDetails } from \"../features/layers/layerslice\";\nimport { useSelector } from \"react-redux\";\nimport { selectDataSet } from \"../features/layers/layerslice\";\nimport { setAnalyticsVisual } from \"../features/layers/layervisualiseslice\";\nimport styled from \"styled-components\";\nimport { analyticoper } from \"../config\";\n\nconst WaterAnalysis = () => {\n  console.log(analyticoper)\n  const [analytics, setanalytics] = useState(\"Change\");\n  const dispatch = useDispatch();\n  const dispatch1 = useDispatch();\n\n  const state = useSelector(selectDataSet);\n  const [data, setData] = useState(\"insat_rainfall\");\n  console.log(state)\n  const setOperation = (e) => {\n    dispatch(setAnalyticsDetails({ ...state, operation: e }));\n    dispatch(\n      setAnalyticsVisual({\n        show: false,\n      })\n    );\n  };\n\n  const setMask = (e) => {\n    dispatch(setAnalyticsDetails({ ...state, mask: e }));\n    dispatch(\n      setAnalyticsVisual({\n        show: false,\n      })\n    );\n  };\n\n  const setDataset = (e) => {\n    dispatch(setAnalyticsDetails({ ...state, dataset: e }));\n    dispatch(\n      setAnalyticsVisual({\n        show: false,\n      })\n    );\n  };\n\n  useEffect(() => {\n    dispatch(\n      setAnalyticsDetails({\n        ...state,\n        dataset: document.getElementById(\"data\").value,\n      })\n    );\n  }, []);\n\n  return (\n    <VEGANALYSIS>\n      <div className=\"LayerTree\">\n        <p className=\"heads\">Dataset</p>\n      </div>\n      <select\n        id=\"data\"\n        className=\"SelectMenu\"\n        onChange={(event) => setDataset(event.target.value)}\n      >\n        <option value=\"insat_rain\">INSAT Rainfall</option>\n        <option value=\"lst\">MODIS LST</option>\n        <option value=\"aod\">MODIS AOD</option>\n      </select>\n      <div className=\"LayerTree\">\n        <p>Operations</p>\n      </div>\n\n      <select\n        className=\"SelectMenu\"\n        onChange={(event) => {\n          event.target.value === \"difference\"\n            ? setanalytics(\"Change\")\n            : event.target.value === \"rgb\"\n            ? setanalytics(\"RGB\")\n            : setanalytics(\"Anaytics\");\n\n          setOperation(event.target.value);\n        }}\n      >\n        {analyticoper\n          .filter((operations) => operations.state === state.dataset)[0]\n          .operations.map((ops) => (\n            <option value={ops.value}>{ops.text}</option>\n          ))}\n      </select>\n      <div className=\"LayerTree\">\n        <p>Dates</p>\n        {/* <Todo /> */}\n      </div>\n      {analytics === \"Change\" ? (\n        <ChangeDates />\n      ) : analytics === \"Anaytics\" ? (\n        <AnalyticsDates />\n      ) : (\n        <RGBDropDown />\n      )}\n      {state.dataset === \"modis_ndvi\" && (\n        <>\n          <div className=\"LayerTree\">\n            <p>Mask</p>\n          </div>\n          <select\n            className=\"SelectMenu\"\n            onChange={(event) => setMask(event.target.value)}\n          >\n            <option value=\"none\">None</option>\n            <option value=\"forest\">Forest</option>\n            <option value=\"agriculture\">Agriculture</option>\n          </select>\n        </>\n      )}\n    </VEGANALYSIS>\n  );\n};\n\nexport default WaterAnalysis;\n\nconst VEGANALYSIS = styled.div`\n  font-family: \"Poppins\", sans-serif;\n  /* padding-right: 15px;\n    padding-left: 15px;  */\n  background-color: #fff;\n  font-size: 14px;\n  margin-bottom: 15px;\n  padding-bottom: 15px;\n  .heads {\n    box-shadow: 0px 2px 1px -1px rgb(0 0 0 / 20%),\n      0px 1px 1px 0px rgb(0 0 0 / 14%), 0px 1px 3px 0px rgb(0 0 0 / 12%);\n    border-bottom: black;\n  }\n  .SelectMenu {\n    border: 1px solid #555;\n    border-radius: 4px;\n    box-shadow: none;\n    font-size: 12px;\n    font-weight: 400;\n    /* width: 5000px; */\n    display: block;\n    width: 70%;\n    height: 34px;\n    padding: 6px 12px;\n    font-size: 14px;\n    line-height: 1.42857143;\n    color: #555;\n    background-color: #fff;\n    background-image: none;\n    margin-top: 10px;\n    margin-bottom: 10px;\n    margin-left: 40px;\n    margin-right: 10px;\n  }\n`;\n",{"ruleId":"164","replacedBy":"165"},{"ruleId":"166","replacedBy":"167"},{"ruleId":"168","severity":1,"message":"169","line":20,"column":9,"nodeType":"170","messageId":"171","endLine":20,"endColumn":12},{"ruleId":"168","severity":1,"message":"172","line":42,"column":9,"nodeType":"170","messageId":"171","endLine":42,"endColumn":16},{"ruleId":"168","severity":1,"message":"173","line":6,"column":9,"nodeType":"170","messageId":"171","endLine":6,"endColumn":28},{"ruleId":"168","severity":1,"message":"174","line":8,"column":7,"nodeType":"170","messageId":"171","endLine":8,"endColumn":13},{"ruleId":"175","severity":1,"message":"176","line":67,"column":4,"nodeType":"177","endLine":67,"endColumn":6,"suggestions":"178"},{"ruleId":"175","severity":1,"message":"179","line":46,"column":6,"nodeType":"177","endLine":46,"endColumn":8,"suggestions":"180"},{"ruleId":"175","severity":1,"message":"176","line":58,"column":6,"nodeType":"177","endLine":58,"endColumn":8,"suggestions":"181"},{"ruleId":"175","severity":1,"message":"176","line":64,"column":6,"nodeType":"177","endLine":64,"endColumn":21,"suggestions":"182"},{"ruleId":"168","severity":1,"message":"183","line":30,"column":9,"nodeType":"170","messageId":"171","endLine":30,"endColumn":10},{"ruleId":"175","severity":1,"message":"176","line":84,"column":6,"nodeType":"177","endLine":84,"endColumn":21,"suggestions":"184"},{"ruleId":"168","severity":1,"message":"185","line":15,"column":9,"nodeType":"170","messageId":"171","endLine":15,"endColumn":16},{"ruleId":"175","severity":1,"message":"176","line":65,"column":6,"nodeType":"177","endLine":65,"endColumn":8,"suggestions":"186"},{"ruleId":"175","severity":1,"message":"176","line":71,"column":6,"nodeType":"177","endLine":71,"endColumn":21,"suggestions":"187"},{"ruleId":"188","severity":1,"message":"189","line":11,"column":22,"nodeType":"190","messageId":"191","endLine":11,"endColumn":24},{"ruleId":"175","severity":1,"message":"176","line":65,"column":6,"nodeType":"177","endLine":65,"endColumn":21,"suggestions":"192"},{"ruleId":"175","severity":1,"message":"193","line":74,"column":6,"nodeType":"177","endLine":74,"endColumn":8,"suggestions":"194"},{"ruleId":"175","severity":1,"message":"176","line":61,"column":6,"nodeType":"177","endLine":61,"endColumn":21,"suggestions":"195"},{"ruleId":"175","severity":1,"message":"193","line":69,"column":6,"nodeType":"177","endLine":69,"endColumn":8,"suggestions":"196"},{"ruleId":"175","severity":1,"message":"176","line":65,"column":6,"nodeType":"177","endLine":65,"endColumn":21,"suggestions":"197"},{"ruleId":"175","severity":1,"message":"193","line":78,"column":6,"nodeType":"177","endLine":78,"endColumn":8,"suggestions":"198"},{"ruleId":"168","severity":1,"message":"199","line":8,"column":8,"nodeType":"170","messageId":"171","endLine":8,"endColumn":31},{"ruleId":"168","severity":1,"message":"200","line":9,"column":8,"nodeType":"170","messageId":"171","endLine":9,"endColumn":26},{"ruleId":"168","severity":1,"message":"201","line":10,"column":8,"nodeType":"170","messageId":"171","endLine":10,"endColumn":20},{"ruleId":"168","severity":1,"message":"202","line":17,"column":9,"nodeType":"170","messageId":"171","endLine":17,"endColumn":18},{"ruleId":"168","severity":1,"message":"203","line":20,"column":10,"nodeType":"170","messageId":"171","endLine":20,"endColumn":14},{"ruleId":"168","severity":1,"message":"204","line":20,"column":16,"nodeType":"170","messageId":"171","endLine":20,"endColumn":23},{"ruleId":"175","severity":1,"message":"179","line":56,"column":6,"nodeType":"177","endLine":56,"endColumn":8,"suggestions":"205"},{"ruleId":"168","severity":1,"message":"202","line":17,"column":9,"nodeType":"170","messageId":"171","endLine":17,"endColumn":18},{"ruleId":"168","severity":1,"message":"203","line":20,"column":10,"nodeType":"170","messageId":"171","endLine":20,"endColumn":14},{"ruleId":"168","severity":1,"message":"204","line":20,"column":16,"nodeType":"170","messageId":"171","endLine":20,"endColumn":23},{"ruleId":"175","severity":1,"message":"179","line":56,"column":6,"nodeType":"177","endLine":56,"endColumn":8,"suggestions":"206"},"no-native-reassign",["207"],"no-negated-in-lhs",["208"],"no-unused-vars","'map' is assigned a value but never used.","Identifier","unusedVar","'classes' is assigned a value but never used.","'setAnalyticsDetails' is defined but never used.","'arrays' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchDates'. Either include it or remove the dependency array.","ArrayExpression",["209"],"React Hook useEffect has missing dependencies: 'dispatch' and 'state'. Either include them or remove the dependency array.",["210"],["211"],["212"],"'t' is assigned a value but never used.",["213"],"'setDate' is assigned a value but never used.",["214"],["215"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside",["216"],"React Hook useEffect has missing dependencies: 'dispatch', 'fetchDates', and 'state'. Either include them or remove the dependency array.",["217"],["218"],["219"],["220"],["221"],"'LayerAnalyticsVisualise' is defined but never used.","'VegetationAnalysis' is defined but never used.","'BaseSwitcher' is defined but never used.","'dispatch1' is assigned a value but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.",["222"],["223"],"no-global-assign","no-unsafe-negation",{"desc":"224","fix":"225"},{"desc":"226","fix":"227"},{"desc":"224","fix":"228"},{"desc":"229","fix":"230"},{"desc":"229","fix":"231"},{"desc":"224","fix":"232"},{"desc":"229","fix":"233"},{"desc":"229","fix":"234"},{"desc":"235","fix":"236"},{"desc":"229","fix":"237"},{"desc":"235","fix":"238"},{"desc":"229","fix":"239"},{"desc":"235","fix":"240"},{"desc":"226","fix":"241"},{"desc":"226","fix":"242"},"Update the dependencies array to be: [fetchDates]",{"range":"243","text":"244"},"Update the dependencies array to be: [dispatch, state]",{"range":"245","text":"246"},{"range":"247","text":"244"},"Update the dependencies array to be: [fetchDates, state.dataset]",{"range":"248","text":"249"},{"range":"250","text":"249"},{"range":"251","text":"244"},{"range":"252","text":"249"},{"range":"253","text":"249"},"Update the dependencies array to be: [dispatch, fetchDates, state]",{"range":"254","text":"255"},{"range":"256","text":"249"},{"range":"257","text":"255"},{"range":"258","text":"249"},{"range":"259","text":"255"},{"range":"260","text":"246"},{"range":"261","text":"246"},[1742,1744],"[fetchDates]",[1569,1571],"[dispatch, state]",[1936,1938],[2048,2063],"[fetchDates, state.dataset]",[2455,2470],[2183,2185],[2295,2310],[1721,1736],[1941,1943],"[dispatch, fetchDates, state]",[1772,1787],[1954,1956],[1690,1705],[1940,1942],[1544,1546],[1542,1544]]
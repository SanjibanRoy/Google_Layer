[{"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/index.js":"1","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/reportWebVitals.js":"2","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/App.js":"3","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/Legend.js":"4","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/InfoBox.js":"5","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/config.js":"6","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/Map.js":"7","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/SideBarWrapper.js":"8","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/Info.js":"9","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/LayerTree.js":"10","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/SidePanel.js":"11","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/Layer.js":"12","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/LayerAnalyticsVisualise.js":"13","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/VegetationAnalysis.js":"14","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/ChangeDates.js":"15","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/AnalyticsDates.js":"16","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/RGBDropDown.js":"17","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/features/layers/layerslice.js":"18","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/app/store.js":"19","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/features/layers/layervisualiseslice.js":"20","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/features/layers/overlaylayerslice.js":"21","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/BaseSwitcher.js":"22","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/features/layers/baselayerslice.js":"23","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/WeatherVisualise.js":"24","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/VegetationVisualise.js":"25","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/WaterVisualise.js":"26","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/SatelliteVisualise.js":"27","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/features/maps/mapStateSlice.js":"28"},{"size":620,"mtime":1621196132286,"results":"29","hashOfConfig":"30"},{"size":362,"mtime":1620367994223,"results":"31","hashOfConfig":"30"},{"size":866,"mtime":1621590633182,"results":"32","hashOfConfig":"30"},{"size":440,"mtime":1621363484171,"results":"33","hashOfConfig":"30"},{"size":801,"mtime":1621425536019,"results":"34","hashOfConfig":"30"},{"size":3717,"mtime":1621425450345,"results":"35","hashOfConfig":"30"},{"size":2905,"mtime":1621591332916,"results":"36","hashOfConfig":"30"},{"size":7748,"mtime":1621403717652,"results":"37","hashOfConfig":"30"},{"size":900,"mtime":1620367994206,"results":"38","hashOfConfig":"30"},{"size":829,"mtime":1621363904861,"results":"39","hashOfConfig":"30"},{"size":1777,"mtime":1620849792381,"results":"40","hashOfConfig":"30"},{"size":945,"mtime":1621426173555,"results":"41","hashOfConfig":"30"},{"size":2189,"mtime":1621578560296,"results":"42","hashOfConfig":"30"},{"size":3273,"mtime":1621539262253,"results":"43","hashOfConfig":"30"},{"size":2512,"mtime":1621540102344,"results":"44","hashOfConfig":"30"},{"size":3000,"mtime":1621540058768,"results":"45","hashOfConfig":"30"},{"size":2099,"mtime":1621405338645,"results":"46","hashOfConfig":"30"},{"size":838,"mtime":1621539001559,"results":"47","hashOfConfig":"30"},{"size":697,"mtime":1621418143207,"results":"48","hashOfConfig":"30"},{"size":599,"mtime":1621583494231,"results":"49","hashOfConfig":"30"},{"size":531,"mtime":1621367651028,"results":"50","hashOfConfig":"30"},{"size":1490,"mtime":1621363537131,"results":"51","hashOfConfig":"30"},{"size":600,"mtime":1621353689351,"results":"52","hashOfConfig":"30"},{"size":2397,"mtime":1621541611899,"results":"53","hashOfConfig":"30"},{"size":3373,"mtime":1621578255763,"results":"54","hashOfConfig":"30"},{"size":2280,"mtime":1621541543243,"results":"55","hashOfConfig":"30"},{"size":2365,"mtime":1621541576098,"results":"56","hashOfConfig":"30"},{"size":567,"mtime":1621425503120,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"r63pth",{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"60"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"86","messages":"87","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"60"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"60"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"60"},{"filePath":"95","messages":"96","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"99","messages":"100","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},{"filePath":"107","messages":"108","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"60"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"114","messages":"115","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"116","messages":"117","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"118","messages":"119","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"60"},"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/index.js",[],["120","121"],"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/reportWebVitals.js",[],"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/App.js",[],"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/Legend.js",[],"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/InfoBox.js",[],"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/config.js",[],"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/Map.js",["122","123"],"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/SideBarWrapper.js",["124"],"//import necessary lib\nimport React from \"react\";\nimport SidePanel from \"./SidePanel\";\nimport LayerTree from \"./LayerTree\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport VegetationAnalysis from \"./VegetationAnalysis\";\nimport BaseSwitcher from \"./BaseSwitcher\";\nimport WeatherVisualise from \"./WeatherVisualise\";\nimport VegetationVisualise from \"./VegetationVisualise\";\nimport WaterVisualise from \"./WaterVisualise\";\nimport SatelliteVisualise from \"./SatelliteVisualise\";\n// import CreatableSelect from 'react-select/creatable';\n//end of import\n\nconst SideBarWrapper = ({\n  //   analyticsLayers,\n  changeVisibility,\n  visibility,\n}) => {\n  //Tab view start\n  const [value, setValue] = React.useState(0);\n  const handleChange = (event, newValue) => {\n    setValue(newValue);\n  };\n  //tab view ends\n\n  //accordion start\n  const useStyles = makeStyles((theme) => ({\n    root: {\n      width: \"100%\",\n    },\n    heading: {\n      fontSize: theme.typography.pxToRem(15),\n      fontWeight: theme.typography.fontWeightRegular,\n    },\n  }));\n  const classes = useStyles();\n  // accordion ends\n\n  //hind show sideBarwarapper start\n  var data_filter = visibility.filter((element) => element.show);\n  var type = data_filter[0].id;\n  // hide show sideBarWrapper ends\n\n  // ******************************** fetch date data from database Start*******************************\n\n  // declare list of array *PS: array used in select in list\n\n  //main function *API Key Required\n  // function getdates(name, value) {\n  //     const formData = new FormData();\n  //     formData.append('database', name);\n  //     fetch(\n  //         'https://mobileapp.nesdr.gov.in/analytics_api/modis_ndvi.php?key=mgy1exz0n8mXQXi8NrOq24DDvmLrZ16a',\n  //         {\n  //             method: 'POST',\n  //             body: formData,\n  //         }\n  //     )\n  //         .then((response) => response.json())\n  //         .then((result) => {\n  //             //console.log('Success:', result);\n  //             let datafromapi = result.map(data => {\n  //                 arrays[value].push({\n  //                     value: data.date,\n  //                     label: data.date,\n  //                     rating: data.date\n  //                 })\n  //             })\n  //         })\n  //         .catch((error) => {\n  //             console.error('Error:', error);\n  //         });\n  // }\n\n  // setTimeout(\n  //     function () {\n  //        // console.log(arrays.ndvidates[0].value)\n  //     }\n  //         .bind(this),\n  //     2000\n  // );\n  // get date function *PS: put database name and array name used in select list\n  // getdates('modis_ndvi', 'ndvidates')\n  // getdates('soil_date', 'soil_moisture_dates')\n  // getdates('et', 'et_dates')\n\n  // ******************************** fatch date data from database End here*******************************\n\n  //return view\n  return (\n    <div className=\"SideBarWrapper\">\n      {/* load of side panel start */}\n      <SidePanel changeVisibility={changeVisibility} />\n      {/* load of side panel start */}\n\n      {/* *************Layer Tab start*************** */}\n\n      <div className={type === \"Layer\" ? \"LayerContainer\" : \"hidden\"}>\n        {/* List of map layers */}\n        <Paper square>\n          <Tabs\n            value={value}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            onChange={handleChange}\n            aria-label=\"disabled tabs example\"\n          >\n            <Tab label=\"Base Layers\" />\n            <Tab label=\"Overlays\" />\n          </Tabs>\n        </Paper>\n        <div className={value === 0 ? \" \" : \"hidden\"}>\n          <BaseSwitcher />\n        </div>\n        <div className={value === 1 ? \" \" : \"hidden\"}>\n          <LayerTree category=\"Administrator\" />\n          <LayerTree category=\"Land Use/Land Cover\" />\n          <LayerTree category=\"Census\" />\n        </div>\n      </div>\n      {/* *************Layer Tab end*************** */}\n\n      {/* *************Vegetation Tab start*************** */}\n      <div className={type === \"Vegetation\" ? \"LayerContainer\" : \"hidden\"}>\n        {/* Tab View */}\n        <Paper square>\n          <Tabs\n            value={value}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            onChange={handleChange}\n            aria-label=\"disabled tabs example\"\n          >\n            <Tab label=\"Visualization\" />\n            <Tab label=\"Analysis\" />\n          </Tabs>\n        </Paper>\n        {/* Tab1 Data */}\n        <div className={value === 0 ? \" \" : \"hidden\"}>\n          <VegetationVisualise />\n        </div>\n        {/* Tab2 Data */}\n        <div className={value === 1 ? \" \" : \"hidden\"}>\n          <VegetationAnalysis />\n        </div>\n      </div>\n      {/* *************Vegetation Tab end*************** */}\n\n      {/* *************Weather Tab start*************** */}\n      <div className={type === \"Weather\" ? \"LayerContainer\" : \"hidden\"}>\n        <Paper square>\n          <Tabs\n            value={value}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            onChange={handleChange}\n            aria-label=\"disabled tabs example\"\n          >\n            <Tab label=\"Visualization\" />\n            <Tab label=\"Analysis\" />\n          </Tabs>\n        </Paper>\n        {/* Tab1 Data */}\n        <div className={value === 0 ? \" \" : \"hidden\"}>\n          <WeatherVisualise />\n        </div>\n        {/* Tab2 Data */}\n        <div className={value === 1 ? \" \" : \"hidden\"}>\n          <VegetationAnalysis />\n        </div>\n      </div>\n      {/* *************Weather Tab end*************** */}\n\n      {/* *************Water Resources Tab start*************** */}\n      <div className={type === \"Water_Resources\" ? \"LayerContainer\" : \"hidden\"}>\n        <Paper square>\n          <Tabs\n            value={value}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            onChange={handleChange}\n            aria-label=\"disabled tabs example\"\n          >\n            <Tab label=\"Visualization\" />\n            <Tab label=\"Analysis\" />\n          </Tabs>\n        </Paper>\n        {/* Tab1 Data */}\n        <div className={value === 0 ? \" \" : \"hidden\"}>\n          <WaterVisualise />\n        </div>\n        {/* Tab2 Data */}\n        <div className={value === 1 ? \" \" : \"hidden\"}>\n          <VegetationAnalysis />\n        </div>\n      </div>\n      {/* *************Water Resources Tab end*************** */}\n\n      {/* *************Satellite Imagery Tab start*************** */}\n      <div\n        className={type === \"Satellite_Imagery\" ? \"LayerContainer\" : \"hidden\"}\n      >\n        <Paper square>\n          <Tabs\n            value={value}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            onChange={handleChange}\n            aria-label=\"disabled tabs example\"\n          >\n            <Tab label=\"Visualization\" />\n            <Tab label=\"Analysis\" />\n          </Tabs>\n        </Paper>\n        {/* Tab1 Data */}\n        <div className={value === 0 ? \" \" : \"hidden\"}>\n          <SatelliteVisualise />\n        </div>\n        {/* Tab2 Data */}\n        <div className={value === 1 ? \" \" : \"hidden\"}>\n          <VegetationAnalysis />\n        </div>\n      </div>\n      {/* *************Satellite Imagery Tab end*************** */}\n\n      {/* *************Vedas Services Tab start*************** */}\n      <div className={type === \"Vedas_Services\" ? \"LayerContainer\" : \"hidden\"}>\n        <LayerTree category=\"Admin\" state=\"test\" />\n        <LayerTree category=\"Natural Resource\" />\n      </div>\n      {/* *************Vedas Services Tab start*************** */}\n    </div>\n  );\n};\n\nexport default SideBarWrapper;\n","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/Info.js",[],"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/LayerTree.js",[],"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/SidePanel.js",[],"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/Layer.js",[],"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/LayerAnalyticsVisualise.js",["125","126","127"],"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/VegetationAnalysis.js",["128","129","130"],"import ChangeDates from \"./ChangeDates\";\nimport AnalyticsDates from \"./AnalyticsDates\";\nimport RGBDropDown from \"./RGBDropDown\";\nimport React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { setAnalyticsDetails } from \"../features/layers/layerslice\";\nimport {useSelector} from 'react-redux';\nimport {selectDataSet} from '../features/layers/layerslice'\nimport { setAnalyticsVisual } from \"../features/layers/layervisualiseslice\";\n\n// import todos from \"../redux/reducers/todos\";\n// import Todo from \"./Todo\"\nconst VegetationAnalysis = () => {\n  const [analytics, setanalytics] = useState(\"Change\");\n  const dispatch = useDispatch();\n  const dispatch1 = useDispatch();\n\n  const state = useSelector(selectDataSet)\n  const [data,setData] = useState(\"modis_ndvi\")\n  const setOperation = (e) => {\n    // console.log(e)\n    dispatch(\n      setAnalyticsDetails({...state,\n        operation: e,\n      })\n    );\n    dispatch(\n      setAnalyticsVisual({\n        show: false,\n      })\n    );\n  };\n\n  const setMask = (e) => {\n    console.log(e)\n    dispatch(\n      setAnalyticsDetails({...state,\n        mask: e,\n      })\n    );\n    dispatch(\n      setAnalyticsVisual({\n        show: false,\n      })\n    );\n  };\n\n  const setDataset = (e) => {\n    dispatch(\n      setAnalyticsDetails({...state,\n        dataset: e,\n      })\n    );\n    dispatch(\n      setAnalyticsVisual({\n        show: false,\n      })\n    );\n  };\n  return (\n    <div>\n      <div className=\"LayerTree\">\n        <p>Dataset</p>\n      </div>\n      <select onChange={(event) => setDataset(event.target.value)\n      }>\n        <option value=\"modis_ndvi\">Modis NDVI</option>\n        <option value=\"et\">MODIS ET</option>\n        <option value=\"soil_date\">Soil Moisture (SMAP)</option>\n      </select>\n      <div className=\"LayerTree\">\n        <p>Operations</p>\n      </div>\n      <select\n        onChange={(event) => {\n          event.target.value === \"Difference\"\n            ? setanalytics(\"Change\")\n            : event.target.value === \"rgb\"\n            ? setanalytics(\"RGB\")\n            : setanalytics(\"Anaytics\");\n\n            setOperation(event.target.value);        }}\n      >\n        <option value=\"Anomaly\">Anomaly</option>\n        <option value=\"Difference\">Difference</option>\n        <option value=\"Maximum\">Maximum</option>\n        <option value=\"Minimum\">Minimum</option>\n        <option value=\"sd\">Standard Deviation</option>\n        <option value=\"trend\">Trend</option>\n        <option value=\"vci\">Vegetation Condition Analysis(VCI)</option>\n        <option value=\"threshold\">Long Term Threshold</option>\n        <option value=\"rgb\">RGB</option>\n      </select>\n      <div className=\"LayerTree\">\n        <p>Dates</p>\n        {/* <Todo /> */}\n\n      </div>\n      {analytics === \"Change\" ? (\n        <ChangeDates />\n      ) : analytics === \"Anaytics\" ? (\n        <AnalyticsDates />\n      ) : (\n        <RGBDropDown />\n      )\n    }\n\n      <div className=\"LayerTree\">\n        <p>Mask</p>\n      </div>\n      <select onChange={(event) => setMask(event.target.value)}>\n        <option value=\"none\">None</option>\n        <option value=\"forest\">Forest</option>\n        <option value=\"agriculture\">Agriculture</option>\n      </select>\n    </div>\n  );\n};\n\nexport default VegetationAnalysis;\n","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/ChangeDates.js",["131"],"import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { selectDataSet } from \"../features/layers/layerslice\";\nimport { useDispatch } from \"react-redux\";\nimport { setAnalyticsDetails } from \"../features/layers/layerslice\";\nimport { setAnalyticsVisual } from \"../features/layers/layervisualiseslice\";\nimport { useState, useEffect } from \"react\";\nimport CircularProgress from '@material-ui/core/CircularProgress';\n\n\n\nfunction ChangeDates() {\n  const dispatch = useDispatch();\n  const dispatch1 = useDispatch();\n  const state = useSelector(selectDataSet);\n\n  const setDate = (e) => {\n    dispatch(setAnalyticsDetails({ ...state, dates: e, show: true }));\n    dispatch1(setAnalyticsVisual({ show: false }));\n  };\n\n  const [date, setdate] = useState({\n    dates: [],\n    isFetching: false,\n  });\n\n  useEffect(() => {\n    console.log(\"inside Effect\");\n    const fetchDates = async () => {\n      try {\n        setdate({ dates: [], isFetching: false });\n        const formData = new FormData();\n\n        formData.append(\"database\", state.dataset);\n        formData.append(\"key\", \"mgy1exz0n8mXQXi8NrOq24DDvmLrZ16a\");\n        // console.log(formData);\n        fetch(\"https://mobileapp.nesdr.gov.in/analytics_api/modis_ndvi.php\", {\n          method: \"POST\",\n          body: formData,\n        })\n          .then((response) => response.json())\n          .then((result) => {\n            // console.log(result);\n            setdate({ dates: result, isFetching: false });\n          })\n          .catch((error) => {\n            console.error(\"Error:\", error);\n          });\n        // console.log(response);\n        setdate({ ...date, isFetching: true });\n      } catch (exception) {\n        console.log(exception);\n        setdate({ dates: date.dates, isFetching: false });\n      }\n    };\n    fetchDates();\n  }, []);\n\n  return (\n    <div>\n      {date.isFetching ? (\n        <CircularProgress />\n      ) : (\n        <div>\n          <select onChange={(event) => setDate(event.target.value)}>\n            {date.dates.map((task, index) => (\n              <option key={index} value={task.date}>\n                {task.date}\n              </option>\n            ))}\n          </select>\n          <select onChange={(event) => setDate(event.target.value)}>\n            {date.dates.map((task, index) => (\n              <option key={index} value={task.date}>\n                {task.date}\n              </option>\n            ))}\n          </select>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default ChangeDates;\n","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/AnalyticsDates.js",["132"],"import React from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { setAnalyticsDetails } from \"../features/layers/layerslice\";\nimport { useSelector } from \"react-redux\";\nimport { selectDataSet } from \"../features/layers/layerslice\";\nimport { setAnalyticsVisual } from \"../features/layers/layervisualiseslice\";\nimport { useState, useEffect } from \"react\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\n\nvar arrays = [\n  {\n    ndvidates: [200, 300],\n    soil_moisture_dates: [200, 300],\n    et_dates: [200, 300],\n  },\n];\n\n\nfunction AnalyticsDates() {\n  const dispatch = useDispatch();\n  const dispatch1 = useDispatch();\n  const state = useSelector(selectDataSet);\n  console.log(state);\n  const setDate = (e) => {\n    dispatch(setAnalyticsDetails({ ...state, dates: e, show: true }));\n    dispatch1(setAnalyticsVisual({ show: false }));\n  };\n\n  const [date, setdate] = useState({\n    dates: [],\n    isFetching: false,\n  });\n\n  \n  // useEffect(() => {\n  //   console.log(\"Here\")\n  //   getdates('modis_ndvi', 'ndvidates')\n  //   setdate(true)\n  //   console.log(date)\n  //   });\n\n\n\n\n\n  const fetchDates = async () => {\n    try {\n      setdate({ dates: [], isFetching: false });\n      const formData = new FormData();\n\n      formData.append(\"database\", state.dataset);\n      formData.append(\"key\", \"mgy1exz0n8mXQXi8NrOq24DDvmLrZ16a\");\n      // console.log(formData);\n      fetch(\"https://mobileapp.nesdr.gov.in/analytics_api/modis_ndvi.php\", {\n        method: \"POST\",\n        body: formData,\n      })\n        .then((response) => response.json())\n        .then((result) => {\n          // console.log(result);\n          setdate({ dates: result, isFetching: false });\n        })\n        .catch((error) => {\n          console.error(\"Error:\", error);\n        });\n      // console.log(response);\n      setdate({ ...date, isFetching: true });\n    } catch (exception) {\n      console.log(exception);\n      setdate({ dates: date.dates, isFetching: false });\n    }\n  };\n\n\n\n\n  useEffect(() => {\n    fetchDates();\n  }, [state.dataset]);\n\n  return (\n    <div>\n      {date.isFetching ? (\n        <CircularProgress />\n      ) : (\n        <div>\n          <select onChange={(event) => setDate(event.target.value)}>\n            {date.dates.map((task, index) => (\n              <option key={index} value={task.date}>\n                {task.date}\n              </option>\n            ))}\n          </select>\n          <select onChange={(event) => setDate(event.target.value)}>\n            {arrays[0].ndvidates.map((task, index) => (\n              <option key={index} value={task}>\n                {task}\n              </option>\n            ))}\n          </select>\n          <select onChange={(event) => setDate(event.target.value)}>\n            {arrays[0].ndvidates.map((task, index) => (\n              <option key={index} value={task}>\n                {task}\n              </option>\n            ))}\n          </select>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default AnalyticsDates;\n","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/RGBDropDown.js",[],"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/features/layers/layerslice.js",[],"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/app/store.js",[],"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/features/layers/layervisualiseslice.js",[],"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/features/layers/overlaylayerslice.js",[],"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/BaseSwitcher.js",[],"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/features/layers/baselayerslice.js",["133"],"import { createSlice } from \"@reduxjs/toolkit\";\nimport { maps } from \"../../config\";\n\nconst initialState = maps;\nconsole.log(initialState);\nconst baseLayerSlice = createSlice({\n  name: \"baselayer\",\n  initialState,\n  reducers: {\n    setBaseDetails: (state, action) => {\n      console.log(action.payload.data);\n      state.map((st) => {\n        st.id === action.payload.data ? (st.show = true) : (st.show = false);\n      });\n    },\n  },\n});\n\nexport const { setBaseDetails } = baseLayerSlice.actions;\n\nexport const selectBaseDataSet = (state) => state.baselayer;\n\nexport default baseLayerSlice.reducer;\n","/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/WeatherVisualise.js",["134","135","136"],"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/VegetationVisualise.js",[],"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/WaterVisualise.js",["137"],"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/components/SatelliteVisualise.js",["138","139","140"],"/media/nilay/New Volume/nesac/nesdr/ReaaactGeoportal/ReactGeoportal/src/features/maps/mapStateSlice.js",[],{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":8,"column":10,"nodeType":"147","messageId":"148","endLine":8,"endColumn":18},{"ruleId":"145","severity":1,"message":"149","line":19,"column":9,"nodeType":"147","messageId":"148","endLine":19,"endColumn":12},{"ruleId":"145","severity":1,"message":"150","line":40,"column":9,"nodeType":"147","messageId":"148","endLine":40,"endColumn":16},{"ruleId":"145","severity":1,"message":"151","line":6,"column":9,"nodeType":"147","messageId":"148","endLine":6,"endColumn":28},{"ruleId":"145","severity":1,"message":"152","line":8,"column":7,"nodeType":"147","messageId":"148","endLine":8,"endColumn":13},{"ruleId":"153","severity":1,"message":"154","line":67,"column":4,"nodeType":"155","endLine":67,"endColumn":6,"suggestions":"156"},{"ruleId":"145","severity":1,"message":"157","line":16,"column":9,"nodeType":"147","messageId":"148","endLine":16,"endColumn":18},{"ruleId":"145","severity":1,"message":"158","line":19,"column":10,"nodeType":"147","messageId":"148","endLine":19,"endColumn":14},{"ruleId":"145","severity":1,"message":"159","line":19,"column":15,"nodeType":"147","messageId":"148","endLine":19,"endColumn":22},{"ruleId":"153","severity":1,"message":"160","line":57,"column":6,"nodeType":"155","endLine":57,"endColumn":8,"suggestions":"161"},{"ruleId":"153","severity":1,"message":"154","line":79,"column":6,"nodeType":"155","endLine":79,"endColumn":21,"suggestions":"162"},{"ruleId":"163","severity":1,"message":"164","line":12,"column":22,"nodeType":"165","messageId":"166","endLine":12,"endColumn":24},{"ruleId":"145","severity":1,"message":"167","line":8,"column":8,"nodeType":"147","messageId":"148","endLine":8,"endColumn":31},{"ruleId":"145","severity":1,"message":"168","line":9,"column":8,"nodeType":"147","messageId":"148","endLine":9,"endColumn":26},{"ruleId":"145","severity":1,"message":"169","line":10,"column":8,"nodeType":"147","messageId":"148","endLine":10,"endColumn":20},{"ruleId":"145","severity":1,"message":"167","line":8,"column":8,"nodeType":"147","messageId":"148","endLine":8,"endColumn":31},{"ruleId":"145","severity":1,"message":"167","line":8,"column":8,"nodeType":"147","messageId":"148","endLine":8,"endColumn":31},{"ruleId":"145","severity":1,"message":"168","line":9,"column":8,"nodeType":"147","messageId":"148","endLine":9,"endColumn":26},{"ruleId":"145","severity":1,"message":"169","line":10,"column":8,"nodeType":"147","messageId":"148","endLine":10,"endColumn":20},"no-native-reassign",["170"],"no-negated-in-lhs",["171"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'map' is assigned a value but never used.","'classes' is assigned a value but never used.","'setAnalyticsDetails' is defined but never used.","'arrays' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'fetchDates'. Either include it or remove the dependency array.","ArrayExpression",["172"],"'dispatch1' is assigned a value but never used.","'data' is assigned a value but never used.","'setData' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'date' and 'state.dataset'. Either include them or remove the dependency array. You can also do a functional update 'setdate(d => ...)' if you only need 'date' in the 'setdate' call.",["173"],["174"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'LayerAnalyticsVisualise' is defined but never used.","'VegetationAnalysis' is defined but never used.","'BaseSwitcher' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"175","fix":"176"},{"desc":"177","fix":"178"},{"desc":"179","fix":"180"},"Update the dependencies array to be: [fetchDates]",{"range":"181","text":"182"},"Update the dependencies array to be: [date, state.dataset]",{"range":"183","text":"184"},"Update the dependencies array to be: [fetchDates, state.dataset]",{"range":"185","text":"186"},[1742,1744],"[fetchDates]",[1818,1820],"[date, state.dataset]",[2035,2050],"[fetchDates, state.dataset]"]
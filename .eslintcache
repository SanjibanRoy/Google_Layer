[{"C:\\Users\\Sanjiban\\ReactGeoportal\\src\\index.js":"1","C:\\Users\\Sanjiban\\ReactGeoportal\\src\\App.js":"2","C:\\Users\\Sanjiban\\ReactGeoportal\\src\\reportWebVitals.js":"3","C:\\Users\\Sanjiban\\ReactGeoportal\\src\\config.js":"4","C:\\Users\\Sanjiban\\ReactGeoportal\\src\\components\\Map.js":"5","C:\\Users\\Sanjiban\\ReactGeoportal\\src\\components\\Legend.js":"6","C:\\Users\\Sanjiban\\ReactGeoportal\\src\\components\\InfoBox.js":"7","C:\\Users\\Sanjiban\\ReactGeoportal\\src\\components\\SideBarWrapper.js":"8","C:\\Users\\Sanjiban\\ReactGeoportal\\src\\components\\Info.js":"9","C:\\Users\\Sanjiban\\ReactGeoportal\\src\\components\\SidePanel.js":"10","C:\\Users\\Sanjiban\\ReactGeoportal\\src\\components\\LayerTree.js":"11","C:\\Users\\Sanjiban\\ReactGeoportal\\src\\components\\AnalyticsLayers.js":"12","C:\\Users\\Sanjiban\\ReactGeoportal\\src\\components\\Layer.js":"13","C:\\Users\\Sanjiban\\ReactGeoportal\\src\\components\\LayerAnalytics.js":"14"},{"size":517,"mtime":1618980517026,"results":"15","hashOfConfig":"16"},{"size":2488,"mtime":1619418374021,"results":"17","hashOfConfig":"16"},{"size":375,"mtime":1618980517042,"results":"18","hashOfConfig":"16"},{"size":4019,"mtime":1619428836309,"results":"19","hashOfConfig":"16"},{"size":4044,"mtime":1619092253150,"results":"20","hashOfConfig":"16"},{"size":292,"mtime":1618980517026,"results":"21","hashOfConfig":"16"},{"size":457,"mtime":1618980517011,"results":"22","hashOfConfig":"16"},{"size":15383,"mtime":1619609165257,"results":"23","hashOfConfig":"16"},{"size":934,"mtime":1618980517011,"results":"24","hashOfConfig":"16"},{"size":1751,"mtime":1619081108496,"results":"25","hashOfConfig":"16"},{"size":732,"mtime":1618980517026,"results":"26","hashOfConfig":"16"},{"size":813,"mtime":1618982248705,"results":"27","hashOfConfig":"16"},{"size":563,"mtime":1618980517026,"results":"28","hashOfConfig":"16"},{"size":727,"mtime":1618980517026,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"5ywy8z",{"filePath":"33","messages":"34","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"32"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":"49"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"C:\\Users\\Sanjiban\\ReactGeoportal\\src\\index.js",[],["62","63"],"C:\\Users\\Sanjiban\\ReactGeoportal\\src\\App.js",["64"],"import { useState } from 'react'\r\nimport Map from './components/Map'\r\nimport InfoBox from './components/InfoBox'\r\nimport Legend from './components/Legend'\r\nimport SideBarWrapper from './components/SideBarWrapper'\r\nimport { layer } from './config'\r\nimport { analytics } from './config'\r\nimport { panelVisibilty } from './config'\r\nimport { maps } from './config'\r\n\r\nimport { PlayCircleFilledWhiteRounded } from '@material-ui/icons'\r\n\r\nconst App = () => {\r\n  const [tasks, setTasks] = useState(layer)\r\n  const [info, setinfo] = useState([])\r\n  const [analytic, setAnalytics] = useState(analytics)\r\n  const [visibility, setVisibility] = useState(panelVisibilty)\r\n  const [mapsvisibility, setmaps] = useState(maps)\r\n\r\n\r\n\r\n  //Update Info box\r\n  const updateInfo = (id) => {\r\n    setinfo(\r\n      [\r\n        tasks.filter((task) => task.show === true).map((t) => {\r\n          return t.layer\r\n        })\r\n      ]\r\n    )\r\n  }\r\n  // add or remove map \r\n  const ChangeMap = (id) => {\r\n    console.log(id)\r\n    setmaps(\r\n      mapsvisibility.map((task) =>\r\n        task.id === id ? { ...task, show: !task.show } : { ...task, show: false }\r\n      )\r\n    )\r\n  }\r\n\r\n\r\n\r\n\r\n  // Add Remove Layer\r\n  const activateAnalytics = (id) => {\r\n    console.log(id)\r\n    setAnalytics(\r\n      analytic.map((task) =>\r\n        task.id === id ? { ...task, show: !task.show } : { ...task, show: false }\r\n      )\r\n    )\r\n  }\r\n  const activateLayer = (id) => {\r\n    setTasks(\r\n      tasks.map((task) =>\r\n        task.id === id ? { ...task, show: !task.show } : task\r\n      )\r\n    )\r\n  }\r\n  //toggle visibility \r\n  const changeVisibility = (id) => {\r\n\r\n    setVisibility(\r\n      visibility.map((task) =>\r\n        task.id === id ? { ...task, show: true } : { ...task, show: false }\r\n      )\r\n    )\r\n    //changeVisibility: false \r\n\r\n    //content \r\n\r\n\r\n\r\n\r\n  }\r\n  return (\r\n    <div className='container'>\r\n\r\n      <SideBarWrapper\r\n        visibility={visibility}\r\n        tasks={layer}\r\n        activateLayer={activateLayer}\r\n        analyticsLayers={analytics}\r\n        activateLayer1={activateAnalytics}\r\n        changeVisibility={changeVisibility}\r\n        ChangeMap={ChangeMap}\r\n\r\n      />\r\n\r\n      <Map\r\n        tasks={tasks}\r\n        changeLayer={activateLayer}\r\n        analyticsLayers={analytic}\r\n        updateBox={updateInfo}\r\n        mapslayer={mapsvisibility}\r\n      />\r\n      <InfoBox\r\n        info={info}\r\n      />\r\n\r\n      <Legend\r\n        tasks={tasks}\r\n      />\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default App\r\n","C:\\Users\\Sanjiban\\ReactGeoportal\\src\\reportWebVitals.js",[],"C:\\Users\\Sanjiban\\ReactGeoportal\\src\\config.js",[],"C:\\Users\\Sanjiban\\ReactGeoportal\\src\\components\\Map.js",["65","66","67"],"import React, { useState } from 'react'\r\nimport L from 'leaflet';\r\nimport { maps } from '../config'\r\nconst style = {\r\n\r\n    width: '100%',\r\n    bottom: '0px',\r\n    top: '0px',\r\n    left: '0px',\r\n    position: 'absolute',\r\n    margin: 0\r\n}\r\n\r\nconst osm = L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw', {\r\n    maxZoom: 18,\r\n    id: 'mapbox/streets-v11',\r\n    tileSize: 512,\r\n    zoomOffset: -1\r\n});\r\nconst mapParams = {\r\n    center: [25.95681, 91.7362],\r\n    zoomControl: false,\r\n    attributionControl: false,\r\n    zoom: 8,\r\n    layers: [osm]\r\n}\r\n\r\n\r\nclass Map extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            activeLayers: [],\r\n            mapId: 'mainMap'\r\n        };\r\n        this.layer = null;\r\n        this.mainMap = null;\r\n        this.mapControls = null;\r\n        this.progress = null;\r\n        this.analyticsLayer = null\r\n        this.maplayer = null\r\n\r\n\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.mainMap = L.map('map', mapParams)\r\n        this.mainMap.on('click', (e) => {\r\n            this.props.updateBox(e)\r\n            console.log(\"Test\")\r\n        });\r\n\r\n    }\r\n    componentDidUpdate(prevProps, nextprops) {\r\n        for (var i = 0; i < this.props.tasks.length; i++) {\r\n            if (prevProps.tasks.length !== 0) {\r\n                if (prevProps.tasks[i].show !== this.props.tasks[i].show) {\r\n                    this.showActiveLayer(i)\r\n                }\r\n            }\r\n        }\r\n\r\n        for (i = 0; i < this.props.analyticsLayers.length; i++) {\r\n\r\n            if (prevProps.analyticsLayers !== this.props.analyticsLayers && this.props.analyticsLayers[i].show === true) {\r\n                this.showAnalyticsLayer(this.props.analyticsLayers[i])\r\n                // console.log(this.props.analyticsLayers[i])\r\n            }\r\n\r\n        }\r\n\r\n\r\n        for (i = 0; i < this.props.mapslayer.length; i++) {\r\n\r\n            if (prevProps.mapslayer !== this.props.mapslayer && this.props.mapslayer[i].show === true) {\r\n                this.showMapsLayer(this.props.mapslayer[i])\r\n                //console.log(this.props.analyticsLayers[i])\r\n            }\r\n\r\n        }\r\n\r\n\r\n    }\r\n    showActiveLayer(e) {\r\n        if (this.props.tasks[e].show) {\r\n            this.layer = L.tileLayer.wms(\"https://apps.nesdr.gov.in:442/geoserver/wms\", {\r\n                layers: this.props.tasks[e].layer,\r\n                format: \"image/png\",\r\n                transparent: true,\r\n            })\r\n            this.mainMap.addLayer(this.layer)\r\n        }\r\n        else {\r\n            var keys_array = Object.keys(this.mainMap._layers).map(key => parseInt(key))\r\n            keys_array.map(d => {\r\n                if (this.props.tasks[e].layer === this.mainMap._layers[d].options.layers) {\r\n                    this.mainMap.removeLayer(this.mainMap._layers[d])\r\n                }\r\n            })\r\n        }\r\n    }\r\n\r\n    showAnalyticsLayer(e) {\r\n        console.log(e)\r\n        // if (this.props.tasks[e].show) {\r\n        if (this.analyticsLayer != null) {\r\n            this.mainMap.removeLayer(this.analyticsLayer)\r\n        }\r\n        this.analyticsLayer = L.tileLayer(\"https://vedas.sac.gov.in/InteractiveGeoService/tms_comp_diff/NDVI_MODIS/{z}/{x}/{-y}?tm_arr1=1616976000&tm_arr2=1585440000&opr=max&min_val=0&max_val=250&color_map_name=NDVI_DIFF\")\r\n\r\n        this.mainMap.addLayer(this.analyticsLayer)\r\n    }\r\n\r\n    //maps layer update\r\n    showMapsLayer(e) {\r\n        console.log(e.link)\r\n        if (this.maplayer != null) {\r\n            this.mainMap.removeLayer(this.maplayer)\r\n        }\r\n        this.maplayer = L.tileLayer.wms(e.link, {\r\n            layers: e.layer,\r\n            format: e.format,\r\n            zIndex: 1,\r\n            subdomains: e.domain\r\n        });\r\n        this.mainMap.addLayer(this.maplayer)\r\n    }\r\n    render() {\r\n        return <div id=\"map\" className=\"mapStyle\" style={style}></div>;\r\n    }\r\n}\r\nexport default Map\r\n","C:\\Users\\Sanjiban\\ReactGeoportal\\src\\components\\Legend.js",[],"C:\\Users\\Sanjiban\\ReactGeoportal\\src\\components\\InfoBox.js",[],"C:\\Users\\Sanjiban\\ReactGeoportal\\src\\components\\SideBarWrapper.js",["68","69","70","71","72","73","74"],"//import necessary lib\r\nimport React, { Component } from 'react'\r\nimport SidePanel from './SidePanel'\r\nimport LayerTree from './LayerTree'\r\nimport AnalyticsLayers from './AnalyticsLayers'\r\nimport SatelliteIcon from '@material-ui/icons/Satellite';\r\nimport MapIcon from '@material-ui/icons/Map';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Tabs from '@material-ui/core/Tabs';\r\nimport Tab from '@material-ui/core/Tab';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Accordion from '@material-ui/core/Accordion';\r\nimport AccordionSummary from '@material-ui/core/AccordionSummary';\r\nimport AccordionDetails from '@material-ui/core/AccordionDetails';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport Select from 'react-select';\r\n\r\n// import CreatableSelect from 'react-select/creatable';\r\n//end of import \r\n\r\nconst SideBarWrapper = ({ tasks, analyticsLayers, activateLayer, activateLayer1, changeVisibility, visibility, ChangeMap }) => {\r\n    //Tab view start \r\n    const [value, setValue] = React.useState(0);\r\n    const handleChange = (event, newValue) => {\r\n        setValue(newValue);\r\n\r\n    };\r\n    //tab view ends\r\n\r\n    //accordion start\r\n    const useStyles = makeStyles((theme) => ({\r\n        root: {\r\n            width: '100%',\r\n        },\r\n        heading: {\r\n            fontSize: theme.typography.pxToRem(15),\r\n            fontWeight: theme.typography.fontWeightRegular,\r\n        },\r\n    }));\r\n    const classes = useStyles();\r\n    // accordion ends\r\n\r\n    //hind show sideBarwarapper start\r\n    var data_filter = visibility.filter(element => element.show)\r\n    var type = data_filter[0].id\r\n    // hide show sideBarWrapper ends\r\n\r\n\r\n    // ******************************** fatch date data from database Start*******************************\r\n\r\n    // declare list of array *PS: array used in select in list \r\n    var arrays = {\r\n        ndvidates: [],\r\n        soil_moisture_dates: [],\r\n        et_dates: []\r\n    };\r\n\r\n    //main function *API Key Required\r\n    function getdates(name, value) {\r\n        const formData = new FormData();\r\n        formData.append('database', name);\r\n        fetch(\r\n            'https://mobileapp.nesdr.gov.in/analytics_api/modis_ndvi.php?key=mgy1exz0n8mXQXi8NrOq24DDvmLrZ16a',\r\n            {\r\n                method: 'POST',\r\n                body: formData,\r\n            }\r\n        )\r\n            .then((response) => response.json())\r\n            .then((result) => {\r\n                //console.log('Success:', result);\r\n                let datafromapi = result.map(data => {\r\n                    arrays[value].push({\r\n                        value: data.date,\r\n                        label: data.date,\r\n                        rating: data.date\r\n                    })\r\n                })\r\n            })\r\n            .catch((error) => {\r\n                console.error('Error:', error);\r\n            });\r\n    }\r\n\r\n    setTimeout(\r\n        function () {\r\n            console.log(arrays.ndvidates[0].value)\r\n        }\r\n            .bind(this),\r\n        2000\r\n    );\r\n    // get date function *PS: put database name and array name used in select list \r\n    getdates('modis_ndvi', 'ndvidates')\r\n    getdates('soil_date', 'soil_moisture_dates')\r\n    getdates('et', 'et_dates')\r\n\r\n    // ******************************** fatch date data from database End here*******************************\r\n\r\n    //handle input change\r\n\r\n    const handleInputChange = (newValue) => {\r\n        if (newValue) {\r\n            const inputValue = newValue.replace(/\\W/g, '');\r\n            console.log(newValue)\r\n            alert('HI')\r\n        }\r\n        else {\r\n            console.log('Empty')\r\n        }\r\n    };\r\n\r\n\r\n\r\n    //return view\r\n    return (\r\n        <div className=\"SideBarWrapper\">\r\n            {/* load of side panel start */}\r\n            <SidePanel\r\n                changeVisibility={changeVisibility}\r\n            />\r\n            {/* load of side panel start */}\r\n\r\n            {/* *************Layer Tab start*************** */}\r\n            <div className={type === 'Layer' ? 'LayerContainer' : 'hidden'}>\r\n                {/* List of map layers */}\r\n                <ul>\r\n                    <li key={2} onClick={() => ChangeMap('Cartodb')} >< MapIcon />\r\n                        <span> Cartodb</span>\r\n                    </li>\r\n                    <hr>\r\n                    </hr>\r\n                    <li key={3} onClick={() => ChangeMap('Bhuvan')} >< MapIcon />\r\n                        <span> Bhuvan</span>\r\n                    </li>\r\n                    <hr>\r\n                    </hr>\r\n                    <li key={4} onClick={() => ChangeMap('BhuvanSatellite')} ><SatelliteIcon />\r\n                        <span> BhuvanSatellite</span>\r\n                    </li>\r\n                    <hr>\r\n                    </hr>\r\n                    <li key={5} onClick={() => ChangeMap('Open_Street')} ><MapIcon />\r\n                        <span> Open Street</span>\r\n                    </li>\r\n                    <hr>\r\n                    </hr>\r\n                    <li key={6} onClick={() => ChangeMap('Google_Map')} ><MapIcon />\r\n                        <span> Google Map</span>\r\n                    </li>\r\n                    <hr>\r\n                    </hr>\r\n                    <li key={7} onClick={() => ChangeMap('Google_Satellite')} ><SatelliteIcon />\r\n                        <span> Google Satellite</span>\r\n                    </li>\r\n                    <hr>\r\n                    </hr>\r\n                </ul>\r\n\r\n                <LayerTree\r\n                    tasks={tasks}\r\n                    changeLayer={activateLayer}\r\n                    category=\"Administrator\"\r\n                />\r\n                <LayerTree\r\n                    tasks={tasks}\r\n                    changeLayer={activateLayer}\r\n                    category=\"Land Use/Land Cover\"\r\n                />\r\n                <LayerTree\r\n                    tasks={tasks}\r\n                    changeLayer={activateLayer}\r\n                    category=\"Census\"\r\n                />\r\n\r\n            </div>\r\n            {/* *************Layer Tab end*************** */}\r\n\r\n\r\n            {/* *************Vegetation Tab start*************** */}\r\n            <div className={type === 'Vegetation' ? 'LayerContainer' : 'hidden'}>\r\n                {/* Tab View */}\r\n                <Paper square>\r\n                    <Tabs\r\n                        value={value}\r\n                        indicatorColor=\"primary\"\r\n                        textColor=\"primary\"\r\n                        onChange={handleChange}\r\n                        aria-label=\"disabled tabs example\"\r\n                    >\r\n                        <Tab label=\"Visualization\" />\r\n                        <Tab label=\"Analysis\" />\r\n\r\n                    </Tabs>\r\n\r\n                </Paper>\r\n                {/* Tab1 Data */}\r\n                <div className={value === 0 ? ' ' : 'hidden'}>\r\n                    <Accordion>\r\n                        <AccordionSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                            aria-controls=\"panel1a-content\"\r\n                            id=\"panel1a-header\"\r\n                        >\r\n                            <Typography className={classes.heading}>MODIS NDVI</Typography>\r\n                        </AccordionSummary>\r\n                        <AccordionDetails>\r\n\r\n                            <Select className=\"css-e56m7-control\"\r\n                                defaultValue=\"Select\"\r\n                                label=\"Single select\"\r\n                                options={arrays.ndvidates}\r\n                                onChange={handleChange}\r\n                                theme={theme => ({\r\n                                    ...theme,\r\n\r\n                                    borderRadius: 1,\r\n\r\n                                })}\r\n                            />\r\n\r\n                        </AccordionDetails>\r\n                    </Accordion>\r\n                    <Accordion>\r\n                        <AccordionSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                            aria-controls=\"panel2a-content\"\r\n                            id=\"panel2a-header\"\r\n                        >\r\n                            <Typography className={classes.heading}>SOIL MOISTURE (SMAP)</Typography>\r\n                        </AccordionSummary>\r\n                        <AccordionDetails>\r\n                            <Select className=\"css-e56m7-control\"\r\n                                defaultValue={arrays.soil_moisture_dates[2]}\r\n                                label=\"Single select\"\r\n                                options={arrays.soil_moisture_dates}\r\n                                theme={theme => ({\r\n                                    ...theme,\r\n\r\n                                    borderRadius: 1,\r\n\r\n                                })}\r\n                            />\r\n                        </AccordionDetails>\r\n                    </Accordion>\r\n                    <Accordion>\r\n                        <AccordionSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                            aria-controls=\"panel3a-content\"\r\n                            id=\"panel3a-header\"\r\n                        >\r\n                            <Typography className={classes.heading}>Evapotranspiration</Typography>\r\n                        </AccordionSummary>\r\n                        <AccordionDetails>\r\n                            <Select className=\"css-e56m7-control\"\r\n                                defaultValue={arrays.et_dates[2]}\r\n                                label=\"Single select\"\r\n                                options={arrays.et_dates}\r\n                                theme={theme => ({\r\n                                    ...theme,\r\n\r\n                                    borderRadius: 1,\r\n\r\n                                })}\r\n                            />\r\n                        </AccordionDetails>\r\n                    </Accordion>\r\n                    <Accordion>\r\n                        <AccordionSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                            aria-controls=\"panel3a-content\"\r\n                            id=\"panel3a-header\"\r\n                        >\r\n                            <Typography className={classes.heading}>Tree cover</Typography>\r\n                        </AccordionSummary>\r\n                        <AccordionDetails>\r\n                            <Select className=\"css-e56m7-control\"\r\n                                defaultValue={arrays.ndvidates[2]}\r\n                                label=\"Single select\"\r\n                                options={arrays.ndvidates}\r\n                                theme={theme => ({\r\n                                    ...theme,\r\n\r\n                                    borderRadius: 1,\r\n\r\n                                })}\r\n                            />\r\n                        </AccordionDetails>\r\n                    </Accordion>\r\n                    <Accordion>\r\n                        <AccordionSummary\r\n                            expandIcon={<ExpandMoreIcon />}\r\n                            aria-controls=\"panel2a-content\"\r\n                            id=\"panel2a-header\"\r\n                        >\r\n                            <Typography className={classes.heading}>Tree cover gain</Typography>\r\n                        </AccordionSummary>\r\n                        <AccordionDetails>\r\n                            <Select className=\"css-e56m7-control\"\r\n                                defaultValue={arrays.ndvidates[2]}\r\n                                label=\"Single select\"\r\n                                options={arrays.ndvidates}\r\n                                theme={theme => ({\r\n                                    ...theme,\r\n\r\n                                    borderRadius: 1,\r\n\r\n                                })}\r\n                            />\r\n                        </AccordionDetails>\r\n                    </Accordion>\r\n\r\n                </div>\r\n                {/* Tab2 Data */}\r\n                <div className={value === 1 ? ' ' : 'hidden'}>\r\n                    <LayerTree\r\n                        tasks={tasks}\r\n                        changeLayer={activateLayer}\r\n                        category=\"Two\"\r\n                        state='test'\r\n                    />\r\n                    <LayerTree\r\n                        tasks={tasks}\r\n                        changeLayer={activateLayer}\r\n                        category=\"Natural Resource\"\r\n                    />\r\n                </div>\r\n\r\n            </div>\r\n            {/* *************Vegetation Tab end*************** */}\r\n\r\n\r\n            {/* *************Weather Tab start*************** */}\r\n            <div className={type === 'Weather' ? 'LayerContainer' : 'hidden'}>\r\n                <LayerTree\r\n                    tasks={tasks}\r\n                    changeLayer={activateLayer}\r\n                    category=\"Admin\"\r\n                    state='test'\r\n                />\r\n                <LayerTree\r\n                    tasks={tasks}\r\n                    changeLayer={activateLayer}\r\n                    category=\"Natural Resource\"\r\n                />\r\n            </div>\r\n            {/* *************Weather Tab end*************** */}\r\n\r\n            {/* *************Water Resources Tab start*************** */}\r\n            <div className={type === 'Water_Resources' ? 'LayerContainer' : 'hidden'}>\r\n                <LayerTree\r\n                    tasks={tasks}\r\n                    changeLayer={activateLayer}\r\n                    category=\"Admin\"\r\n                    state='test'\r\n                />\r\n                <LayerTree\r\n                    tasks={tasks}\r\n                    changeLayer={activateLayer}\r\n                    category=\"Natural Resource\"\r\n                />\r\n            </div>\r\n            {/* *************Water Resources Tab end*************** */}\r\n\r\n            {/* *************Satellite Imagery Tab start*************** */}\r\n            <div className={type === 'Satellite_Imagery' ? 'LayerContainer' : 'hidden'}>\r\n                <LayerTree\r\n                    tasks={tasks}\r\n                    changeLayer={activateLayer}\r\n                    category=\"Admin\"\r\n                    state='test'\r\n                />\r\n                <LayerTree\r\n                    tasks={tasks}\r\n                    changeLayer={activateLayer}\r\n                    category=\"Natural Resource\"\r\n                />\r\n            </div>\r\n            {/* *************Satellite Imagery Tab end*************** */}\r\n\r\n            {/* *************Vedas Services Tab start*************** */}\r\n            <div className={type === 'Vedas_Services' ? 'LayerContainer' : 'hidden'}>\r\n                <LayerTree\r\n                    tasks={tasks}\r\n                    changeLayer={activateLayer}\r\n                    category=\"Admin\"\r\n                    state='test'\r\n                />\r\n                <LayerTree\r\n                    tasks={tasks}\r\n                    changeLayer={activateLayer}\r\n                    category=\"Natural Resource\"\r\n                />\r\n            </div>\r\n            {/* *************Vedas Services Tab start*************** */}\r\n        </div>\r\n\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default SideBarWrapper","C:\\Users\\Sanjiban\\ReactGeoportal\\src\\components\\Info.js",[],"C:\\Users\\Sanjiban\\ReactGeoportal\\src\\components\\SidePanel.js",[],"C:\\Users\\Sanjiban\\ReactGeoportal\\src\\components\\LayerTree.js",[],"C:\\Users\\Sanjiban\\ReactGeoportal\\src\\components\\AnalyticsLayers.js",[],"C:\\Users\\Sanjiban\\ReactGeoportal\\src\\components\\Layer.js",[],"C:\\Users\\Sanjiban\\ReactGeoportal\\src\\components\\LayerAnalytics.js",[],{"ruleId":"75","replacedBy":"76"},{"ruleId":"77","replacedBy":"78"},{"ruleId":"79","severity":1,"message":"80","line":11,"column":10,"nodeType":"81","messageId":"82","endLine":11,"endColumn":38},{"ruleId":"79","severity":1,"message":"83","line":1,"column":17,"nodeType":"81","messageId":"82","endLine":1,"endColumn":25},{"ruleId":"79","severity":1,"message":"84","line":3,"column":10,"nodeType":"81","messageId":"82","endLine":3,"endColumn":14},{"ruleId":"85","severity":1,"message":"86","line":97,"column":30,"nodeType":"87","messageId":"88","endLine":97,"endColumn":32},{"ruleId":"79","severity":1,"message":"89","line":2,"column":17,"nodeType":"81","messageId":"82","endLine":2,"endColumn":26},{"ruleId":"79","severity":1,"message":"90","line":5,"column":8,"nodeType":"81","messageId":"82","endLine":5,"endColumn":23},{"ruleId":"79","severity":1,"message":"91","line":73,"column":21,"nodeType":"81","messageId":"82","endLine":73,"endColumn":32},{"ruleId":"85","severity":1,"message":"86","line":73,"column":51,"nodeType":"87","messageId":"88","endLine":73,"endColumn":53},{"ruleId":"92","severity":1,"message":"93","line":90,"column":14,"nodeType":"94","messageId":"95","endLine":90,"endColumn":18,"fix":"96"},{"ruleId":"79","severity":1,"message":"97","line":102,"column":11,"nodeType":"81","messageId":"82","endLine":102,"endColumn":28},{"ruleId":"79","severity":1,"message":"98","line":104,"column":19,"nodeType":"81","messageId":"82","endLine":104,"endColumn":29},"no-native-reassign",["99"],"no-negated-in-lhs",["100"],"no-unused-vars","'PlayCircleFilledWhiteRounded' is defined but never used.","Identifier","unusedVar","'useState' is defined but never used.","'maps' is defined but never used.","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'Component' is defined but never used.","'AnalyticsLayers' is defined but never used.","'datafromapi' is assigned a value but never used.","no-extra-bind","The function binding is unnecessary.","CallExpression","unexpected",{"range":"101","text":"102"},"'handleInputChange' is assigned a value but never used.","'inputValue' is assigned a value but never used.","no-global-assign","no-unsafe-negation",[3073,3084],""]
[{"/media/nilay/New Volume/nesac/Testing/test1/ReactGeoportal/src/App.js":"1","/media/nilay/New Volume/nesac/Testing/test1/ReactGeoportal/src/components/Legend.js":"2","/media/nilay/New Volume/nesac/Testing/test1/ReactGeoportal/src/components/SideBarWrapper.js":"3","/media/nilay/New Volume/nesac/Testing/test1/ReactGeoportal/src/components/Layer.js":"4","/media/nilay/New Volume/nesac/Testing/test1/ReactGeoportal/src/index.js":"5","/media/nilay/New Volume/nesac/Testing/test1/ReactGeoportal/src/reportWebVitals.js":"6","/media/nilay/New Volume/nesac/Testing/test1/ReactGeoportal/src/components/InfoBox.js":"7","/media/nilay/New Volume/nesac/Testing/test1/ReactGeoportal/src/components/Header.js":"8","/media/nilay/New Volume/nesac/Testing/test1/ReactGeoportal/src/components/Map.js":"9","/media/nilay/New Volume/nesac/Testing/test1/ReactGeoportal/src/components/Info.js":"10","/media/nilay/New Volume/nesac/Testing/test1/ReactGeoportal/src/components/SidePanel.js":"11","/media/nilay/New Volume/nesac/Testing/test1/ReactGeoportal/src/components/LayerTree.js":"12","/media/nilay/New Volume/nesac/Testing/test1/ReactGeoportal/src/config.js":"13"},{"size":1306,"mtime":1616347628069,"results":"14","hashOfConfig":"15"},{"size":279,"mtime":1616003466836,"results":"16","hashOfConfig":"15"},{"size":1033,"mtime":1616310901608,"results":"17","hashOfConfig":"15"},{"size":424,"mtime":1616350821962,"results":"18","hashOfConfig":"15"},{"size":500,"mtime":1614957099386,"results":"19","hashOfConfig":"15"},{"size":362,"mtime":1614957099386,"results":"20","hashOfConfig":"15"},{"size":433,"mtime":1616003466821,"results":"21","hashOfConfig":"15"},{"size":376,"mtime":1616310901586,"results":"22","hashOfConfig":"15"},{"size":2233,"mtime":1616310901592,"results":"23","hashOfConfig":"15"},{"size":900,"mtime":1616003466819,"results":"24","hashOfConfig":"15"},{"size":905,"mtime":1616316525695,"results":"25","hashOfConfig":"15"},{"size":712,"mtime":1616310901591,"results":"26","hashOfConfig":"15"},{"size":1333,"mtime":1616322757115,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"5j6cin",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"/media/nilay/New Volume/nesac/Testing/test1/ReactGeoportal/src/App.js",[],"/media/nilay/New Volume/nesac/Testing/test1/ReactGeoportal/src/components/Legend.js",[],["59","60"],"/media/nilay/New Volume/nesac/Testing/test1/ReactGeoportal/src/components/SideBarWrapper.js",[],"/media/nilay/New Volume/nesac/Testing/test1/ReactGeoportal/src/components/Layer.js",[],"/media/nilay/New Volume/nesac/Testing/test1/ReactGeoportal/src/index.js",[],"/media/nilay/New Volume/nesac/Testing/test1/ReactGeoportal/src/reportWebVitals.js",[],"/media/nilay/New Volume/nesac/Testing/test1/ReactGeoportal/src/components/InfoBox.js",[],"/media/nilay/New Volume/nesac/Testing/test1/ReactGeoportal/src/components/Header.js",["61"],"import PropTypes from 'prop-types'\n\nconst Header = ({title}) => {\n\n  return (\n    <header className='header'>\n      <h1></h1>\n      \n    </header>\n  )\n}\n\nHeader.defaultProps = {\n  title: 'Layers',\n}\n\nHeader.propTypes = {\n  title: PropTypes.string.isRequired,\n}\n\n// CSS in JS\n// const headingStyle = {\n//   color: 'red',\n//   backgroundColor: 'black',\n// }\n\nexport default Header\n",["62","63"],"/media/nilay/New Volume/nesac/Testing/test1/ReactGeoportal/src/components/Map.js",["64"],"import React from 'react'\nimport L from 'leaflet';\nconst style = {\n\n    width: '100%',\n    bottom: '0px',\n    top: '0px',\n    left: '0px',\n    position: 'absolute',\n    margin: 0\n}\n\nconst osm = L.tileLayer('https://api.mapbox.com/styles/v1/{id}/tiles/{z}/{x}/{y}?access_token=pk.eyJ1IjoibWFwYm94IiwiYSI6ImNpejY4NXVycTA2emYycXBndHRqcmZ3N3gifQ.rJcFIG214AriISLbB6B5aw', {\n    maxZoom: 18,\n    id: 'mapbox/streets-v11',\n    tileSize: 512,\n    zoomOffset: -1\n});\nconst mapParams = {\n    center: [25.95681, 91.7362],\n    zoomControl: false,\n    attributionControl: false,\n    zoom: 8,\n    layers: [osm]\n}\n\n\n\nclass Map extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            activeLayers: [],\n            mapId: 'mainMap'\n        };\n        this.layer = null;\n        this.mainMap = null;\n        this.mapControls = null;\n        this.progress = null;\n\n    }\n\n    componentDidMount() {\n        this.mainMap = L.map('map', mapParams)\n        this.mainMap.on('click', (e) => {\n            this.props.updateBox(e)\n            console.log(\"Test\")\n        });\n\n    }\n    componentDidUpdate(prevProps) {\n        for (var i = 0; i < this.props.tasks.length; i++) {\n            if (prevProps.tasks.length !== 0) {\n                if (prevProps.tasks[i].show !== this.props.tasks[i].show) {\n                    this.showActiveLayer(i)\n                }\n            }\n        }\n\n\n    }\n    showActiveLayer(e) {\n        if (this.props.tasks[e].show) {\n            this.layer = L.tileLayer.wms(\"https://apps.nesdr.gov.in:442/geoserver/wms\", {\n                layers: this.props.tasks[e].layer,\n                format: \"image/png\",\n                transparent: true,\n            })\n            this.mainMap.addLayer(this.layer)\n        }\n        else {\n            var keys_array = Object.keys(this.mainMap._layers).map(key => parseInt(key))\n            keys_array.map(d => {\n                if (this.props.tasks[e].layer === this.mainMap._layers[d].options.layers) {\n                    this.mainMap.removeLayer(this.mainMap._layers[d])\n                }\n            })\n        }\n    }\n    render() {\n        return <div id=\"map\" className=\"mapStyle\" style={style}></div>;\n    }\n}\nexport default Map\n","/media/nilay/New Volume/nesac/Testing/test1/ReactGeoportal/src/components/Info.js",[],"/media/nilay/New Volume/nesac/Testing/test1/ReactGeoportal/src/components/SidePanel.js",["65"],"import React from 'react'\nimport CloudIcon from '@material-ui/icons/Cloud';\nimport LayersIcon from '@material-ui/icons/Layers';\nimport EcoIcon from '@material-ui/icons/Eco';\n\nconst SidePanel = ({changeVisibility}) => {\n\n    return (\n        <div className=\"SidePanel\">\n            <ul>\n                <li className=\"logo\"><img src=\"./NeSDRLogo1.png\"/>\n                </li>\n                <li><CloudIcon/>\n                    <span>Cloud</span>\n                </li>\n                <hr></hr>\n                <li><LayersIcon onClick={() => changeVisibility()}/>\n                <span>Layer</span>\n                </li>\n                <hr></hr>\n                <li><EcoIcon/>\n                <span>Vegetation</span>\n                </li>\n                <li><CloudIcon/>\n                <span>Cloud</span>\n                </li>\n            </ul>\n        </div>\n        \n    )\n}\n\nexport default SidePanel","/media/nilay/New Volume/nesac/Testing/test1/ReactGeoportal/src/components/LayerTree.js",[],"/media/nilay/New Volume/nesac/Testing/test1/ReactGeoportal/src/config.js",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":7,"column":7,"nodeType":"72","endLine":7,"endColumn":11},{"ruleId":"66","replacedBy":"73"},{"ruleId":"68","replacedBy":"74"},{"ruleId":"75","severity":1,"message":"76","line":73,"column":30,"nodeType":"77","messageId":"78","endLine":73,"endColumn":32},{"ruleId":"79","severity":1,"message":"80","line":11,"column":38,"nodeType":"72","endLine":11,"endColumn":67},"no-native-reassign",["81"],"no-negated-in-lhs",["82"],"jsx-a11y/heading-has-content","Headings must have content and the content must be accessible by a screen reader.","JSXOpeningElement",["81"],["82"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","no-global-assign","no-unsafe-negation"]